// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.24.4
// source: omni/specs/auth.proto

package specs

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/siderolabs/talos/pkg/machinery/api/machine"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AuthConfigSpec describes the authentication configuration.
type AuthConfigSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth0     *AuthConfigSpec_Auth0    `protobuf:"bytes,1,opt,name=auth0,proto3" json:"auth0,omitempty"`
	Webauthn  *AuthConfigSpec_Webauthn `protobuf:"bytes,2,opt,name=webauthn,proto3" json:"webauthn,omitempty"`
	Suspended bool                     `protobuf:"varint,3,opt,name=suspended,proto3" json:"suspended,omitempty"`
	Saml      *AuthConfigSpec_SAML     `protobuf:"bytes,4,opt,name=saml,proto3" json:"saml,omitempty"`
}

func (x *AuthConfigSpec) Reset() {
	*x = AuthConfigSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfigSpec) ProtoMessage() {}

func (x *AuthConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfigSpec.ProtoReflect.Descriptor instead.
func (*AuthConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthConfigSpec) GetAuth0() *AuthConfigSpec_Auth0 {
	if x != nil {
		return x.Auth0
	}
	return nil
}

func (x *AuthConfigSpec) GetWebauthn() *AuthConfigSpec_Webauthn {
	if x != nil {
		return x.Webauthn
	}
	return nil
}

func (x *AuthConfigSpec) GetSuspended() bool {
	if x != nil {
		return x.Suspended
	}
	return false
}

func (x *AuthConfigSpec) GetSaml() *AuthConfigSpec_SAML {
	if x != nil {
		return x.Saml
	}
	return nil
}

// SAMLAssertionSpec describes SAML assertion.
type SAMLAssertionSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data keeps JSON encoded SAML assertion.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Email is the identity that was read from the assertion.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// Used marks SAML assertion as used.
	Used bool `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
}

func (x *SAMLAssertionSpec) Reset() {
	*x = SAMLAssertionSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAMLAssertionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMLAssertionSpec) ProtoMessage() {}

func (x *SAMLAssertionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMLAssertionSpec.ProtoReflect.Descriptor instead.
func (*SAMLAssertionSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{1}
}

func (x *SAMLAssertionSpec) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SAMLAssertionSpec) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SAMLAssertionSpec) GetUsed() bool {
	if x != nil {
		return x.Used
	}
	return false
}

// UserSpec describes a user.
type UserSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Scopes are deprecated, use roles instead.
	//
	// Deprecated: will be removed once all environments are migrated to use roles.
	// TODO: remove after all environments are migrated to use roles.
	Scopes []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	Role   string   `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UserSpec) Reset() {
	*x = UserSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSpec) ProtoMessage() {}

func (x *UserSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSpec.ProtoReflect.Descriptor instead.
func (*UserSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{2}
}

func (x *UserSpec) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *UserSpec) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

// IdentitySpec describes a user identity.
type IdentitySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *IdentitySpec) Reset() {
	*x = IdentitySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentitySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentitySpec) ProtoMessage() {}

func (x *IdentitySpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentitySpec.ProtoReflect.Descriptor instead.
func (*IdentitySpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{3}
}

func (x *IdentitySpec) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{4}
}

func (x *Identity) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// PublicKeySpec describes a user or service account public key.
type PublicKeySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Scopes are deprecated, use roles instead.
	//
	// Deprecated: will be removed once all environments are migrated to use roles.
	// TODO: remove after all environments are migrated to use roles.
	Scopes     []string               `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	Expiration *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Confirmed  bool                   `protobuf:"varint,4,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Identity   *Identity              `protobuf:"bytes,5,opt,name=identity,proto3" json:"identity,omitempty"`
	Role       string                 `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *PublicKeySpec) Reset() {
	*x = PublicKeySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeySpec) ProtoMessage() {}

func (x *PublicKeySpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeySpec.ProtoReflect.Descriptor instead.
func (*PublicKeySpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{5}
}

func (x *PublicKeySpec) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PublicKeySpec) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *PublicKeySpec) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *PublicKeySpec) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *PublicKeySpec) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *PublicKeySpec) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

// AccessPolicyUserGroup describes a user group in the ACLs context.
type AccessPolicyUserGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*AccessPolicyUserGroup_User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *AccessPolicyUserGroup) Reset() {
	*x = AccessPolicyUserGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyUserGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyUserGroup) ProtoMessage() {}

func (x *AccessPolicyUserGroup) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyUserGroup.ProtoReflect.Descriptor instead.
func (*AccessPolicyUserGroup) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{6}
}

func (x *AccessPolicyUserGroup) GetUsers() []*AccessPolicyUserGroup_User {
	if x != nil {
		return x.Users
	}
	return nil
}

// AccessPolicyClusterGroup describes a cluster group in the ACLs context.
type AccessPolicyClusterGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*AccessPolicyClusterGroup_Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *AccessPolicyClusterGroup) Reset() {
	*x = AccessPolicyClusterGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyClusterGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyClusterGroup) ProtoMessage() {}

func (x *AccessPolicyClusterGroup) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyClusterGroup.ProtoReflect.Descriptor instead.
func (*AccessPolicyClusterGroup) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{7}
}

func (x *AccessPolicyClusterGroup) GetClusters() []*AccessPolicyClusterGroup_Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

// AccessPolicyRule describes a rule in the ACLs context.
type AccessPolicyRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users      []string                     `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Clusters   []string                     `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	Kubernetes *AccessPolicyRule_Kubernetes `protobuf:"bytes,3,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	Role       string                       `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AccessPolicyRule) Reset() {
	*x = AccessPolicyRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyRule) ProtoMessage() {}

func (x *AccessPolicyRule) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyRule.ProtoReflect.Descriptor instead.
func (*AccessPolicyRule) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{8}
}

func (x *AccessPolicyRule) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *AccessPolicyRule) GetClusters() []string {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *AccessPolicyRule) GetKubernetes() *AccessPolicyRule_Kubernetes {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *AccessPolicyRule) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AccessPolicyTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	User     *AccessPolicyTest_User     `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Cluster  *AccessPolicyTest_Cluster  `protobuf:"bytes,3,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Expected *AccessPolicyTest_Expected `protobuf:"bytes,4,opt,name=expected,proto3" json:"expected,omitempty"`
}

func (x *AccessPolicyTest) Reset() {
	*x = AccessPolicyTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyTest) ProtoMessage() {}

func (x *AccessPolicyTest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyTest.ProtoReflect.Descriptor instead.
func (*AccessPolicyTest) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{9}
}

func (x *AccessPolicyTest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessPolicyTest) GetUser() *AccessPolicyTest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AccessPolicyTest) GetCluster() *AccessPolicyTest_Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *AccessPolicyTest) GetExpected() *AccessPolicyTest_Expected {
	if x != nil {
		return x.Expected
	}
	return nil
}

// AccessPolicySpec describes the access policy configuration.
type AccessPolicySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroups    map[string]*AccessPolicyUserGroup    `protobuf:"bytes,1,rep,name=user_groups,json=userGroups,proto3" json:"user_groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterGroups map[string]*AccessPolicyClusterGroup `protobuf:"bytes,2,rep,name=cluster_groups,json=clusterGroups,proto3" json:"cluster_groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rules         []*AccessPolicyRule                  `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	Tests         []*AccessPolicyTest                  `protobuf:"bytes,4,rep,name=tests,proto3" json:"tests,omitempty"`
}

func (x *AccessPolicySpec) Reset() {
	*x = AccessPolicySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicySpec) ProtoMessage() {}

func (x *AccessPolicySpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicySpec.ProtoReflect.Descriptor instead.
func (*AccessPolicySpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{10}
}

func (x *AccessPolicySpec) GetUserGroups() map[string]*AccessPolicyUserGroup {
	if x != nil {
		return x.UserGroups
	}
	return nil
}

func (x *AccessPolicySpec) GetClusterGroups() map[string]*AccessPolicyClusterGroup {
	if x != nil {
		return x.ClusterGroups
	}
	return nil
}

func (x *AccessPolicySpec) GetRules() []*AccessPolicyRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *AccessPolicySpec) GetTests() []*AccessPolicyTest {
	if x != nil {
		return x.Tests
	}
	return nil
}

// SAMLLabelRuleSpec describes a rule on how to map Identity labels to Omni roles.
type SAMLLabelRuleSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MatchLabels is the list of labels to match the user's Identity against this rule.
	MatchLabels []string `protobuf:"bytes,1,rep,name=match_labels,json=matchLabels,proto3" json:"match_labels,omitempty"`
	// AssignRoleOnRegistration is the role to be assigned to the user if this rule matches.
	AssignRoleOnRegistration string `protobuf:"bytes,2,opt,name=assign_role_on_registration,json=assignRoleOnRegistration,proto3" json:"assign_role_on_registration,omitempty"`
}

func (x *SAMLLabelRuleSpec) Reset() {
	*x = SAMLLabelRuleSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAMLLabelRuleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMLLabelRuleSpec) ProtoMessage() {}

func (x *SAMLLabelRuleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMLLabelRuleSpec.ProtoReflect.Descriptor instead.
func (*SAMLLabelRuleSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{11}
}

func (x *SAMLLabelRuleSpec) GetMatchLabels() []string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *SAMLLabelRuleSpec) GetAssignRoleOnRegistration() string {
	if x != nil {
		return x.AssignRoleOnRegistration
	}
	return ""
}

type AuthConfigSpec_Auth0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled     bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Domain      string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	ClientId    string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UseFormData bool   `protobuf:"varint,4,opt,name=useFormData,proto3" json:"useFormData,omitempty"`
}

func (x *AuthConfigSpec_Auth0) Reset() {
	*x = AuthConfigSpec_Auth0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthConfigSpec_Auth0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfigSpec_Auth0) ProtoMessage() {}

func (x *AuthConfigSpec_Auth0) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfigSpec_Auth0.ProtoReflect.Descriptor instead.
func (*AuthConfigSpec_Auth0) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AuthConfigSpec_Auth0) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AuthConfigSpec_Auth0) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *AuthConfigSpec_Auth0) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthConfigSpec_Auth0) GetUseFormData() bool {
	if x != nil {
		return x.UseFormData
	}
	return false
}

type AuthConfigSpec_Webauthn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Required bool `protobuf:"varint,2,opt,name=required,proto3" json:"required,omitempty"`
}

func (x *AuthConfigSpec_Webauthn) Reset() {
	*x = AuthConfigSpec_Webauthn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthConfigSpec_Webauthn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfigSpec_Webauthn) ProtoMessage() {}

func (x *AuthConfigSpec_Webauthn) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfigSpec_Webauthn.ProtoReflect.Descriptor instead.
func (*AuthConfigSpec_Webauthn) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AuthConfigSpec_Webauthn) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AuthConfigSpec_Webauthn) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

type AuthConfigSpec_SAML struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Metadata string `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// LabelRules defines custom rules on how to extract SAML attributes from the
	// saml assertion and turn them into labels.
	LabelRules map[string]string `protobuf:"bytes,4,rep,name=label_rules,json=labelRules,proto3" json:"label_rules,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuthConfigSpec_SAML) Reset() {
	*x = AuthConfigSpec_SAML{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthConfigSpec_SAML) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfigSpec_SAML) ProtoMessage() {}

func (x *AuthConfigSpec_SAML) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfigSpec_SAML.ProtoReflect.Descriptor instead.
func (*AuthConfigSpec_SAML) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{0, 2}
}

func (x *AuthConfigSpec_SAML) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AuthConfigSpec_SAML) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AuthConfigSpec_SAML) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *AuthConfigSpec_SAML) GetLabelRules() map[string]string {
	if x != nil {
		return x.LabelRules
	}
	return nil
}

type AccessPolicyUserGroup_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Match          string   `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
	LabelSelectors []string `protobuf:"bytes,3,rep,name=label_selectors,json=labelSelectors,proto3" json:"label_selectors,omitempty"`
}

func (x *AccessPolicyUserGroup_User) Reset() {
	*x = AccessPolicyUserGroup_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyUserGroup_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyUserGroup_User) ProtoMessage() {}

func (x *AccessPolicyUserGroup_User) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyUserGroup_User.ProtoReflect.Descriptor instead.
func (*AccessPolicyUserGroup_User) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AccessPolicyUserGroup_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessPolicyUserGroup_User) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *AccessPolicyUserGroup_User) GetLabelSelectors() []string {
	if x != nil {
		return x.LabelSelectors
	}
	return nil
}

type AccessPolicyClusterGroup_Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Match string `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *AccessPolicyClusterGroup_Cluster) Reset() {
	*x = AccessPolicyClusterGroup_Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyClusterGroup_Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyClusterGroup_Cluster) ProtoMessage() {}

func (x *AccessPolicyClusterGroup_Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyClusterGroup_Cluster.ProtoReflect.Descriptor instead.
func (*AccessPolicyClusterGroup_Cluster) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{7, 0}
}

func (x *AccessPolicyClusterGroup_Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessPolicyClusterGroup_Cluster) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

type AccessPolicyRule_Kubernetes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Impersonate *AccessPolicyRule_Kubernetes_Impersonate `protobuf:"bytes,1,opt,name=impersonate,proto3" json:"impersonate,omitempty"`
}

func (x *AccessPolicyRule_Kubernetes) Reset() {
	*x = AccessPolicyRule_Kubernetes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyRule_Kubernetes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyRule_Kubernetes) ProtoMessage() {}

func (x *AccessPolicyRule_Kubernetes) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyRule_Kubernetes.ProtoReflect.Descriptor instead.
func (*AccessPolicyRule_Kubernetes) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{8, 0}
}

func (x *AccessPolicyRule_Kubernetes) GetImpersonate() *AccessPolicyRule_Kubernetes_Impersonate {
	if x != nil {
		return x.Impersonate
	}
	return nil
}

type AccessPolicyRule_Kubernetes_Impersonate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *AccessPolicyRule_Kubernetes_Impersonate) Reset() {
	*x = AccessPolicyRule_Kubernetes_Impersonate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyRule_Kubernetes_Impersonate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyRule_Kubernetes_Impersonate) ProtoMessage() {}

func (x *AccessPolicyRule_Kubernetes_Impersonate) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyRule_Kubernetes_Impersonate.ProtoReflect.Descriptor instead.
func (*AccessPolicyRule_Kubernetes_Impersonate) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *AccessPolicyRule_Kubernetes_Impersonate) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type AccessPolicyTest_Expected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kubernetes *AccessPolicyTest_Expected_Kubernetes `protobuf:"bytes,1,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	Role       string                                `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AccessPolicyTest_Expected) Reset() {
	*x = AccessPolicyTest_Expected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyTest_Expected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyTest_Expected) ProtoMessage() {}

func (x *AccessPolicyTest_Expected) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyTest_Expected.ProtoReflect.Descriptor instead.
func (*AccessPolicyTest_Expected) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{9, 0}
}

func (x *AccessPolicyTest_Expected) GetKubernetes() *AccessPolicyTest_Expected_Kubernetes {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *AccessPolicyTest_Expected) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AccessPolicyTest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AccessPolicyTest_User) Reset() {
	*x = AccessPolicyTest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyTest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyTest_User) ProtoMessage() {}

func (x *AccessPolicyTest_User) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyTest_User.ProtoReflect.Descriptor instead.
func (*AccessPolicyTest_User) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{9, 1}
}

func (x *AccessPolicyTest_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessPolicyTest_User) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type AccessPolicyTest_Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AccessPolicyTest_Cluster) Reset() {
	*x = AccessPolicyTest_Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyTest_Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyTest_Cluster) ProtoMessage() {}

func (x *AccessPolicyTest_Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyTest_Cluster.ProtoReflect.Descriptor instead.
func (*AccessPolicyTest_Cluster) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{9, 2}
}

func (x *AccessPolicyTest_Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AccessPolicyTest_Expected_Kubernetes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Impersonate *AccessPolicyTest_Expected_Kubernetes_Impersonate `protobuf:"bytes,1,opt,name=impersonate,proto3" json:"impersonate,omitempty"`
}

func (x *AccessPolicyTest_Expected_Kubernetes) Reset() {
	*x = AccessPolicyTest_Expected_Kubernetes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyTest_Expected_Kubernetes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyTest_Expected_Kubernetes) ProtoMessage() {}

func (x *AccessPolicyTest_Expected_Kubernetes) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyTest_Expected_Kubernetes.ProtoReflect.Descriptor instead.
func (*AccessPolicyTest_Expected_Kubernetes) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{9, 0, 0}
}

func (x *AccessPolicyTest_Expected_Kubernetes) GetImpersonate() *AccessPolicyTest_Expected_Kubernetes_Impersonate {
	if x != nil {
		return x.Impersonate
	}
	return nil
}

type AccessPolicyTest_Expected_Kubernetes_Impersonate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *AccessPolicyTest_Expected_Kubernetes_Impersonate) Reset() {
	*x = AccessPolicyTest_Expected_Kubernetes_Impersonate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omni_specs_auth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicyTest_Expected_Kubernetes_Impersonate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicyTest_Expected_Kubernetes_Impersonate) ProtoMessage() {}

func (x *AccessPolicyTest_Expected_Kubernetes_Impersonate) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_auth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicyTest_Expected_Kubernetes_Impersonate.ProtoReflect.Descriptor instead.
func (*AccessPolicyTest_Expected_Kubernetes_Impersonate) Descriptor() ([]byte, []int) {
	return file_omni_specs_auth_proto_rawDescGZIP(), []int{9, 0, 0, 0}
}

func (x *AccessPolicyTest_Expected_Kubernetes_Impersonate) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_omni_specs_auth_proto protoreflect.FileDescriptor

var file_omni_specs_auth_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6f, 0x6d, 0x6e, 0x69, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x1a, 0x1b,
	0x74, 0x61, 0x6c, 0x6f, 0x73, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2f, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x04, 0x0a,
	0x0e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x31, 0x0a, 0x05, 0x61, 0x75, 0x74, 0x68, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x30, 0x52, 0x05, 0x61, 0x75, 0x74,
	0x68, 0x30, 0x12, 0x3a, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x57, 0x65, 0x62, 0x61,
	0x75, 0x74, 0x68, 0x6e, 0x52, 0x08, 0x77, 0x65, 0x62, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04,
	0x73, 0x61, 0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x65,
	0x63, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x52, 0x04, 0x73, 0x61, 0x6d, 0x6c, 0x1a, 0x78, 0x0a, 0x05,
	0x41, 0x75, 0x74, 0x68, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x40, 0x0a, 0x08, 0x57, 0x65, 0x62, 0x61, 0x75, 0x74,
	0x68, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x1a, 0xda, 0x01, 0x0a, 0x04, 0x53, 0x41, 0x4d,
	0x4c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0b, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x51, 0x0a, 0x11, 0x53, 0x41, 0x4d, 0x4c, 0x41, 0x73, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x22, 0x3c, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x27, 0x0a, 0x0c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x20, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0xe1, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x37, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x59, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x43, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x33, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0xa4, 0x02, 0x0a, 0x10, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x42, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x1a, 0x85, 0x01, 0x0a, 0x0a, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x2e, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x69,
	0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x1a, 0x25, 0x0a, 0x0b, 0x49, 0x6d,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x22, 0x89, 0x05, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x54, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x65, 0x73,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x65,
	0x73, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x08, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0xfc, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x65, 0x73, 0x74, 0x2e,
	0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x1a, 0x8e, 0x01, 0x0a, 0x0a, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x65, 0x73, 0x74,
	0x2e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x2e, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65,
	0x52, 0x0b, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x1a, 0x25, 0x0a,
	0x0b, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x1a, 0x97, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x1d,
	0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xcd, 0x03,
	0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x48, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x51, 0x0a, 0x0e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x2d, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x54, 0x65, 0x73, 0x74, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x5b, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x12, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a,
	0x11, 0x53, 0x41, 0x4d, 0x4c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x72, 0x6f, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6f, 0x6d,
	0x6e, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x6d,
	0x6e, 0x69, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_omni_specs_auth_proto_rawDescOnce sync.Once
	file_omni_specs_auth_proto_rawDescData = file_omni_specs_auth_proto_rawDesc
)

func file_omni_specs_auth_proto_rawDescGZIP() []byte {
	file_omni_specs_auth_proto_rawDescOnce.Do(func() {
		file_omni_specs_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_omni_specs_auth_proto_rawDescData)
	})
	return file_omni_specs_auth_proto_rawDescData
}

var file_omni_specs_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_omni_specs_auth_proto_goTypes = []interface{}{
	(*AuthConfigSpec)(nil),                                   // 0: specs.AuthConfigSpec
	(*SAMLAssertionSpec)(nil),                                // 1: specs.SAMLAssertionSpec
	(*UserSpec)(nil),                                         // 2: specs.UserSpec
	(*IdentitySpec)(nil),                                     // 3: specs.IdentitySpec
	(*Identity)(nil),                                         // 4: specs.Identity
	(*PublicKeySpec)(nil),                                    // 5: specs.PublicKeySpec
	(*AccessPolicyUserGroup)(nil),                            // 6: specs.AccessPolicyUserGroup
	(*AccessPolicyClusterGroup)(nil),                         // 7: specs.AccessPolicyClusterGroup
	(*AccessPolicyRule)(nil),                                 // 8: specs.AccessPolicyRule
	(*AccessPolicyTest)(nil),                                 // 9: specs.AccessPolicyTest
	(*AccessPolicySpec)(nil),                                 // 10: specs.AccessPolicySpec
	(*SAMLLabelRuleSpec)(nil),                                // 11: specs.SAMLLabelRuleSpec
	(*AuthConfigSpec_Auth0)(nil),                             // 12: specs.AuthConfigSpec.Auth0
	(*AuthConfigSpec_Webauthn)(nil),                          // 13: specs.AuthConfigSpec.Webauthn
	(*AuthConfigSpec_SAML)(nil),                              // 14: specs.AuthConfigSpec.SAML
	nil,                                                      // 15: specs.AuthConfigSpec.SAML.LabelRulesEntry
	(*AccessPolicyUserGroup_User)(nil),                       // 16: specs.AccessPolicyUserGroup.User
	(*AccessPolicyClusterGroup_Cluster)(nil),                 // 17: specs.AccessPolicyClusterGroup.Cluster
	(*AccessPolicyRule_Kubernetes)(nil),                      // 18: specs.AccessPolicyRule.Kubernetes
	(*AccessPolicyRule_Kubernetes_Impersonate)(nil),          // 19: specs.AccessPolicyRule.Kubernetes.Impersonate
	(*AccessPolicyTest_Expected)(nil),                        // 20: specs.AccessPolicyTest.Expected
	(*AccessPolicyTest_User)(nil),                            // 21: specs.AccessPolicyTest.User
	(*AccessPolicyTest_Cluster)(nil),                         // 22: specs.AccessPolicyTest.Cluster
	(*AccessPolicyTest_Expected_Kubernetes)(nil),             // 23: specs.AccessPolicyTest.Expected.Kubernetes
	(*AccessPolicyTest_Expected_Kubernetes_Impersonate)(nil), // 24: specs.AccessPolicyTest.Expected.Kubernetes.Impersonate
	nil,                           // 25: specs.AccessPolicyTest.User.LabelsEntry
	nil,                           // 26: specs.AccessPolicySpec.UserGroupsEntry
	nil,                           // 27: specs.AccessPolicySpec.ClusterGroupsEntry
	(*timestamppb.Timestamp)(nil), // 28: google.protobuf.Timestamp
}
var file_omni_specs_auth_proto_depIdxs = []int32{
	12, // 0: specs.AuthConfigSpec.auth0:type_name -> specs.AuthConfigSpec.Auth0
	13, // 1: specs.AuthConfigSpec.webauthn:type_name -> specs.AuthConfigSpec.Webauthn
	14, // 2: specs.AuthConfigSpec.saml:type_name -> specs.AuthConfigSpec.SAML
	28, // 3: specs.PublicKeySpec.expiration:type_name -> google.protobuf.Timestamp
	4,  // 4: specs.PublicKeySpec.identity:type_name -> specs.Identity
	16, // 5: specs.AccessPolicyUserGroup.users:type_name -> specs.AccessPolicyUserGroup.User
	17, // 6: specs.AccessPolicyClusterGroup.clusters:type_name -> specs.AccessPolicyClusterGroup.Cluster
	18, // 7: specs.AccessPolicyRule.kubernetes:type_name -> specs.AccessPolicyRule.Kubernetes
	21, // 8: specs.AccessPolicyTest.user:type_name -> specs.AccessPolicyTest.User
	22, // 9: specs.AccessPolicyTest.cluster:type_name -> specs.AccessPolicyTest.Cluster
	20, // 10: specs.AccessPolicyTest.expected:type_name -> specs.AccessPolicyTest.Expected
	26, // 11: specs.AccessPolicySpec.user_groups:type_name -> specs.AccessPolicySpec.UserGroupsEntry
	27, // 12: specs.AccessPolicySpec.cluster_groups:type_name -> specs.AccessPolicySpec.ClusterGroupsEntry
	8,  // 13: specs.AccessPolicySpec.rules:type_name -> specs.AccessPolicyRule
	9,  // 14: specs.AccessPolicySpec.tests:type_name -> specs.AccessPolicyTest
	15, // 15: specs.AuthConfigSpec.SAML.label_rules:type_name -> specs.AuthConfigSpec.SAML.LabelRulesEntry
	19, // 16: specs.AccessPolicyRule.Kubernetes.impersonate:type_name -> specs.AccessPolicyRule.Kubernetes.Impersonate
	23, // 17: specs.AccessPolicyTest.Expected.kubernetes:type_name -> specs.AccessPolicyTest.Expected.Kubernetes
	25, // 18: specs.AccessPolicyTest.User.labels:type_name -> specs.AccessPolicyTest.User.LabelsEntry
	24, // 19: specs.AccessPolicyTest.Expected.Kubernetes.impersonate:type_name -> specs.AccessPolicyTest.Expected.Kubernetes.Impersonate
	6,  // 20: specs.AccessPolicySpec.UserGroupsEntry.value:type_name -> specs.AccessPolicyUserGroup
	7,  // 21: specs.AccessPolicySpec.ClusterGroupsEntry.value:type_name -> specs.AccessPolicyClusterGroup
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_omni_specs_auth_proto_init() }
func file_omni_specs_auth_proto_init() {
	if File_omni_specs_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_omni_specs_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthConfigSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAMLAssertionSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentitySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKeySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyUserGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyClusterGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAMLLabelRuleSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthConfigSpec_Auth0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthConfigSpec_Webauthn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthConfigSpec_SAML); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyUserGroup_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyClusterGroup_Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyRule_Kubernetes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyRule_Kubernetes_Impersonate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyTest_Expected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyTest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyTest_Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyTest_Expected_Kubernetes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omni_specs_auth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicyTest_Expected_Kubernetes_Impersonate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_omni_specs_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_omni_specs_auth_proto_goTypes,
		DependencyIndexes: file_omni_specs_auth_proto_depIdxs,
		MessageInfos:      file_omni_specs_auth_proto_msgTypes,
	}.Build()
	File_omni_specs_auth_proto = out.File
	file_omni_specs_auth_proto_rawDesc = nil
	file_omni_specs_auth_proto_goTypes = nil
	file_omni_specs_auth_proto_depIdxs = nil
}
