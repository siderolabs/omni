// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.4
// source: omni/specs/omni.proto

package specs

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	machine "github.com/siderolabs/talos/pkg/machinery/api/machine"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigApplyStatus int32

const (
	ConfigApplyStatus_UNKNOWN ConfigApplyStatus = 0
	ConfigApplyStatus_PENDING ConfigApplyStatus = 1
	ConfigApplyStatus_APPLIED ConfigApplyStatus = 2
	ConfigApplyStatus_FAILED  ConfigApplyStatus = 3
)

// Enum value maps for ConfigApplyStatus.
var (
	ConfigApplyStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "APPLIED",
		3: "FAILED",
	}
	ConfigApplyStatus_value = map[string]int32{
		"UNKNOWN": 0,
		"PENDING": 1,
		"APPLIED": 2,
		"FAILED":  3,
	}
)

func (x ConfigApplyStatus) Enum() *ConfigApplyStatus {
	p := new(ConfigApplyStatus)
	*p = x
	return p
}

func (x ConfigApplyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigApplyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[0].Descriptor()
}

func (ConfigApplyStatus) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[0]
}

func (x ConfigApplyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigApplyStatus.Descriptor instead.
func (ConfigApplyStatus) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{0}
}

// MachineSetPhaseSpec is machine set phase.
type MachineSetPhase int32

const (
	MachineSetPhase_Unknown       MachineSetPhase = 0
	MachineSetPhase_ScalingUp     MachineSetPhase = 1
	MachineSetPhase_ScalingDown   MachineSetPhase = 2
	MachineSetPhase_Running       MachineSetPhase = 3
	MachineSetPhase_Destroying    MachineSetPhase = 4
	MachineSetPhase_Failed        MachineSetPhase = 5
	MachineSetPhase_Reconfiguring MachineSetPhase = 6
)

// Enum value maps for MachineSetPhase.
var (
	MachineSetPhase_name = map[int32]string{
		0: "Unknown",
		1: "ScalingUp",
		2: "ScalingDown",
		3: "Running",
		4: "Destroying",
		5: "Failed",
		6: "Reconfiguring",
	}
	MachineSetPhase_value = map[string]int32{
		"Unknown":       0,
		"ScalingUp":     1,
		"ScalingDown":   2,
		"Running":       3,
		"Destroying":    4,
		"Failed":        5,
		"Reconfiguring": 6,
	}
)

func (x MachineSetPhase) Enum() *MachineSetPhase {
	p := new(MachineSetPhase)
	*p = x
	return p
}

func (x MachineSetPhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineSetPhase) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[1].Descriptor()
}

func (MachineSetPhase) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[1]
}

func (x MachineSetPhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineSetPhase.Descriptor instead.
func (MachineSetPhase) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{1}
}

type ConditionType int32

const (
	ConditionType_UnknownCondition    ConditionType = 0
	ConditionType_Etcd                ConditionType = 1
	ConditionType_WireguardConnection ConditionType = 2
)

// Enum value maps for ConditionType.
var (
	ConditionType_name = map[int32]string{
		0: "UnknownCondition",
		1: "Etcd",
		2: "WireguardConnection",
	}
	ConditionType_value = map[string]int32{
		"UnknownCondition":    0,
		"Etcd":                1,
		"WireguardConnection": 2,
	}
)

func (x ConditionType) Enum() *ConditionType {
	p := new(ConditionType)
	*p = x
	return p
}

func (x ConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[2].Descriptor()
}

func (ConditionType) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[2]
}

func (x ConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionType.Descriptor instead.
func (ConditionType) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{2}
}

type GrpcTunnelMode int32

const (
	GrpcTunnelMode_UNSET    GrpcTunnelMode = 0
	GrpcTunnelMode_ENABLED  GrpcTunnelMode = 1
	GrpcTunnelMode_DISABLED GrpcTunnelMode = 2
)

// Enum value maps for GrpcTunnelMode.
var (
	GrpcTunnelMode_name = map[int32]string{
		0: "UNSET",
		1: "ENABLED",
		2: "DISABLED",
	}
	GrpcTunnelMode_value = map[string]int32{
		"UNSET":    0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x GrpcTunnelMode) Enum() *GrpcTunnelMode {
	p := new(GrpcTunnelMode)
	*p = x
	return p
}

func (x GrpcTunnelMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrpcTunnelMode) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[3].Descriptor()
}

func (GrpcTunnelMode) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[3]
}

func (x GrpcTunnelMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrpcTunnelMode.Descriptor instead.
func (GrpcTunnelMode) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{3}
}

type MachineStatusSpec_Role int32

const (
	MachineStatusSpec_NONE          MachineStatusSpec_Role = 0
	MachineStatusSpec_CONTROL_PLANE MachineStatusSpec_Role = 1
	MachineStatusSpec_WORKER        MachineStatusSpec_Role = 2
)

// Enum value maps for MachineStatusSpec_Role.
var (
	MachineStatusSpec_Role_name = map[int32]string{
		0: "NONE",
		1: "CONTROL_PLANE",
		2: "WORKER",
	}
	MachineStatusSpec_Role_value = map[string]int32{
		"NONE":          0,
		"CONTROL_PLANE": 1,
		"WORKER":        2,
	}
)

func (x MachineStatusSpec_Role) Enum() *MachineStatusSpec_Role {
	p := new(MachineStatusSpec_Role)
	*p = x
	return p
}

func (x MachineStatusSpec_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineStatusSpec_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[4].Descriptor()
}

func (MachineStatusSpec_Role) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[4]
}

func (x MachineStatusSpec_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineStatusSpec_Role.Descriptor instead.
func (MachineStatusSpec_Role) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 0}
}

type MachineStatusSpec_PowerState int32

const (
	MachineStatusSpec_POWER_STATE_UNKNOWN     MachineStatusSpec_PowerState = 0
	MachineStatusSpec_POWER_STATE_UNSUPPORTED MachineStatusSpec_PowerState = 1
	MachineStatusSpec_POWER_STATE_ON          MachineStatusSpec_PowerState = 2
	MachineStatusSpec_POWER_STATE_OFF         MachineStatusSpec_PowerState = 3
)

// Enum value maps for MachineStatusSpec_PowerState.
var (
	MachineStatusSpec_PowerState_name = map[int32]string{
		0: "POWER_STATE_UNKNOWN",
		1: "POWER_STATE_UNSUPPORTED",
		2: "POWER_STATE_ON",
		3: "POWER_STATE_OFF",
	}
	MachineStatusSpec_PowerState_value = map[string]int32{
		"POWER_STATE_UNKNOWN":     0,
		"POWER_STATE_UNSUPPORTED": 1,
		"POWER_STATE_ON":          2,
		"POWER_STATE_OFF":         3,
	}
)

func (x MachineStatusSpec_PowerState) Enum() *MachineStatusSpec_PowerState {
	p := new(MachineStatusSpec_PowerState)
	*p = x
	return p
}

func (x MachineStatusSpec_PowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineStatusSpec_PowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[5].Descriptor()
}

func (MachineStatusSpec_PowerState) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[5]
}

func (x MachineStatusSpec_PowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineStatusSpec_PowerState.Descriptor instead.
func (MachineStatusSpec_PowerState) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 1}
}

type EtcdBackupStatusSpec_Status int32

const (
	EtcdBackupStatusSpec_Unknown EtcdBackupStatusSpec_Status = 0
	EtcdBackupStatusSpec_Ok      EtcdBackupStatusSpec_Status = 1
	EtcdBackupStatusSpec_Error   EtcdBackupStatusSpec_Status = 2
	EtcdBackupStatusSpec_Running EtcdBackupStatusSpec_Status = 3
)

// Enum value maps for EtcdBackupStatusSpec_Status.
var (
	EtcdBackupStatusSpec_Status_name = map[int32]string{
		0: "Unknown",
		1: "Ok",
		2: "Error",
		3: "Running",
	}
	EtcdBackupStatusSpec_Status_value = map[string]int32{
		"Unknown": 0,
		"Ok":      1,
		"Error":   2,
		"Running": 3,
	}
)

func (x EtcdBackupStatusSpec_Status) Enum() *EtcdBackupStatusSpec_Status {
	p := new(EtcdBackupStatusSpec_Status)
	*p = x
	return p
}

func (x EtcdBackupStatusSpec_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EtcdBackupStatusSpec_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[6].Descriptor()
}

func (EtcdBackupStatusSpec_Status) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[6]
}

func (x EtcdBackupStatusSpec_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EtcdBackupStatusSpec_Status.Descriptor instead.
func (EtcdBackupStatusSpec_Status) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{14, 0}
}

type ClusterMachineStatusSpec_Stage int32

const (
	ClusterMachineStatusSpec_UNKNOWN        ClusterMachineStatusSpec_Stage = 0
	ClusterMachineStatusSpec_BOOTING        ClusterMachineStatusSpec_Stage = 1
	ClusterMachineStatusSpec_INSTALLING     ClusterMachineStatusSpec_Stage = 2
	ClusterMachineStatusSpec_UPGRADING      ClusterMachineStatusSpec_Stage = 6
	ClusterMachineStatusSpec_CONFIGURING    ClusterMachineStatusSpec_Stage = 3
	ClusterMachineStatusSpec_RUNNING        ClusterMachineStatusSpec_Stage = 4
	ClusterMachineStatusSpec_REBOOTING      ClusterMachineStatusSpec_Stage = 7
	ClusterMachineStatusSpec_SHUTTING_DOWN  ClusterMachineStatusSpec_Stage = 8
	ClusterMachineStatusSpec_BEFORE_DESTROY ClusterMachineStatusSpec_Stage = 9
	ClusterMachineStatusSpec_DESTROYING     ClusterMachineStatusSpec_Stage = 5
	ClusterMachineStatusSpec_POWERING_ON    ClusterMachineStatusSpec_Stage = 10
	ClusterMachineStatusSpec_POWERED_OFF    ClusterMachineStatusSpec_Stage = 11
)

// Enum value maps for ClusterMachineStatusSpec_Stage.
var (
	ClusterMachineStatusSpec_Stage_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "BOOTING",
		2:  "INSTALLING",
		6:  "UPGRADING",
		3:  "CONFIGURING",
		4:  "RUNNING",
		7:  "REBOOTING",
		8:  "SHUTTING_DOWN",
		9:  "BEFORE_DESTROY",
		5:  "DESTROYING",
		10: "POWERING_ON",
		11: "POWERED_OFF",
	}
	ClusterMachineStatusSpec_Stage_value = map[string]int32{
		"UNKNOWN":        0,
		"BOOTING":        1,
		"INSTALLING":     2,
		"UPGRADING":      6,
		"CONFIGURING":    3,
		"RUNNING":        4,
		"REBOOTING":      7,
		"SHUTTING_DOWN":  8,
		"BEFORE_DESTROY": 9,
		"DESTROYING":     5,
		"POWERING_ON":    10,
		"POWERED_OFF":    11,
	}
)

func (x ClusterMachineStatusSpec_Stage) Enum() *ClusterMachineStatusSpec_Stage {
	p := new(ClusterMachineStatusSpec_Stage)
	*p = x
	return p
}

func (x ClusterMachineStatusSpec_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterMachineStatusSpec_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[7].Descriptor()
}

func (ClusterMachineStatusSpec_Stage) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[7]
}

func (x ClusterMachineStatusSpec_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterMachineStatusSpec_Stage.Descriptor instead.
func (ClusterMachineStatusSpec_Stage) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{25, 0}
}

type ClusterStatusSpec_Phase int32

const (
	ClusterStatusSpec_UNKNOWN      ClusterStatusSpec_Phase = 0
	ClusterStatusSpec_SCALING_UP   ClusterStatusSpec_Phase = 1
	ClusterStatusSpec_SCALING_DOWN ClusterStatusSpec_Phase = 2
	ClusterStatusSpec_RUNNING      ClusterStatusSpec_Phase = 3
	ClusterStatusSpec_DESTROYING   ClusterStatusSpec_Phase = 4
)

// Enum value maps for ClusterStatusSpec_Phase.
var (
	ClusterStatusSpec_Phase_name = map[int32]string{
		0: "UNKNOWN",
		1: "SCALING_UP",
		2: "SCALING_DOWN",
		3: "RUNNING",
		4: "DESTROYING",
	}
	ClusterStatusSpec_Phase_value = map[string]int32{
		"UNKNOWN":      0,
		"SCALING_UP":   1,
		"SCALING_DOWN": 2,
		"RUNNING":      3,
		"DESTROYING":   4,
	}
)

func (x ClusterStatusSpec_Phase) Enum() *ClusterStatusSpec_Phase {
	p := new(ClusterStatusSpec_Phase)
	*p = x
	return p
}

func (x ClusterStatusSpec_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterStatusSpec_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[8].Descriptor()
}

func (ClusterStatusSpec_Phase) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[8]
}

func (x ClusterStatusSpec_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterStatusSpec_Phase.Descriptor instead.
func (ClusterStatusSpec_Phase) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{27, 0}
}

// UpdateStrategy defines the update strategy of the machine set.
type MachineSetSpec_UpdateStrategy int32

const (
	MachineSetSpec_Unset   MachineSetSpec_UpdateStrategy = 0
	MachineSetSpec_Rolling MachineSetSpec_UpdateStrategy = 1
)

// Enum value maps for MachineSetSpec_UpdateStrategy.
var (
	MachineSetSpec_UpdateStrategy_name = map[int32]string{
		0: "Unset",
		1: "Rolling",
	}
	MachineSetSpec_UpdateStrategy_value = map[string]int32{
		"Unset":   0,
		"Rolling": 1,
	}
)

func (x MachineSetSpec_UpdateStrategy) Enum() *MachineSetSpec_UpdateStrategy {
	p := new(MachineSetSpec_UpdateStrategy)
	*p = x
	return p
}

func (x MachineSetSpec_UpdateStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineSetSpec_UpdateStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[9].Descriptor()
}

func (MachineSetSpec_UpdateStrategy) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[9]
}

func (x MachineSetSpec_UpdateStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineSetSpec_UpdateStrategy.Descriptor instead.
func (MachineSetSpec_UpdateStrategy) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40, 0}
}

type MachineSetSpec_MachineClass_Type int32

const (
	// Static uses the count defined in the count field.
	MachineSetSpec_MachineClass_Static MachineSetSpec_MachineClass_Type = 0
	// Unlimited allocates all available machines from the machine class/request set.
	MachineSetSpec_MachineClass_Unlimited MachineSetSpec_MachineClass_Type = 1
)

// Enum value maps for MachineSetSpec_MachineClass_Type.
var (
	MachineSetSpec_MachineClass_Type_name = map[int32]string{
		0: "Static",
		1: "Unlimited",
	}
	MachineSetSpec_MachineClass_Type_value = map[string]int32{
		"Static":    0,
		"Unlimited": 1,
	}
)

func (x MachineSetSpec_MachineClass_Type) Enum() *MachineSetSpec_MachineClass_Type {
	p := new(MachineSetSpec_MachineClass_Type)
	*p = x
	return p
}

func (x MachineSetSpec_MachineClass_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineSetSpec_MachineClass_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[10].Descriptor()
}

func (MachineSetSpec_MachineClass_Type) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[10]
}

func (x MachineSetSpec_MachineClass_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineSetSpec_MachineClass_Type.Descriptor instead.
func (MachineSetSpec_MachineClass_Type) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40, 0, 0}
}

type MachineSetSpec_MachineAllocation_Type int32

const (
	// Static uses the count defined in the count field.
	MachineSetSpec_MachineAllocation_Static MachineSetSpec_MachineAllocation_Type = 0
	// Unlimited allocates all available machines from the machine class/request set.
	MachineSetSpec_MachineAllocation_Unlimited MachineSetSpec_MachineAllocation_Type = 1
)

// Enum value maps for MachineSetSpec_MachineAllocation_Type.
var (
	MachineSetSpec_MachineAllocation_Type_name = map[int32]string{
		0: "Static",
		1: "Unlimited",
	}
	MachineSetSpec_MachineAllocation_Type_value = map[string]int32{
		"Static":    0,
		"Unlimited": 1,
	}
)

func (x MachineSetSpec_MachineAllocation_Type) Enum() *MachineSetSpec_MachineAllocation_Type {
	p := new(MachineSetSpec_MachineAllocation_Type)
	*p = x
	return p
}

func (x MachineSetSpec_MachineAllocation_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineSetSpec_MachineAllocation_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[11].Descriptor()
}

func (MachineSetSpec_MachineAllocation_Type) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[11]
}

func (x MachineSetSpec_MachineAllocation_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineSetSpec_MachineAllocation_Type.Descriptor instead.
func (MachineSetSpec_MachineAllocation_Type) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40, 1, 0}
}

type TalosUpgradeStatusSpec_Phase int32

const (
	TalosUpgradeStatusSpec_Unknown              TalosUpgradeStatusSpec_Phase = 0
	TalosUpgradeStatusSpec_Upgrading            TalosUpgradeStatusSpec_Phase = 1
	TalosUpgradeStatusSpec_Done                 TalosUpgradeStatusSpec_Phase = 2
	TalosUpgradeStatusSpec_Failed               TalosUpgradeStatusSpec_Phase = 3
	TalosUpgradeStatusSpec_Reverting            TalosUpgradeStatusSpec_Phase = 4
	TalosUpgradeStatusSpec_InstallingExtensions TalosUpgradeStatusSpec_Phase = 5
)

// Enum value maps for TalosUpgradeStatusSpec_Phase.
var (
	TalosUpgradeStatusSpec_Phase_name = map[int32]string{
		0: "Unknown",
		1: "Upgrading",
		2: "Done",
		3: "Failed",
		4: "Reverting",
		5: "InstallingExtensions",
	}
	TalosUpgradeStatusSpec_Phase_value = map[string]int32{
		"Unknown":              0,
		"Upgrading":            1,
		"Done":                 2,
		"Failed":               3,
		"Reverting":            4,
		"InstallingExtensions": 5,
	}
)

func (x TalosUpgradeStatusSpec_Phase) Enum() *TalosUpgradeStatusSpec_Phase {
	p := new(TalosUpgradeStatusSpec_Phase)
	*p = x
	return p
}

func (x TalosUpgradeStatusSpec_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TalosUpgradeStatusSpec_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[12].Descriptor()
}

func (TalosUpgradeStatusSpec_Phase) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[12]
}

func (x TalosUpgradeStatusSpec_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TalosUpgradeStatusSpec_Phase.Descriptor instead.
func (TalosUpgradeStatusSpec_Phase) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{41, 0}
}

type MachineStatusSnapshotSpec_PowerStage int32

const (
	MachineStatusSnapshotSpec_POWER_STAGE_NONE        MachineStatusSnapshotSpec_PowerStage = 0
	MachineStatusSnapshotSpec_POWER_STAGE_POWERED_OFF MachineStatusSnapshotSpec_PowerStage = 1
	MachineStatusSnapshotSpec_POWER_STAGE_POWERING_ON MachineStatusSnapshotSpec_PowerStage = 2
)

// Enum value maps for MachineStatusSnapshotSpec_PowerStage.
var (
	MachineStatusSnapshotSpec_PowerStage_name = map[int32]string{
		0: "POWER_STAGE_NONE",
		1: "POWER_STAGE_POWERED_OFF",
		2: "POWER_STAGE_POWERING_ON",
	}
	MachineStatusSnapshotSpec_PowerStage_value = map[string]int32{
		"POWER_STAGE_NONE":        0,
		"POWER_STAGE_POWERED_OFF": 1,
		"POWER_STAGE_POWERING_ON": 2,
	}
)

func (x MachineStatusSnapshotSpec_PowerStage) Enum() *MachineStatusSnapshotSpec_PowerStage {
	p := new(MachineStatusSnapshotSpec_PowerStage)
	*p = x
	return p
}

func (x MachineStatusSnapshotSpec_PowerStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineStatusSnapshotSpec_PowerStage) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[13].Descriptor()
}

func (MachineStatusSnapshotSpec_PowerStage) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[13]
}

func (x MachineStatusSnapshotSpec_PowerStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineStatusSnapshotSpec_PowerStage.Descriptor instead.
func (MachineStatusSnapshotSpec_PowerStage) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{45, 0}
}

type ControlPlaneStatusSpec_Condition_Status int32

const (
	ControlPlaneStatusSpec_Condition_Unknown  ControlPlaneStatusSpec_Condition_Status = 0
	ControlPlaneStatusSpec_Condition_Ready    ControlPlaneStatusSpec_Condition_Status = 1
	ControlPlaneStatusSpec_Condition_NotReady ControlPlaneStatusSpec_Condition_Status = 2
)

// Enum value maps for ControlPlaneStatusSpec_Condition_Status.
var (
	ControlPlaneStatusSpec_Condition_Status_name = map[int32]string{
		0: "Unknown",
		1: "Ready",
		2: "NotReady",
	}
	ControlPlaneStatusSpec_Condition_Status_value = map[string]int32{
		"Unknown":  0,
		"Ready":    1,
		"NotReady": 2,
	}
)

func (x ControlPlaneStatusSpec_Condition_Status) Enum() *ControlPlaneStatusSpec_Condition_Status {
	p := new(ControlPlaneStatusSpec_Condition_Status)
	*p = x
	return p
}

func (x ControlPlaneStatusSpec_Condition_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlPlaneStatusSpec_Condition_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[14].Descriptor()
}

func (ControlPlaneStatusSpec_Condition_Status) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[14]
}

func (x ControlPlaneStatusSpec_Condition_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlPlaneStatusSpec_Condition_Status.Descriptor instead.
func (ControlPlaneStatusSpec_Condition_Status) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{46, 0, 0}
}

type ControlPlaneStatusSpec_Condition_Severity int32

const (
	ControlPlaneStatusSpec_Condition_Info    ControlPlaneStatusSpec_Condition_Severity = 0
	ControlPlaneStatusSpec_Condition_Warning ControlPlaneStatusSpec_Condition_Severity = 1
	ControlPlaneStatusSpec_Condition_Error   ControlPlaneStatusSpec_Condition_Severity = 2
)

// Enum value maps for ControlPlaneStatusSpec_Condition_Severity.
var (
	ControlPlaneStatusSpec_Condition_Severity_name = map[int32]string{
		0: "Info",
		1: "Warning",
		2: "Error",
	}
	ControlPlaneStatusSpec_Condition_Severity_value = map[string]int32{
		"Info":    0,
		"Warning": 1,
		"Error":   2,
	}
)

func (x ControlPlaneStatusSpec_Condition_Severity) Enum() *ControlPlaneStatusSpec_Condition_Severity {
	p := new(ControlPlaneStatusSpec_Condition_Severity)
	*p = x
	return p
}

func (x ControlPlaneStatusSpec_Condition_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlPlaneStatusSpec_Condition_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[15].Descriptor()
}

func (ControlPlaneStatusSpec_Condition_Severity) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[15]
}

func (x ControlPlaneStatusSpec_Condition_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlPlaneStatusSpec_Condition_Severity.Descriptor instead.
func (ControlPlaneStatusSpec_Condition_Severity) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{46, 0, 1}
}

type KubernetesUpgradeStatusSpec_Phase int32

const (
	KubernetesUpgradeStatusSpec_Unknown   KubernetesUpgradeStatusSpec_Phase = 0
	KubernetesUpgradeStatusSpec_Upgrading KubernetesUpgradeStatusSpec_Phase = 1
	KubernetesUpgradeStatusSpec_Done      KubernetesUpgradeStatusSpec_Phase = 2
	KubernetesUpgradeStatusSpec_Failed    KubernetesUpgradeStatusSpec_Phase = 3
	KubernetesUpgradeStatusSpec_Reverting KubernetesUpgradeStatusSpec_Phase = 4
)

// Enum value maps for KubernetesUpgradeStatusSpec_Phase.
var (
	KubernetesUpgradeStatusSpec_Phase_name = map[int32]string{
		0: "Unknown",
		1: "Upgrading",
		2: "Done",
		3: "Failed",
		4: "Reverting",
	}
	KubernetesUpgradeStatusSpec_Phase_value = map[string]int32{
		"Unknown":   0,
		"Upgrading": 1,
		"Done":      2,
		"Failed":    3,
		"Reverting": 4,
	}
)

func (x KubernetesUpgradeStatusSpec_Phase) Enum() *KubernetesUpgradeStatusSpec_Phase {
	p := new(KubernetesUpgradeStatusSpec_Phase)
	*p = x
	return p
}

func (x KubernetesUpgradeStatusSpec_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubernetesUpgradeStatusSpec_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[16].Descriptor()
}

func (KubernetesUpgradeStatusSpec_Phase) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[16]
}

func (x KubernetesUpgradeStatusSpec_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubernetesUpgradeStatusSpec_Phase.Descriptor instead.
func (KubernetesUpgradeStatusSpec_Phase) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{49, 0}
}

type ExtensionsConfigurationStatusSpec_Phase int32

const (
	ExtensionsConfigurationStatusSpec_Unknown ExtensionsConfigurationStatusSpec_Phase = 0
	ExtensionsConfigurationStatusSpec_Ready   ExtensionsConfigurationStatusSpec_Phase = 1
	ExtensionsConfigurationStatusSpec_Failed  ExtensionsConfigurationStatusSpec_Phase = 2
)

// Enum value maps for ExtensionsConfigurationStatusSpec_Phase.
var (
	ExtensionsConfigurationStatusSpec_Phase_name = map[int32]string{
		0: "Unknown",
		1: "Ready",
		2: "Failed",
	}
	ExtensionsConfigurationStatusSpec_Phase_value = map[string]int32{
		"Unknown": 0,
		"Ready":   1,
		"Failed":  2,
	}
)

func (x ExtensionsConfigurationStatusSpec_Phase) Enum() *ExtensionsConfigurationStatusSpec_Phase {
	p := new(ExtensionsConfigurationStatusSpec_Phase)
	*p = x
	return p
}

func (x ExtensionsConfigurationStatusSpec_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExtensionsConfigurationStatusSpec_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[17].Descriptor()
}

func (ExtensionsConfigurationStatusSpec_Phase) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[17]
}

func (x ExtensionsConfigurationStatusSpec_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExtensionsConfigurationStatusSpec_Phase.Descriptor instead.
func (ExtensionsConfigurationStatusSpec_Phase) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{70, 0}
}

type MachineExtensionsStatusSpec_Item_Phase int32

const (
	MachineExtensionsStatusSpec_Item_Installed  MachineExtensionsStatusSpec_Item_Phase = 0
	MachineExtensionsStatusSpec_Item_Installing MachineExtensionsStatusSpec_Item_Phase = 1
	MachineExtensionsStatusSpec_Item_Removing   MachineExtensionsStatusSpec_Item_Phase = 2
)

// Enum value maps for MachineExtensionsStatusSpec_Item_Phase.
var (
	MachineExtensionsStatusSpec_Item_Phase_name = map[int32]string{
		0: "Installed",
		1: "Installing",
		2: "Removing",
	}
	MachineExtensionsStatusSpec_Item_Phase_value = map[string]int32{
		"Installed":  0,
		"Installing": 1,
		"Removing":   2,
	}
)

func (x MachineExtensionsStatusSpec_Item_Phase) Enum() *MachineExtensionsStatusSpec_Item_Phase {
	p := new(MachineExtensionsStatusSpec_Item_Phase)
	*p = x
	return p
}

func (x MachineExtensionsStatusSpec_Item_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineExtensionsStatusSpec_Item_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[18].Descriptor()
}

func (MachineExtensionsStatusSpec_Item_Phase) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[18]
}

func (x MachineExtensionsStatusSpec_Item_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineExtensionsStatusSpec_Item_Phase.Descriptor instead.
func (MachineExtensionsStatusSpec_Item_Phase) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{72, 0, 0}
}

type ClusterMachineRequestStatusSpec_Stage int32

const (
	ClusterMachineRequestStatusSpec_UNKNOWN        ClusterMachineRequestStatusSpec_Stage = 0
	ClusterMachineRequestStatusSpec_PENDING        ClusterMachineRequestStatusSpec_Stage = 1
	ClusterMachineRequestStatusSpec_PROVISIONING   ClusterMachineRequestStatusSpec_Stage = 2
	ClusterMachineRequestStatusSpec_PROVISIONED    ClusterMachineRequestStatusSpec_Stage = 3
	ClusterMachineRequestStatusSpec_DEPROVISIONING ClusterMachineRequestStatusSpec_Stage = 4
	ClusterMachineRequestStatusSpec_FAILED         ClusterMachineRequestStatusSpec_Stage = 5
)

// Enum value maps for ClusterMachineRequestStatusSpec_Stage.
var (
	ClusterMachineRequestStatusSpec_Stage_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "PROVISIONING",
		3: "PROVISIONED",
		4: "DEPROVISIONING",
		5: "FAILED",
	}
	ClusterMachineRequestStatusSpec_Stage_value = map[string]int32{
		"UNKNOWN":        0,
		"PENDING":        1,
		"PROVISIONING":   2,
		"PROVISIONED":    3,
		"DEPROVISIONING": 4,
		"FAILED":         5,
	}
)

func (x ClusterMachineRequestStatusSpec_Stage) Enum() *ClusterMachineRequestStatusSpec_Stage {
	p := new(ClusterMachineRequestStatusSpec_Stage)
	*p = x
	return p
}

func (x ClusterMachineRequestStatusSpec_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterMachineRequestStatusSpec_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[19].Descriptor()
}

func (ClusterMachineRequestStatusSpec_Stage) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[19]
}

func (x ClusterMachineRequestStatusSpec_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterMachineRequestStatusSpec_Stage.Descriptor instead.
func (ClusterMachineRequestStatusSpec_Stage) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{81, 0}
}

type InfraMachineConfigSpec_AcceptanceStatus int32

const (
	InfraMachineConfigSpec_PENDING  InfraMachineConfigSpec_AcceptanceStatus = 0
	InfraMachineConfigSpec_ACCEPTED InfraMachineConfigSpec_AcceptanceStatus = 1
	InfraMachineConfigSpec_REJECTED InfraMachineConfigSpec_AcceptanceStatus = 2
)

// Enum value maps for InfraMachineConfigSpec_AcceptanceStatus.
var (
	InfraMachineConfigSpec_AcceptanceStatus_name = map[int32]string{
		0: "PENDING",
		1: "ACCEPTED",
		2: "REJECTED",
	}
	InfraMachineConfigSpec_AcceptanceStatus_value = map[string]int32{
		"PENDING":  0,
		"ACCEPTED": 1,
		"REJECTED": 2,
	}
)

func (x InfraMachineConfigSpec_AcceptanceStatus) Enum() *InfraMachineConfigSpec_AcceptanceStatus {
	p := new(InfraMachineConfigSpec_AcceptanceStatus)
	*p = x
	return p
}

func (x InfraMachineConfigSpec_AcceptanceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InfraMachineConfigSpec_AcceptanceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[20].Descriptor()
}

func (InfraMachineConfigSpec_AcceptanceStatus) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[20]
}

func (x InfraMachineConfigSpec_AcceptanceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InfraMachineConfigSpec_AcceptanceStatus.Descriptor instead.
func (InfraMachineConfigSpec_AcceptanceStatus) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{82, 0}
}

type InfraMachineConfigSpec_MachinePowerState int32

const (
	InfraMachineConfigSpec_POWER_STATE_DEFAULT InfraMachineConfigSpec_MachinePowerState = 0
	InfraMachineConfigSpec_POWER_STATE_OFF     InfraMachineConfigSpec_MachinePowerState = 1
	InfraMachineConfigSpec_POWER_STATE_ON      InfraMachineConfigSpec_MachinePowerState = 2
)

// Enum value maps for InfraMachineConfigSpec_MachinePowerState.
var (
	InfraMachineConfigSpec_MachinePowerState_name = map[int32]string{
		0: "POWER_STATE_DEFAULT",
		1: "POWER_STATE_OFF",
		2: "POWER_STATE_ON",
	}
	InfraMachineConfigSpec_MachinePowerState_value = map[string]int32{
		"POWER_STATE_DEFAULT": 0,
		"POWER_STATE_OFF":     1,
		"POWER_STATE_ON":      2,
	}
)

func (x InfraMachineConfigSpec_MachinePowerState) Enum() *InfraMachineConfigSpec_MachinePowerState {
	p := new(InfraMachineConfigSpec_MachinePowerState)
	*p = x
	return p
}

func (x InfraMachineConfigSpec_MachinePowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InfraMachineConfigSpec_MachinePowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_specs_omni_proto_enumTypes[21].Descriptor()
}

func (InfraMachineConfigSpec_MachinePowerState) Type() protoreflect.EnumType {
	return &file_omni_specs_omni_proto_enumTypes[21]
}

func (x InfraMachineConfigSpec_MachinePowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InfraMachineConfigSpec_MachinePowerState.Descriptor instead.
func (InfraMachineConfigSpec_MachinePowerState) EnumDescriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{82, 1}
}

// MachineSpec describes a Machine.
type MachineSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// IP which can be used to access Talos API.
	ManagementAddress string `protobuf:"bytes,1,opt,name=management_address,json=managementAddress,proto3" json:"management_address,omitempty"`
	// Connected is copied from the corresponding Link resource.
	Connected bool `protobuf:"varint,2,opt,name=connected,proto3" json:"connected,omitempty"`
	// UseGrpcTunnel enables using gRPC tunnel for the machine.
	UseGrpcTunnel bool `protobuf:"varint,5,opt,name=use_grpc_tunnel,json=useGrpcTunnel,proto3" json:"use_grpc_tunnel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineSpec) Reset() {
	*x = MachineSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSpec) ProtoMessage() {}

func (x *MachineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSpec.ProtoReflect.Descriptor instead.
func (*MachineSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{0}
}

func (x *MachineSpec) GetManagementAddress() string {
	if x != nil {
		return x.ManagementAddress
	}
	return ""
}

func (x *MachineSpec) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *MachineSpec) GetUseGrpcTunnel() bool {
	if x != nil {
		return x.UseGrpcTunnel
	}
	return false
}

// SecurityState describes the UKI and secure boot information of the machine.
type SecurityState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SecureBoot is true if secure boot is detected to be available and enabled.
	SecureBoot bool `protobuf:"varint,1,opt,name=secure_boot,json=secureBoot,proto3" json:"secure_boot,omitempty"` // use existing logic
	// BootedWithUki is true if the machine is booted with a UKI. Always true if secure boot is enabled.
	BootedWithUki bool `protobuf:"varint,2,opt,name=booted_with_uki,json=bootedWithUki,proto3" json:"booted_with_uki,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityState) Reset() {
	*x = SecurityState{}
	mi := &file_omni_specs_omni_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityState) ProtoMessage() {}

func (x *SecurityState) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityState.ProtoReflect.Descriptor instead.
func (*SecurityState) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{1}
}

func (x *SecurityState) GetSecureBoot() bool {
	if x != nil {
		return x.SecureBoot
	}
	return false
}

func (x *SecurityState) GetBootedWithUki() bool {
	if x != nil {
		return x.BootedWithUki
	}
	return false
}

type Overlay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Overlay) Reset() {
	*x = Overlay{}
	mi := &file_omni_specs_omni_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Overlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overlay) ProtoMessage() {}

func (x *Overlay) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Overlay.ProtoReflect.Descriptor instead.
func (*Overlay) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{2}
}

func (x *Overlay) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Overlay) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type MetaValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           uint32                 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaValue) Reset() {
	*x = MetaValue{}
	mi := &file_omni_specs_omni_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaValue) ProtoMessage() {}

func (x *MetaValue) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaValue.ProtoReflect.Descriptor instead.
func (*MetaValue) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{3}
}

func (x *MetaValue) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *MetaValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// MachineStatusSpec describes state of a Machine.
type MachineStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Talos version.
	TalosVersion string `protobuf:"bytes,1,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	// Hardware-related information.
	Hardware *MachineStatusSpec_HardwareStatus `protobuf:"bytes,2,opt,name=hardware,proto3" json:"hardware,omitempty"`
	// Network-related information.
	Network *MachineStatusSpec_NetworkStatus `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	// Set if the last poll resulted in an error.
	LastError string `protobuf:"bytes,4,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
	// Management address is copied from the machine resource.
	ManagementAddress string `protobuf:"bytes,5,opt,name=management_address,json=managementAddress,proto3" json:"management_address,omitempty"`
	// Connected is copied from the corresponding Link resource.
	Connected bool `protobuf:"varint,6,opt,name=connected,proto3" json:"connected,omitempty"`
	// Maintenance flag means that the node is running in the maintenance mode.
	Maintenance bool `protobuf:"varint,7,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	// Cluster is the name of the cluster the machine belongs to.
	Cluster string `protobuf:"bytes,9,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Role is the role of the machine in the cluster.
	Role MachineStatusSpec_Role `protobuf:"varint,10,opt,name=role,proto3,enum=specs.MachineStatusSpec_Role" json:"role,omitempty"`
	// Platform-specific information.
	PlatformMetadata *MachineStatusSpec_PlatformMetadata `protobuf:"bytes,11,opt,name=platform_metadata,json=platformMetadata,proto3" json:"platform_metadata,omitempty"`
	ImageLabels      map[string]string                   `protobuf:"bytes,13,rep,name=image_labels,json=imageLabels,proto3" json:"image_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Schematic        *MachineStatusSpec_Schematic        `protobuf:"bytes,14,opt,name=schematic,proto3" json:"schematic,omitempty"`
	// InitialTalosVersion is set only once when the machine first joined Omni.
	InitialTalosVersion string                          `protobuf:"bytes,16,opt,name=initial_talos_version,json=initialTalosVersion,proto3" json:"initial_talos_version,omitempty"`
	Diagnostics         []*MachineStatusSpec_Diagnostic `protobuf:"bytes,19,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	PowerState          MachineStatusSpec_PowerState    `protobuf:"varint,20,opt,name=power_state,json=powerState,proto3,enum=specs.MachineStatusSpec_PowerState" json:"power_state,omitempty"`
	SecurityState       *SecurityState                  `protobuf:"bytes,21,opt,name=security_state,json=securityState,proto3" json:"security_state,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MachineStatusSpec) Reset() {
	*x = MachineStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec) ProtoMessage() {}

func (x *MachineStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4}
}

func (x *MachineStatusSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

func (x *MachineStatusSpec) GetHardware() *MachineStatusSpec_HardwareStatus {
	if x != nil {
		return x.Hardware
	}
	return nil
}

func (x *MachineStatusSpec) GetNetwork() *MachineStatusSpec_NetworkStatus {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *MachineStatusSpec) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

func (x *MachineStatusSpec) GetManagementAddress() string {
	if x != nil {
		return x.ManagementAddress
	}
	return ""
}

func (x *MachineStatusSpec) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *MachineStatusSpec) GetMaintenance() bool {
	if x != nil {
		return x.Maintenance
	}
	return false
}

func (x *MachineStatusSpec) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *MachineStatusSpec) GetRole() MachineStatusSpec_Role {
	if x != nil {
		return x.Role
	}
	return MachineStatusSpec_NONE
}

func (x *MachineStatusSpec) GetPlatformMetadata() *MachineStatusSpec_PlatformMetadata {
	if x != nil {
		return x.PlatformMetadata
	}
	return nil
}

func (x *MachineStatusSpec) GetImageLabels() map[string]string {
	if x != nil {
		return x.ImageLabels
	}
	return nil
}

func (x *MachineStatusSpec) GetSchematic() *MachineStatusSpec_Schematic {
	if x != nil {
		return x.Schematic
	}
	return nil
}

func (x *MachineStatusSpec) GetInitialTalosVersion() string {
	if x != nil {
		return x.InitialTalosVersion
	}
	return ""
}

func (x *MachineStatusSpec) GetDiagnostics() []*MachineStatusSpec_Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *MachineStatusSpec) GetPowerState() MachineStatusSpec_PowerState {
	if x != nil {
		return x.PowerState
	}
	return MachineStatusSpec_POWER_STATE_UNKNOWN
}

func (x *MachineStatusSpec) GetSecurityState() *SecurityState {
	if x != nil {
		return x.SecurityState
	}
	return nil
}

// TalosConfigSpec describes a Talos cluster config.
type TalosConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ca certificate authority.
	Ca string `protobuf:"bytes,1,opt,name=ca,proto3" json:"ca,omitempty"`
	// Crt certificate.
	Crt string `protobuf:"bytes,2,opt,name=crt,proto3" json:"crt,omitempty"`
	// Key certificate key.
	Key           string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalosConfigSpec) Reset() {
	*x = TalosConfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalosConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalosConfigSpec) ProtoMessage() {}

func (x *TalosConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalosConfigSpec.ProtoReflect.Descriptor instead.
func (*TalosConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{5}
}

func (x *TalosConfigSpec) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

func (x *TalosConfigSpec) GetCrt() string {
	if x != nil {
		return x.Crt
	}
	return ""
}

func (x *TalosConfigSpec) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Cluster describes a Talos cluster.
type ClusterSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// InstallImage the installer image to use.
	//
	// Deprecated: Marked as deprecated in omni/specs/omni.proto.
	InstallImage string `protobuf:"bytes,1,opt,name=install_image,json=installImage,proto3" json:"install_image,omitempty"`
	// KubernetesVersion to use on the node.
	KubernetesVersion string `protobuf:"bytes,2,opt,name=kubernetes_version,json=kubernetesVersion,proto3" json:"kubernetes_version,omitempty"`
	// TalosVersion cluster wide Talos version.
	TalosVersion string `protobuf:"bytes,3,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	// Features are the cluster features.
	Features *ClusterSpec_Features `protobuf:"bytes,4,opt,name=features,proto3" json:"features,omitempty"`
	// Backup describes the backup configuration. If it set to null that means that backups are disabled for this cluster.
	BackupConfiguration *EtcdBackupConf `protobuf:"bytes,5,opt,name=backup_configuration,json=backupConfiguration,proto3" json:"backup_configuration,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ClusterSpec) Reset() {
	*x = ClusterSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec) ProtoMessage() {}

func (x *ClusterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSpec.ProtoReflect.Descriptor instead.
func (*ClusterSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Marked as deprecated in omni/specs/omni.proto.
func (x *ClusterSpec) GetInstallImage() string {
	if x != nil {
		return x.InstallImage
	}
	return ""
}

func (x *ClusterSpec) GetKubernetesVersion() string {
	if x != nil {
		return x.KubernetesVersion
	}
	return ""
}

func (x *ClusterSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

func (x *ClusterSpec) GetFeatures() *ClusterSpec_Features {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *ClusterSpec) GetBackupConfiguration() *EtcdBackupConf {
	if x != nil {
		return x.BackupConfiguration
	}
	return nil
}

// ClusterTaintSpec describe a Talos cluster taint.
type ClusterTaintSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterTaintSpec) Reset() {
	*x = ClusterTaintSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTaintSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTaintSpec) ProtoMessage() {}

func (x *ClusterTaintSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterTaintSpec.ProtoReflect.Descriptor instead.
func (*ClusterTaintSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{7}
}

// EtcdBackupConf describes the backup configuration.
type EtcdBackupConf struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Interval is the interval between backups. If not set, backups are disabled.
	Interval *durationpb.Duration `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	// Enabled etcd backups.
	Enabled       bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdBackupConf) Reset() {
	*x = EtcdBackupConf{}
	mi := &file_omni_specs_omni_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupConf) ProtoMessage() {}

func (x *EtcdBackupConf) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupConf.ProtoReflect.Descriptor instead.
func (*EtcdBackupConf) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{8}
}

func (x *EtcdBackupConf) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *EtcdBackupConf) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// EtcdBackupEncryptionSpec describes the backup encryption.
type EtcdBackupEncryptionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EncryptionKey []byte                 `protobuf:"bytes,1,opt,name=encryption_key,json=encryptionKey,proto3" json:"encryption_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdBackupEncryptionSpec) Reset() {
	*x = EtcdBackupEncryptionSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupEncryptionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupEncryptionSpec) ProtoMessage() {}

func (x *EtcdBackupEncryptionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupEncryptionSpec.ProtoReflect.Descriptor instead.
func (*EtcdBackupEncryptionSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{9}
}

func (x *EtcdBackupEncryptionSpec) GetEncryptionKey() []byte {
	if x != nil {
		return x.EncryptionKey
	}
	return nil
}

// EtcdBackupHeader describes the backup header.
type EtcdBackupHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version is the version of the backup creator.
	Version       int64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdBackupHeader) Reset() {
	*x = EtcdBackupHeader{}
	mi := &file_omni_specs_omni_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupHeader) ProtoMessage() {}

func (x *EtcdBackupHeader) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupHeader.ProtoReflect.Descriptor instead.
func (*EtcdBackupHeader) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{10}
}

func (x *EtcdBackupHeader) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// EtcdBackupSpec describes the backup.
type EtcdBackupSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CreatedAt is the time when the backup was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Snapshot is the snapshot file name.
	Snapshot string `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	// Size specifies the etcd backup size.
	Size          uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdBackupSpec) Reset() {
	*x = EtcdBackupSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupSpec) ProtoMessage() {}

func (x *EtcdBackupSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupSpec.ProtoReflect.Descriptor instead.
func (*EtcdBackupSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{11}
}

func (x *EtcdBackupSpec) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EtcdBackupSpec) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

func (x *EtcdBackupSpec) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// BackupDataSpec describes the data needed for etcd backup.
type BackupDataSpec struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Interval                  *durationpb.Duration   `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	ClusterUuid               string                 `protobuf:"bytes,2,opt,name=cluster_uuid,json=clusterUuid,proto3" json:"cluster_uuid,omitempty"`
	EncryptionKey             []byte                 `protobuf:"bytes,3,opt,name=encryption_key,json=encryptionKey,proto3" json:"encryption_key,omitempty"`
	AesCbcEncryptionSecret    string                 `protobuf:"bytes,4,opt,name=aes_cbc_encryption_secret,json=aesCbcEncryptionSecret,proto3" json:"aes_cbc_encryption_secret,omitempty"`
	SecretboxEncryptionSecret string                 `protobuf:"bytes,5,opt,name=secretbox_encryption_secret,json=secretboxEncryptionSecret,proto3" json:"secretbox_encryption_secret,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *BackupDataSpec) Reset() {
	*x = BackupDataSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupDataSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupDataSpec) ProtoMessage() {}

func (x *BackupDataSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupDataSpec.ProtoReflect.Descriptor instead.
func (*BackupDataSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{12}
}

func (x *BackupDataSpec) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *BackupDataSpec) GetClusterUuid() string {
	if x != nil {
		return x.ClusterUuid
	}
	return ""
}

func (x *BackupDataSpec) GetEncryptionKey() []byte {
	if x != nil {
		return x.EncryptionKey
	}
	return nil
}

func (x *BackupDataSpec) GetAesCbcEncryptionSecret() string {
	if x != nil {
		return x.AesCbcEncryptionSecret
	}
	return ""
}

func (x *BackupDataSpec) GetSecretboxEncryptionSecret() string {
	if x != nil {
		return x.SecretboxEncryptionSecret
	}
	return ""
}

// EtcdBackupS3ConfSpec describes the S3 configuration for the backup process.
type EtcdBackupS3ConfSpec struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Bucket          string                 `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Region          string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Endpoint        string                 `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyId     string                 `protobuf:"bytes,4,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string                 `protobuf:"bytes,5,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	SessionToken    string                 `protobuf:"bytes,6,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EtcdBackupS3ConfSpec) Reset() {
	*x = EtcdBackupS3ConfSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupS3ConfSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupS3ConfSpec) ProtoMessage() {}

func (x *EtcdBackupS3ConfSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupS3ConfSpec.ProtoReflect.Descriptor instead.
func (*EtcdBackupS3ConfSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{13}
}

func (x *EtcdBackupS3ConfSpec) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *EtcdBackupS3ConfSpec) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *EtcdBackupS3ConfSpec) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *EtcdBackupS3ConfSpec) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *EtcdBackupS3ConfSpec) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *EtcdBackupS3ConfSpec) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

// EtcdBackupStatus describes cluster last backup status.
type EtcdBackupStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status is the status of the last backup.
	Status EtcdBackupStatusSpec_Status `protobuf:"varint,1,opt,name=status,proto3,enum=specs.EtcdBackupStatusSpec_Status" json:"status,omitempty"`
	// Error is the error message if the backup failed.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// LastBackupTime is the time of the last backup.
	LastBackupTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_backup_time,json=lastBackupTime,proto3" json:"last_backup_time,omitempty"`
	// LastBackupAttempt is the time of the last backup attempt.
	LastBackupAttempt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_backup_attempt,json=lastBackupAttempt,proto3" json:"last_backup_attempt,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EtcdBackupStatusSpec) Reset() {
	*x = EtcdBackupStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupStatusSpec) ProtoMessage() {}

func (x *EtcdBackupStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupStatusSpec.ProtoReflect.Descriptor instead.
func (*EtcdBackupStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{14}
}

func (x *EtcdBackupStatusSpec) GetStatus() EtcdBackupStatusSpec_Status {
	if x != nil {
		return x.Status
	}
	return EtcdBackupStatusSpec_Unknown
}

func (x *EtcdBackupStatusSpec) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *EtcdBackupStatusSpec) GetLastBackupTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastBackupTime
	}
	return nil
}

func (x *EtcdBackupStatusSpec) GetLastBackupAttempt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastBackupAttempt
	}
	return nil
}

// EtcdManualBackupSpec describes the manual backup request.
type EtcdManualBackupSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// BackupAt is the time when the backup should be created.
	BackupAt      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=backup_at,json=backupAt,proto3" json:"backup_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdManualBackupSpec) Reset() {
	*x = EtcdManualBackupSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdManualBackupSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdManualBackupSpec) ProtoMessage() {}

func (x *EtcdManualBackupSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdManualBackupSpec.ProtoReflect.Descriptor instead.
func (*EtcdManualBackupSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{15}
}

func (x *EtcdManualBackupSpec) GetBackupAt() *timestamppb.Timestamp {
	if x != nil {
		return x.BackupAt
	}
	return nil
}

// EtcdBackupStoreStatusSpec is internal resource that decribes store configuration name and configuration last error.
type EtcdBackupStoreStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ConfigurationName is the name of the configuration (disabled|local|s3).
	ConfigurationName string `protobuf:"bytes,1,opt,name=configuration_name,json=configurationName,proto3" json:"configuration_name,omitempty"`
	// ConfigurationError is the error message if the configuration is invalid.
	ConfigurationError string `protobuf:"bytes,2,opt,name=configuration_error,json=configurationError,proto3" json:"configuration_error,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EtcdBackupStoreStatusSpec) Reset() {
	*x = EtcdBackupStoreStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupStoreStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupStoreStatusSpec) ProtoMessage() {}

func (x *EtcdBackupStoreStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupStoreStatusSpec.ProtoReflect.Descriptor instead.
func (*EtcdBackupStoreStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{16}
}

func (x *EtcdBackupStoreStatusSpec) GetConfigurationName() string {
	if x != nil {
		return x.ConfigurationName
	}
	return ""
}

func (x *EtcdBackupStoreStatusSpec) GetConfigurationError() string {
	if x != nil {
		return x.ConfigurationError
	}
	return ""
}

// EtcdBackupOverallStatusSpec describes the overall etcd backup system status.
type EtcdBackupOverallStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ConfigurationName is the name of the configuration (disabled|local|s3).
	ConfigurationName string `protobuf:"bytes,1,opt,name=configuration_name,json=configurationName,proto3" json:"configuration_name,omitempty"`
	// ConfigurationError is the error message if the configuration is invalid.
	ConfigurationError string `protobuf:"bytes,2,opt,name=configuration_error,json=configurationError,proto3" json:"configuration_error,omitempty"`
	// LastBackupStatus is the status of the last backup.
	LastBackupStatus *EtcdBackupStatusSpec `protobuf:"bytes,3,opt,name=last_backup_status,json=lastBackupStatus,proto3" json:"last_backup_status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EtcdBackupOverallStatusSpec) Reset() {
	*x = EtcdBackupOverallStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupOverallStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupOverallStatusSpec) ProtoMessage() {}

func (x *EtcdBackupOverallStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupOverallStatusSpec.ProtoReflect.Descriptor instead.
func (*EtcdBackupOverallStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{17}
}

func (x *EtcdBackupOverallStatusSpec) GetConfigurationName() string {
	if x != nil {
		return x.ConfigurationName
	}
	return ""
}

func (x *EtcdBackupOverallStatusSpec) GetConfigurationError() string {
	if x != nil {
		return x.ConfigurationError
	}
	return ""
}

func (x *EtcdBackupOverallStatusSpec) GetLastBackupStatus() *EtcdBackupStatusSpec {
	if x != nil {
		return x.LastBackupStatus
	}
	return nil
}

// ClusterMachineSpec describes a machine attached to a Cluster.
type ClusterMachineSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// KubernetesVersion to use on the machine (copied from Cluster at the moment of creation).
	KubernetesVersion string `protobuf:"bytes,2,opt,name=kubernetes_version,json=kubernetesVersion,proto3" json:"kubernetes_version,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClusterMachineSpec) Reset() {
	*x = ClusterMachineSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineSpec) ProtoMessage() {}

func (x *ClusterMachineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{18}
}

func (x *ClusterMachineSpec) GetKubernetesVersion() string {
	if x != nil {
		return x.KubernetesVersion
	}
	return ""
}

// ClusterMachineConfigPatchesSpec keeps the list of config patches to be applied on the machine.
type ClusterMachineConfigPatchesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of patches combined from all sources, as a final list of patches to apply.
	//
	// Deprecated: use accessor methods GetUncompressedData/SetUncompressedData to manage this field.
	Patches []string `protobuf:"bytes,1,rep,name=patches,proto3" json:"patches,omitempty"`
	// List of patches combined from all sources, as a final list of patches to apply.
	//
	// Deprecated: use accessor methods GetUncompressedData/SetUncompressedData to manage this field.
	CompressedPatches [][]byte `protobuf:"bytes,2,rep,name=compressed_patches,json=compressedPatches,proto3" json:"compressed_patches,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClusterMachineConfigPatchesSpec) Reset() {
	*x = ClusterMachineConfigPatchesSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineConfigPatchesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineConfigPatchesSpec) ProtoMessage() {}

func (x *ClusterMachineConfigPatchesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineConfigPatchesSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineConfigPatchesSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{19}
}

func (x *ClusterMachineConfigPatchesSpec) GetPatches() []string {
	if x != nil {
		return x.Patches
	}
	return nil
}

func (x *ClusterMachineConfigPatchesSpec) GetCompressedPatches() [][]byte {
	if x != nil {
		return x.CompressedPatches
	}
	return nil
}

// ClusterMachineTalosVersionSpec describes a machine Talos version and schematic.
type ClusterMachineTalosVersionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TalosVersion  string                 `protobuf:"bytes,1,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	SchematicId   string                 `protobuf:"bytes,2,opt,name=schematic_id,json=schematicId,proto3" json:"schematic_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterMachineTalosVersionSpec) Reset() {
	*x = ClusterMachineTalosVersionSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineTalosVersionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineTalosVersionSpec) ProtoMessage() {}

func (x *ClusterMachineTalosVersionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineTalosVersionSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineTalosVersionSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{20}
}

func (x *ClusterMachineTalosVersionSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

func (x *ClusterMachineTalosVersionSpec) GetSchematicId() string {
	if x != nil {
		return x.SchematicId
	}
	return ""
}

// ClusterMachineConfigSpec stores generated Talos node machine config.
type ClusterMachineConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data contains the config bytes. It is only set if the config is not compressed. Otherwise, CompressedData is set instead.
	//
	// Deprecated: use accessor methods GetUncompressedData/SetUncompressedData to manage this field.
	Data                  []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ClusterMachineVersion string `protobuf:"bytes,2,opt,name=cluster_machine_version,json=clusterMachineVersion,proto3" json:"cluster_machine_version,omitempty"`
	GenerationError       string `protobuf:"bytes,3,opt,name=generation_error,json=generationError,proto3" json:"generation_error,omitempty"`
	// CompressedData contains the config bytes. It is only set if the config is not compressed. Otherwise, CompressedData is set instead.
	//
	// Deprecated: use accessor methods GetUncompressedData/SetUncompressedData to manage this field.
	CompressedData []byte `protobuf:"bytes,4,opt,name=compressed_data,json=compressedData,proto3" json:"compressed_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClusterMachineConfigSpec) Reset() {
	*x = ClusterMachineConfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineConfigSpec) ProtoMessage() {}

func (x *ClusterMachineConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineConfigSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{21}
}

func (x *ClusterMachineConfigSpec) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ClusterMachineConfigSpec) GetClusterMachineVersion() string {
	if x != nil {
		return x.ClusterMachineVersion
	}
	return ""
}

func (x *ClusterMachineConfigSpec) GetGenerationError() string {
	if x != nil {
		return x.GenerationError
	}
	return ""
}

func (x *ClusterMachineConfigSpec) GetCompressedData() []byte {
	if x != nil {
		return x.CompressedData
	}
	return nil
}

// ClusterMachineConfigSpec stores generated Talos node machine config.
type RedactedClusterMachineConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data contains the config bytes. It is only set if the config is not compressed. Otherwise, CompressedData is set instead.
	//
	// Deprecated: use accessor methods GetUncompressedData/SetUncompressedData to manage this field.
	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// CompressedData contains the config bytes. It is only set if the config is not compressed. Otherwise, CompressedData is set instead.
	//
	// Deprecated: use accessor methods GetUncompressedData/SetUncompressedData to manage this field.
	CompressedData []byte `protobuf:"bytes,2,opt,name=compressed_data,json=compressedData,proto3" json:"compressed_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RedactedClusterMachineConfigSpec) Reset() {
	*x = RedactedClusterMachineConfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedactedClusterMachineConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedactedClusterMachineConfigSpec) ProtoMessage() {}

func (x *RedactedClusterMachineConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedactedClusterMachineConfigSpec.ProtoReflect.Descriptor instead.
func (*RedactedClusterMachineConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{22}
}

func (x *RedactedClusterMachineConfigSpec) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *RedactedClusterMachineConfigSpec) GetCompressedData() []byte {
	if x != nil {
		return x.CompressedData
	}
	return nil
}

// ClusterMachineIdentity keeps ClusterMachine related node information.
type ClusterMachineIdentitySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NodeIdentity is Talos node identity from Identity resource.
	NodeIdentity string `protobuf:"bytes,1,opt,name=node_identity,json=nodeIdentity,proto3" json:"node_identity,omitempty"`
	// EtcdMemberId is the id of the node how it's represented in the etcd quorum.
	EtcdMemberId uint64 `protobuf:"varint,2,opt,name=etcd_member_id,json=etcdMemberId,proto3" json:"etcd_member_id,omitempty"`
	// Nodename is the Kubernetes node name.
	Nodename string `protobuf:"bytes,3,opt,name=nodename,proto3" json:"nodename,omitempty"`
	// NodeIps are the IPs of the Kubernetes node.
	NodeIps []string `protobuf:"bytes,8,rep,name=node_ips,json=nodeIps,proto3" json:"node_ips,omitempty"`
	// DiscoveryServiceEndpoint is the endpoint of the discovery service used by the node.
	// It contains the protocol prefix (http://|https://) and the port.
	//
	// It is empty if discovery service is not enabled.
	DiscoveryServiceEndpoint string `protobuf:"bytes,9,opt,name=discovery_service_endpoint,json=discoveryServiceEndpoint,proto3" json:"discovery_service_endpoint,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ClusterMachineIdentitySpec) Reset() {
	*x = ClusterMachineIdentitySpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineIdentitySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineIdentitySpec) ProtoMessage() {}

func (x *ClusterMachineIdentitySpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineIdentitySpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineIdentitySpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{23}
}

func (x *ClusterMachineIdentitySpec) GetNodeIdentity() string {
	if x != nil {
		return x.NodeIdentity
	}
	return ""
}

func (x *ClusterMachineIdentitySpec) GetEtcdMemberId() uint64 {
	if x != nil {
		return x.EtcdMemberId
	}
	return 0
}

func (x *ClusterMachineIdentitySpec) GetNodename() string {
	if x != nil {
		return x.Nodename
	}
	return ""
}

func (x *ClusterMachineIdentitySpec) GetNodeIps() []string {
	if x != nil {
		return x.NodeIps
	}
	return nil
}

func (x *ClusterMachineIdentitySpec) GetDiscoveryServiceEndpoint() string {
	if x != nil {
		return x.DiscoveryServiceEndpoint
	}
	return ""
}

// ClusterMachineTemplateSpec
type ClusterMachineTemplateSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// InstallImage the installer image to use.
	InstallImage string `protobuf:"bytes,1,opt,name=install_image,json=installImage,proto3" json:"install_image,omitempty"`
	// KubernetesVersion to use on the node.
	KubernetesVersion string `protobuf:"bytes,2,opt,name=kubernetes_version,json=kubernetesVersion,proto3" json:"kubernetes_version,omitempty"`
	// InstallDisk Talos system disk.
	InstallDisk string `protobuf:"bytes,3,opt,name=install_disk,json=installDisk,proto3" json:"install_disk,omitempty"`
	// Patch represents machinery config patch.
	Patch         string `protobuf:"bytes,5,opt,name=patch,proto3" json:"patch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterMachineTemplateSpec) Reset() {
	*x = ClusterMachineTemplateSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineTemplateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineTemplateSpec) ProtoMessage() {}

func (x *ClusterMachineTemplateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineTemplateSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineTemplateSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{24}
}

func (x *ClusterMachineTemplateSpec) GetInstallImage() string {
	if x != nil {
		return x.InstallImage
	}
	return ""
}

func (x *ClusterMachineTemplateSpec) GetKubernetesVersion() string {
	if x != nil {
		return x.KubernetesVersion
	}
	return ""
}

func (x *ClusterMachineTemplateSpec) GetInstallDisk() string {
	if x != nil {
		return x.InstallDisk
	}
	return ""
}

func (x *ClusterMachineTemplateSpec) GetPatch() string {
	if x != nil {
		return x.Patch
	}
	return ""
}

// ClusterMachineStatusSpec
type ClusterMachineStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ready is true if all services are healthy.
	Ready bool                           `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	Stage ClusterMachineStatusSpec_Stage `protobuf:"varint,2,opt,name=stage,proto3,enum=specs.ClusterMachineStatusSpec_Stage" json:"stage,omitempty"`
	// ApidAvailable is true if the node is a control plane node and the apid service is healthy.
	ApidAvailable   bool   `protobuf:"varint,3,opt,name=apid_available,json=apidAvailable,proto3" json:"apid_available,omitempty"`
	ConfigUpToDate  bool   `protobuf:"varint,4,opt,name=config_up_to_date,json=configUpToDate,proto3" json:"config_up_to_date,omitempty"`
	LastConfigError string `protobuf:"bytes,5,opt,name=last_config_error,json=lastConfigError,proto3" json:"last_config_error,omitempty"`
	// Management address is copied from the machine status resource.
	ManagementAddress string            `protobuf:"bytes,6,opt,name=management_address,json=managementAddress,proto3" json:"management_address,omitempty"`
	ConfigApplyStatus ConfigApplyStatus `protobuf:"varint,7,opt,name=config_apply_status,json=configApplyStatus,proto3,enum=specs.ConfigApplyStatus" json:"config_apply_status,omitempty"`
	// IsRemoved means that the machine removed from Omni.
	IsRemoved bool `protobuf:"varint,8,opt,name=is_removed,json=isRemoved,proto3" json:"is_removed,omitempty"`
	// ProvisionStatus is set when the cluster machine is provisioned using a machine request.
	ProvisionStatus *ClusterMachineStatusSpec_ProvisionStatus `protobuf:"bytes,9,opt,name=provision_status,json=provisionStatus,proto3" json:"provision_status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ClusterMachineStatusSpec) Reset() {
	*x = ClusterMachineStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineStatusSpec) ProtoMessage() {}

func (x *ClusterMachineStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineStatusSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{25}
}

func (x *ClusterMachineStatusSpec) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *ClusterMachineStatusSpec) GetStage() ClusterMachineStatusSpec_Stage {
	if x != nil {
		return x.Stage
	}
	return ClusterMachineStatusSpec_UNKNOWN
}

func (x *ClusterMachineStatusSpec) GetApidAvailable() bool {
	if x != nil {
		return x.ApidAvailable
	}
	return false
}

func (x *ClusterMachineStatusSpec) GetConfigUpToDate() bool {
	if x != nil {
		return x.ConfigUpToDate
	}
	return false
}

func (x *ClusterMachineStatusSpec) GetLastConfigError() string {
	if x != nil {
		return x.LastConfigError
	}
	return ""
}

func (x *ClusterMachineStatusSpec) GetManagementAddress() string {
	if x != nil {
		return x.ManagementAddress
	}
	return ""
}

func (x *ClusterMachineStatusSpec) GetConfigApplyStatus() ConfigApplyStatus {
	if x != nil {
		return x.ConfigApplyStatus
	}
	return ConfigApplyStatus_UNKNOWN
}

func (x *ClusterMachineStatusSpec) GetIsRemoved() bool {
	if x != nil {
		return x.IsRemoved
	}
	return false
}

func (x *ClusterMachineStatusSpec) GetProvisionStatus() *ClusterMachineStatusSpec_ProvisionStatus {
	if x != nil {
		return x.ProvisionStatus
	}
	return nil
}

// Machines counts the number of machines in a set including health status.
type Machines struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total machines currently allocated.
	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// Healthy machines.
	Healthy uint32 `protobuf:"varint,2,opt,name=healthy,proto3" json:"healthy,omitempty"`
	// Connected represents the number of machines in a machine set connected to the wireguard network.
	Connected uint32 `protobuf:"varint,3,opt,name=connected,proto3" json:"connected,omitempty"`
	// Requested machines count, same as total for manual allocation, may differ for machine class mode.
	Requested     uint32 `protobuf:"varint,4,opt,name=requested,proto3" json:"requested,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Machines) Reset() {
	*x = Machines{}
	mi := &file_omni_specs_omni_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machines) ProtoMessage() {}

func (x *Machines) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machines.ProtoReflect.Descriptor instead.
func (*Machines) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{26}
}

func (x *Machines) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Machines) GetHealthy() uint32 {
	if x != nil {
		return x.Healthy
	}
	return 0
}

func (x *Machines) GetConnected() uint32 {
	if x != nil {
		return x.Connected
	}
	return 0
}

func (x *Machines) GetRequested() uint32 {
	if x != nil {
		return x.Requested
	}
	return 0
}

// ClusterStatusSpec aggregates general information about a cluster.
type ClusterStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster is available when at least one controlplane node has APId up.
	Available                 bool                    `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Machines                  *Machines               `protobuf:"bytes,2,opt,name=machines,proto3" json:"machines,omitempty"`
	Phase                     ClusterStatusSpec_Phase `protobuf:"varint,3,opt,name=phase,proto3,enum=specs.ClusterStatusSpec_Phase" json:"phase,omitempty"`
	Ready                     bool                    `protobuf:"varint,4,opt,name=ready,proto3" json:"ready,omitempty"`
	KubernetesAPIReady        bool                    `protobuf:"varint,5,opt,name=kubernetesAPIReady,proto3" json:"kubernetesAPIReady,omitempty"`
	ControlplaneReady         bool                    `protobuf:"varint,6,opt,name=controlplaneReady,proto3" json:"controlplaneReady,omitempty"`
	HasConnectedControlPlanes bool                    `protobuf:"varint,7,opt,name=has_connected_control_planes,json=hasConnectedControlPlanes,proto3" json:"has_connected_control_planes,omitempty"`
	// UseEmbeddedDiscoveryService indicates if the embedded discovery service should be used by this cluster or not.
	//
	// This is the final decision, taking the feature toggle, the version of the cluster and the Omni instance configuration (whether the feature is enabled or not) into account.
	UseEmbeddedDiscoveryService bool `protobuf:"varint,8,opt,name=use_embedded_discovery_service,json=useEmbeddedDiscoveryService,proto3" json:"use_embedded_discovery_service,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ClusterStatusSpec) Reset() {
	*x = ClusterStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusSpec) ProtoMessage() {}

func (x *ClusterStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusSpec.ProtoReflect.Descriptor instead.
func (*ClusterStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{27}
}

func (x *ClusterStatusSpec) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *ClusterStatusSpec) GetMachines() *Machines {
	if x != nil {
		return x.Machines
	}
	return nil
}

func (x *ClusterStatusSpec) GetPhase() ClusterStatusSpec_Phase {
	if x != nil {
		return x.Phase
	}
	return ClusterStatusSpec_UNKNOWN
}

func (x *ClusterStatusSpec) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *ClusterStatusSpec) GetKubernetesAPIReady() bool {
	if x != nil {
		return x.KubernetesAPIReady
	}
	return false
}

func (x *ClusterStatusSpec) GetControlplaneReady() bool {
	if x != nil {
		return x.ControlplaneReady
	}
	return false
}

func (x *ClusterStatusSpec) GetHasConnectedControlPlanes() bool {
	if x != nil {
		return x.HasConnectedControlPlanes
	}
	return false
}

func (x *ClusterStatusSpec) GetUseEmbeddedDiscoveryService() bool {
	if x != nil {
		return x.UseEmbeddedDiscoveryService
	}
	return false
}

// ClusterUUID keeps the UUID of the cluster.
type ClusterUUID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterUUID) Reset() {
	*x = ClusterUUID{}
	mi := &file_omni_specs_omni_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterUUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterUUID) ProtoMessage() {}

func (x *ClusterUUID) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterUUID.ProtoReflect.Descriptor instead.
func (*ClusterUUID) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{28}
}

func (x *ClusterUUID) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// ClusterConfigVersion keeps the version of Talos which was used for initial config generation.
type ClusterConfigVersionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterConfigVersionSpec) Reset() {
	*x = ClusterConfigVersionSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterConfigVersionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterConfigVersionSpec) ProtoMessage() {}

func (x *ClusterConfigVersionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterConfigVersionSpec.ProtoReflect.Descriptor instead.
func (*ClusterConfigVersionSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{29}
}

func (x *ClusterConfigVersionSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// ClusterMachineConfigStatusSpec machine configuration status spec.
type ClusterMachineConfigStatusSpec struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	ClusterMachineConfigVersion string                 `protobuf:"bytes,3,opt,name=cluster_machine_config_version,json=clusterMachineConfigVersion,proto3" json:"cluster_machine_config_version,omitempty"`
	ClusterMachineVersion       string                 `protobuf:"bytes,4,opt,name=cluster_machine_version,json=clusterMachineVersion,proto3" json:"cluster_machine_version,omitempty"`
	ClusterMachineConfigSha256  string                 `protobuf:"bytes,5,opt,name=cluster_machine_config_sha256,json=clusterMachineConfigSha256,proto3" json:"cluster_machine_config_sha256,omitempty"`
	LastConfigError             string                 `protobuf:"bytes,6,opt,name=last_config_error,json=lastConfigError,proto3" json:"last_config_error,omitempty"`
	TalosVersion                string                 `protobuf:"bytes,7,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	SchematicId                 string                 `protobuf:"bytes,8,opt,name=schematic_id,json=schematicId,proto3" json:"schematic_id,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ClusterMachineConfigStatusSpec) Reset() {
	*x = ClusterMachineConfigStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineConfigStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineConfigStatusSpec) ProtoMessage() {}

func (x *ClusterMachineConfigStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineConfigStatusSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineConfigStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{30}
}

func (x *ClusterMachineConfigStatusSpec) GetClusterMachineConfigVersion() string {
	if x != nil {
		return x.ClusterMachineConfigVersion
	}
	return ""
}

func (x *ClusterMachineConfigStatusSpec) GetClusterMachineVersion() string {
	if x != nil {
		return x.ClusterMachineVersion
	}
	return ""
}

func (x *ClusterMachineConfigStatusSpec) GetClusterMachineConfigSha256() string {
	if x != nil {
		return x.ClusterMachineConfigSha256
	}
	return ""
}

func (x *ClusterMachineConfigStatusSpec) GetLastConfigError() string {
	if x != nil {
		return x.LastConfigError
	}
	return ""
}

func (x *ClusterMachineConfigStatusSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

func (x *ClusterMachineConfigStatusSpec) GetSchematicId() string {
	if x != nil {
		return x.SchematicId
	}
	return ""
}

// ClusterBootstrapStatusSpec keeps track of bootstrap calls for a cluster.
type ClusterBootstrapStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bootstrapped  bool                   `protobuf:"varint,1,opt,name=bootstrapped,proto3" json:"bootstrapped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterBootstrapStatusSpec) Reset() {
	*x = ClusterBootstrapStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterBootstrapStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterBootstrapStatusSpec) ProtoMessage() {}

func (x *ClusterBootstrapStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterBootstrapStatusSpec.ProtoReflect.Descriptor instead.
func (*ClusterBootstrapStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{31}
}

func (x *ClusterBootstrapStatusSpec) GetBootstrapped() bool {
	if x != nil {
		return x.Bootstrapped
	}
	return false
}

// ClusterSecretsSpec describes cluster secrets.
type ClusterSecretsSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Bytes holding serialized cluster secrets.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// imported holds origin of the cluster secrets.
	Imported      bool `protobuf:"varint,2,opt,name=imported,proto3" json:"imported,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterSecretsSpec) Reset() {
	*x = ClusterSecretsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterSecretsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSecretsSpec) ProtoMessage() {}

func (x *ClusterSecretsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSecretsSpec.ProtoReflect.Descriptor instead.
func (*ClusterSecretsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{32}
}

func (x *ClusterSecretsSpec) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ClusterSecretsSpec) GetImported() bool {
	if x != nil {
		return x.Imported
	}
	return false
}

// ImportedClusterSecretsSpec describes imported cluster secrets.
type ImportedClusterSecretsSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// data holds imported cluster secrets.
	Data          string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportedClusterSecretsSpec) Reset() {
	*x = ImportedClusterSecretsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportedClusterSecretsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportedClusterSecretsSpec) ProtoMessage() {}

func (x *ImportedClusterSecretsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportedClusterSecretsSpec.ProtoReflect.Descriptor instead.
func (*ImportedClusterSecretsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{33}
}

func (x *ImportedClusterSecretsSpec) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// LoadBalancerConfigSpec describes the configuration of a load balancer.
type LoadBalancerConfigSpec struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	BindPort string                 `protobuf:"bytes,2,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"`
	// Full URL of the loadbalancer inside Omni environment.
	SiderolinkEndpoint string `protobuf:"bytes,4,opt,name=siderolink_endpoint,json=siderolinkEndpoint,proto3" json:"siderolink_endpoint,omitempty"`
	// IP adresses of the endpoints
	Endpoints     []string `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadBalancerConfigSpec) Reset() {
	*x = LoadBalancerConfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfigSpec) ProtoMessage() {}

func (x *LoadBalancerConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfigSpec.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{34}
}

func (x *LoadBalancerConfigSpec) GetBindPort() string {
	if x != nil {
		return x.BindPort
	}
	return ""
}

func (x *LoadBalancerConfigSpec) GetSiderolinkEndpoint() string {
	if x != nil {
		return x.SiderolinkEndpoint
	}
	return ""
}

func (x *LoadBalancerConfigSpec) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

// LoadBalancerStatusSpec reflects the status of a load balancer.
type LoadBalancerStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,3,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Stopped       bool                   `protobuf:"varint,4,opt,name=stopped,proto3" json:"stopped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadBalancerStatusSpec) Reset() {
	*x = LoadBalancerStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerStatusSpec) ProtoMessage() {}

func (x *LoadBalancerStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerStatusSpec.ProtoReflect.Descriptor instead.
func (*LoadBalancerStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{35}
}

func (x *LoadBalancerStatusSpec) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *LoadBalancerStatusSpec) GetStopped() bool {
	if x != nil {
		return x.Stopped
	}
	return false
}

// KubernetesVersionSpec represents an available Kubernetes version.
type KubernetesVersionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesVersionSpec) Reset() {
	*x = KubernetesVersionSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesVersionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesVersionSpec) ProtoMessage() {}

func (x *KubernetesVersionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesVersionSpec.ProtoReflect.Descriptor instead.
func (*KubernetesVersionSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{36}
}

func (x *KubernetesVersionSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TalosVersionSpec represents an available Talos version.
type TalosVersionSpec struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	Version                      string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	CompatibleKubernetesVersions []string               `protobuf:"bytes,2,rep,name=compatible_kubernetes_versions,json=compatibleKubernetesVersions,proto3" json:"compatible_kubernetes_versions,omitempty"`
	Deprecated                   bool                   `protobuf:"varint,3,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *TalosVersionSpec) Reset() {
	*x = TalosVersionSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalosVersionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalosVersionSpec) ProtoMessage() {}

func (x *TalosVersionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalosVersionSpec.ProtoReflect.Descriptor instead.
func (*TalosVersionSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{37}
}

func (x *TalosVersionSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *TalosVersionSpec) GetCompatibleKubernetesVersions() []string {
	if x != nil {
		return x.CompatibleKubernetesVersions
	}
	return nil
}

func (x *TalosVersionSpec) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

// InstallationMediaSpec resource describes a Talos installation media that can be generated by the image factory. It also describes the necessary parameters to be passed to the image factory.
type InstallationMediaSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the human readable name of the image.
	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Architecture string `protobuf:"bytes,2,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Profile      string `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`
	ContentType  string `protobuf:"bytes,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
	// SrcFilePrefix defines the src filename to download the image from.
	SrcFilePrefix string `protobuf:"bytes,7,opt,name=src_file_prefix,json=srcFilePrefix,proto3" json:"src_file_prefix,omitempty"`
	// DestFilePrefix defines the dest filename to download the image to.
	DestFilePrefix string `protobuf:"bytes,8,opt,name=dest_file_prefix,json=destFilePrefix,proto3" json:"dest_file_prefix,omitempty"`
	// Extension defines the dest filename extension.
	Extension string `protobuf:"bytes,9,opt,name=extension,proto3" json:"extension,omitempty"`
	// NoSecureBoot means that the installation media doesn't support SecureBoot generation.
	NoSecureBoot bool `protobuf:"varint,11,opt,name=no_secure_boot,json=noSecureBoot,proto3" json:"no_secure_boot,omitempty"`
	// Overlay is the overlay to be always used when generating the image of this type.
	Overlay string `protobuf:"bytes,12,opt,name=overlay,proto3" json:"overlay,omitempty"`
	// MinTalosVersion defines minimum Talos version supported for the supplied configuration.
	MinTalosVersion string `protobuf:"bytes,13,opt,name=min_talos_version,json=minTalosVersion,proto3" json:"min_talos_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InstallationMediaSpec) Reset() {
	*x = InstallationMediaSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallationMediaSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallationMediaSpec) ProtoMessage() {}

func (x *InstallationMediaSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallationMediaSpec.ProtoReflect.Descriptor instead.
func (*InstallationMediaSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{38}
}

func (x *InstallationMediaSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstallationMediaSpec) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *InstallationMediaSpec) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *InstallationMediaSpec) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *InstallationMediaSpec) GetSrcFilePrefix() string {
	if x != nil {
		return x.SrcFilePrefix
	}
	return ""
}

func (x *InstallationMediaSpec) GetDestFilePrefix() string {
	if x != nil {
		return x.DestFilePrefix
	}
	return ""
}

func (x *InstallationMediaSpec) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *InstallationMediaSpec) GetNoSecureBoot() bool {
	if x != nil {
		return x.NoSecureBoot
	}
	return false
}

func (x *InstallationMediaSpec) GetOverlay() string {
	if x != nil {
		return x.Overlay
	}
	return ""
}

func (x *InstallationMediaSpec) GetMinTalosVersion() string {
	if x != nil {
		return x.MinTalosVersion
	}
	return ""
}

// ConfigPatchSpec represents the machine config patch.
type ConfigPatchSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data contains the config patch bytes. It is only set if the config patch is not compressed. Otherwise, CompressedData is set instead.
	//
	// Deprecated: use accessor methods GetUncompressedData/SetUncompressedData to manage this field.
	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// CompressedData contains the config patch bytes. It is only set if the config patch is not compressed. Otherwise, CompressedData is set instead.
	//
	// Deprecated: use accessor methods GetUncompressedData/SetUncompressedData to manage this field.
	CompressedData []byte `protobuf:"bytes,2,opt,name=compressed_data,json=compressedData,proto3" json:"compressed_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConfigPatchSpec) Reset() {
	*x = ConfigPatchSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigPatchSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigPatchSpec) ProtoMessage() {}

func (x *ConfigPatchSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigPatchSpec.ProtoReflect.Descriptor instead.
func (*ConfigPatchSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{39}
}

func (x *ConfigPatchSpec) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ConfigPatchSpec) GetCompressedData() []byte {
	if x != nil {
		return x.CompressedData
	}
	return nil
}

// MachineSetSpec describes the cluster machine group.
type MachineSetSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UpdateStrategy is the update strategy of the machine set.
	UpdateStrategy MachineSetSpec_UpdateStrategy `protobuf:"varint,1,opt,name=update_strategy,json=updateStrategy,proto3,enum=specs.MachineSetSpec_UpdateStrategy" json:"update_strategy,omitempty"`
	// MachineClass is the machine class to pick machines from for the machine set.
	// Use MachineAllocation instead.
	//
	// Deprecated: Marked as deprecated in omni/specs/omni.proto.
	MachineClass *MachineSetSpec_MachineAllocation `protobuf:"bytes,2,opt,name=machine_class,json=machineClass,proto3" json:"machine_class,omitempty"`
	// BootstrapSpec defines the bootstrapping spec of the machine set.
	// This field is immutable, only valid for the control plane machine set and used only once at the creation time.
	// When set, the machine set won't be created from scratch, instead, it will be bootstrapped using the given spec.
	BootstrapSpec *MachineSetSpec_BootstrapSpec `protobuf:"bytes,3,opt,name=bootstrap_spec,json=bootstrapSpec,proto3" json:"bootstrap_spec,omitempty"`
	// DeleteStrategy defines the delete strategy of the machine set.
	DeleteStrategy MachineSetSpec_UpdateStrategy `protobuf:"varint,4,opt,name=delete_strategy,json=deleteStrategy,proto3,enum=specs.MachineSetSpec_UpdateStrategy" json:"delete_strategy,omitempty"`
	// UpdateStrategyConfig defines the update strategy configuration.
	UpdateStrategyConfig *MachineSetSpec_UpdateStrategyConfig `protobuf:"bytes,5,opt,name=update_strategy_config,json=updateStrategyConfig,proto3" json:"update_strategy_config,omitempty"`
	// DeleteStrategyConfig defines the delete strategy configuration.
	DeleteStrategyConfig *MachineSetSpec_UpdateStrategyConfig `protobuf:"bytes,6,opt,name=delete_strategy_config,json=deleteStrategyConfig,proto3" json:"delete_strategy_config,omitempty"`
	// MachineAllocation rule to pick machines for the machine set.
	MachineAllocation *MachineSetSpec_MachineAllocation `protobuf:"bytes,7,opt,name=machine_allocation,json=machineAllocation,proto3" json:"machine_allocation,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MachineSetSpec) Reset() {
	*x = MachineSetSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSetSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSetSpec) ProtoMessage() {}

func (x *MachineSetSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSetSpec.ProtoReflect.Descriptor instead.
func (*MachineSetSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40}
}

func (x *MachineSetSpec) GetUpdateStrategy() MachineSetSpec_UpdateStrategy {
	if x != nil {
		return x.UpdateStrategy
	}
	return MachineSetSpec_Unset
}

// Deprecated: Marked as deprecated in omni/specs/omni.proto.
func (x *MachineSetSpec) GetMachineClass() *MachineSetSpec_MachineAllocation {
	if x != nil {
		return x.MachineClass
	}
	return nil
}

func (x *MachineSetSpec) GetBootstrapSpec() *MachineSetSpec_BootstrapSpec {
	if x != nil {
		return x.BootstrapSpec
	}
	return nil
}

func (x *MachineSetSpec) GetDeleteStrategy() MachineSetSpec_UpdateStrategy {
	if x != nil {
		return x.DeleteStrategy
	}
	return MachineSetSpec_Unset
}

func (x *MachineSetSpec) GetUpdateStrategyConfig() *MachineSetSpec_UpdateStrategyConfig {
	if x != nil {
		return x.UpdateStrategyConfig
	}
	return nil
}

func (x *MachineSetSpec) GetDeleteStrategyConfig() *MachineSetSpec_UpdateStrategyConfig {
	if x != nil {
		return x.DeleteStrategyConfig
	}
	return nil
}

func (x *MachineSetSpec) GetMachineAllocation() *MachineSetSpec_MachineAllocation {
	if x != nil {
		return x.MachineAllocation
	}
	return nil
}

// TalosUpgradeStatusSpec contains the status of the Talos upgrade process.
type TalosUpgradeStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current upgrade phase.
	Phase TalosUpgradeStatusSpec_Phase `protobuf:"varint,1,opt,name=phase,proto3,enum=specs.TalosUpgradeStatusSpec_Phase" json:"phase,omitempty"`
	// If phase is Failed, this contains the error message.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// If phase is Upgrading, this contains the current upgrade step.
	Step string `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	// If phase is Upgrading, this contains the current upgrade step progress.
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// Last successful upgrade version.
	LastUpgradeVersion string `protobuf:"bytes,5,opt,name=last_upgrade_version,json=lastUpgradeVersion,proto3" json:"last_upgrade_version,omitempty"`
	// Current version of the upgrade (if phase == Upgrading).
	CurrentUpgradeVersion string `protobuf:"bytes,6,opt,name=current_upgrade_version,json=currentUpgradeVersion,proto3" json:"current_upgrade_version,omitempty"`
	// List of versions available for upgrade.
	UpgradeVersions []string `protobuf:"bytes,7,rep,name=upgrade_versions,json=upgradeVersions,proto3" json:"upgrade_versions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TalosUpgradeStatusSpec) Reset() {
	*x = TalosUpgradeStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalosUpgradeStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalosUpgradeStatusSpec) ProtoMessage() {}

func (x *TalosUpgradeStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalosUpgradeStatusSpec.ProtoReflect.Descriptor instead.
func (*TalosUpgradeStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{41}
}

func (x *TalosUpgradeStatusSpec) GetPhase() TalosUpgradeStatusSpec_Phase {
	if x != nil {
		return x.Phase
	}
	return TalosUpgradeStatusSpec_Unknown
}

func (x *TalosUpgradeStatusSpec) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TalosUpgradeStatusSpec) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *TalosUpgradeStatusSpec) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TalosUpgradeStatusSpec) GetLastUpgradeVersion() string {
	if x != nil {
		return x.LastUpgradeVersion
	}
	return ""
}

func (x *TalosUpgradeStatusSpec) GetCurrentUpgradeVersion() string {
	if x != nil {
		return x.CurrentUpgradeVersion
	}
	return ""
}

func (x *TalosUpgradeStatusSpec) GetUpgradeVersions() []string {
	if x != nil {
		return x.UpgradeVersions
	}
	return nil
}

// MachineSetStatusSpec describes machine set status.
type MachineSetStatusSpec struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Phase    MachineSetPhase        `protobuf:"varint,1,opt,name=phase,proto3,enum=specs.MachineSetPhase" json:"phase,omitempty"`
	Ready    bool                   `protobuf:"varint,2,opt,name=ready,proto3" json:"ready,omitempty"`
	Error    string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Machines *Machines              `protobuf:"bytes,4,opt,name=machines,proto3" json:"machines,omitempty"`
	// config_hash is the combined hash of all cluster machines which are part of the machine set.
	ConfigHash string `protobuf:"bytes,5,opt,name=config_hash,json=configHash,proto3" json:"config_hash,omitempty"`
	// MachineAllocation is copied from the input MachineSet resource.
	MachineAllocation *MachineSetSpec_MachineAllocation `protobuf:"bytes,6,opt,name=machine_allocation,json=machineAllocation,proto3" json:"machine_allocation,omitempty"`
	// LockedUpdates is the number of machines which have pending config update but are locked.
	LockedUpdates uint32 `protobuf:"varint,7,opt,name=locked_updates,json=lockedUpdates,proto3" json:"locked_updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineSetStatusSpec) Reset() {
	*x = MachineSetStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSetStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSetStatusSpec) ProtoMessage() {}

func (x *MachineSetStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSetStatusSpec.ProtoReflect.Descriptor instead.
func (*MachineSetStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{42}
}

func (x *MachineSetStatusSpec) GetPhase() MachineSetPhase {
	if x != nil {
		return x.Phase
	}
	return MachineSetPhase_Unknown
}

func (x *MachineSetStatusSpec) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *MachineSetStatusSpec) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *MachineSetStatusSpec) GetMachines() *Machines {
	if x != nil {
		return x.Machines
	}
	return nil
}

func (x *MachineSetStatusSpec) GetConfigHash() string {
	if x != nil {
		return x.ConfigHash
	}
	return ""
}

func (x *MachineSetStatusSpec) GetMachineAllocation() *MachineSetSpec_MachineAllocation {
	if x != nil {
		return x.MachineAllocation
	}
	return nil
}

func (x *MachineSetStatusSpec) GetLockedUpdates() uint32 {
	if x != nil {
		return x.LockedUpdates
	}
	return 0
}

// MachineSetNodeSpec is a binding between ClusterMachine and MachineSet.
type MachineSetNodeSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineSetNodeSpec) Reset() {
	*x = MachineSetNodeSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSetNodeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSetNodeSpec) ProtoMessage() {}

func (x *MachineSetNodeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSetNodeSpec.ProtoReflect.Descriptor instead.
func (*MachineSetNodeSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{43}
}

// MachineLabelsSpec is the resource that adds user defined labels to the MachineStatus.
type MachineLabelsSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineLabelsSpec) Reset() {
	*x = MachineLabelsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineLabelsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineLabelsSpec) ProtoMessage() {}

func (x *MachineLabelsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineLabelsSpec.ProtoReflect.Descriptor instead.
func (*MachineLabelsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{44}
}

// MachineStatusSnapshotSpec describes latest known status of MachineStatus Talos resource.
type MachineStatusSnapshotSpec struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	MachineStatus *machine.MachineStatusEvent          `protobuf:"bytes,1,opt,name=machine_status,json=machineStatus,proto3" json:"machine_status,omitempty"`
	PowerStage    MachineStatusSnapshotSpec_PowerStage `protobuf:"varint,2,opt,name=power_stage,json=powerStage,proto3,enum=specs.MachineStatusSnapshotSpec_PowerStage" json:"power_stage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSnapshotSpec) Reset() {
	*x = MachineStatusSnapshotSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSnapshotSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSnapshotSpec) ProtoMessage() {}

func (x *MachineStatusSnapshotSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSnapshotSpec.ProtoReflect.Descriptor instead.
func (*MachineStatusSnapshotSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{45}
}

func (x *MachineStatusSnapshotSpec) GetMachineStatus() *machine.MachineStatusEvent {
	if x != nil {
		return x.MachineStatus
	}
	return nil
}

func (x *MachineStatusSnapshotSpec) GetPowerStage() MachineStatusSnapshotSpec_PowerStage {
	if x != nil {
		return x.PowerStage
	}
	return MachineStatusSnapshotSpec_POWER_STAGE_NONE
}

// ControlPlaneStatusSpec contains the status of the MachineSets which manage control plane nodes.
type ControlPlaneStatusSpec struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Conditions    []*ControlPlaneStatusSpec_Condition `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlPlaneStatusSpec) Reset() {
	*x = ControlPlaneStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlPlaneStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlPlaneStatusSpec) ProtoMessage() {}

func (x *ControlPlaneStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlPlaneStatusSpec.ProtoReflect.Descriptor instead.
func (*ControlPlaneStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{46}
}

func (x *ControlPlaneStatusSpec) GetConditions() []*ControlPlaneStatusSpec_Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// ClusterEndpointSpec contains a list of SideroLink (management) control plane endpoints.
type ClusterEndpointSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of SideroLink addresses for control plane nodes.
	ManagementAddresses []string `protobuf:"bytes,1,rep,name=management_addresses,json=managementAddresses,proto3" json:"management_addresses,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ClusterEndpointSpec) Reset() {
	*x = ClusterEndpointSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterEndpointSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterEndpointSpec) ProtoMessage() {}

func (x *ClusterEndpointSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterEndpointSpec.ProtoReflect.Descriptor instead.
func (*ClusterEndpointSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{47}
}

func (x *ClusterEndpointSpec) GetManagementAddresses() []string {
	if x != nil {
		return x.ManagementAddresses
	}
	return nil
}

// KubernetesStatusSpec contains the status of the Kubernetes critical resources in the cluster.
type KubernetesStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// status of each node, sorted by nodename
	Nodes []*KubernetesStatusSpec_NodeStatus `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// status of each static pod on each node, sorted by nodename, then by pod's app
	StaticPods    []*KubernetesStatusSpec_NodeStaticPods `protobuf:"bytes,2,rep,name=static_pods,json=staticPods,proto3" json:"static_pods,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesStatusSpec) Reset() {
	*x = KubernetesStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesStatusSpec) ProtoMessage() {}

func (x *KubernetesStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesStatusSpec.ProtoReflect.Descriptor instead.
func (*KubernetesStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{48}
}

func (x *KubernetesStatusSpec) GetNodes() []*KubernetesStatusSpec_NodeStatus {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *KubernetesStatusSpec) GetStaticPods() []*KubernetesStatusSpec_NodeStaticPods {
	if x != nil {
		return x.StaticPods
	}
	return nil
}

// KubernetesUpgradeStatus spec contains the status of the Kubernetes upgrade process.
type KubernetesUpgradeStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current upgrade phase.
	Phase KubernetesUpgradeStatusSpec_Phase `protobuf:"varint,1,opt,name=phase,proto3,enum=specs.KubernetesUpgradeStatusSpec_Phase" json:"phase,omitempty"`
	// If phase is Failed, this contains the error message.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// If phase is Upgrading, this contains the current upgrade step.
	Step string `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	// If phase is Upgrading, this contains the current upgrade step progress.
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// Last successful upgrade version.
	LastUpgradeVersion string `protobuf:"bytes,5,opt,name=last_upgrade_version,json=lastUpgradeVersion,proto3" json:"last_upgrade_version,omitempty"`
	// Current version of the upgrade (if phase == Upgrading).
	CurrentUpgradeVersion string `protobuf:"bytes,7,opt,name=current_upgrade_version,json=currentUpgradeVersion,proto3" json:"current_upgrade_version,omitempty"`
	// List of versions available for upgrade.
	UpgradeVersions []string `protobuf:"bytes,6,rep,name=upgrade_versions,json=upgradeVersions,proto3" json:"upgrade_versions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *KubernetesUpgradeStatusSpec) Reset() {
	*x = KubernetesUpgradeStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesUpgradeStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesUpgradeStatusSpec) ProtoMessage() {}

func (x *KubernetesUpgradeStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesUpgradeStatusSpec.ProtoReflect.Descriptor instead.
func (*KubernetesUpgradeStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{49}
}

func (x *KubernetesUpgradeStatusSpec) GetPhase() KubernetesUpgradeStatusSpec_Phase {
	if x != nil {
		return x.Phase
	}
	return KubernetesUpgradeStatusSpec_Unknown
}

func (x *KubernetesUpgradeStatusSpec) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *KubernetesUpgradeStatusSpec) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *KubernetesUpgradeStatusSpec) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *KubernetesUpgradeStatusSpec) GetLastUpgradeVersion() string {
	if x != nil {
		return x.LastUpgradeVersion
	}
	return ""
}

func (x *KubernetesUpgradeStatusSpec) GetCurrentUpgradeVersion() string {
	if x != nil {
		return x.CurrentUpgradeVersion
	}
	return ""
}

func (x *KubernetesUpgradeStatusSpec) GetUpgradeVersions() []string {
	if x != nil {
		return x.UpgradeVersions
	}
	return nil
}

// KubernetesUpgradeManifestStatus contains status of Kubernetes upgrade manifest sync.
type KubernetesUpgradeManifestStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of manifests out of sync.
	OutOfSync int32 `protobuf:"varint,1,opt,name=out_of_sync,json=outOfSync,proto3" json:"out_of_sync,omitempty"`
	// Last fatal error encountered (which prevented the sync).
	LastFatalError string `protobuf:"bytes,2,opt,name=last_fatal_error,json=lastFatalError,proto3" json:"last_fatal_error,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *KubernetesUpgradeManifestStatusSpec) Reset() {
	*x = KubernetesUpgradeManifestStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesUpgradeManifestStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesUpgradeManifestStatusSpec) ProtoMessage() {}

func (x *KubernetesUpgradeManifestStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesUpgradeManifestStatusSpec.ProtoReflect.Descriptor instead.
func (*KubernetesUpgradeManifestStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{50}
}

func (x *KubernetesUpgradeManifestStatusSpec) GetOutOfSync() int32 {
	if x != nil {
		return x.OutOfSync
	}
	return 0
}

func (x *KubernetesUpgradeManifestStatusSpec) GetLastFatalError() string {
	if x != nil {
		return x.LastFatalError
	}
	return ""
}

// DestroyStatusSpec describes the state of resource destroy.
type DestroyStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Phase describes the current destroy phase.
	Phase         string `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyStatusSpec) Reset() {
	*x = DestroyStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyStatusSpec) ProtoMessage() {}

func (x *DestroyStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyStatusSpec.ProtoReflect.Descriptor instead.
func (*DestroyStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{51}
}

func (x *DestroyStatusSpec) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

// OngoingTaskSpec describes any ongoing tasks.
type OngoingTaskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Title of the ongoing task.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Details contains the detailed task description.
	//
	// Types that are valid to be assigned to Details:
	//
	//	*OngoingTaskSpec_TalosUpgrade
	//	*OngoingTaskSpec_KubernetesUpgrade
	//	*OngoingTaskSpec_Destroy
	Details       isOngoingTaskSpec_Details `protobuf_oneof:"details"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OngoingTaskSpec) Reset() {
	*x = OngoingTaskSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OngoingTaskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OngoingTaskSpec) ProtoMessage() {}

func (x *OngoingTaskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OngoingTaskSpec.ProtoReflect.Descriptor instead.
func (*OngoingTaskSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{52}
}

func (x *OngoingTaskSpec) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OngoingTaskSpec) GetDetails() isOngoingTaskSpec_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *OngoingTaskSpec) GetTalosUpgrade() *TalosUpgradeStatusSpec {
	if x != nil {
		if x, ok := x.Details.(*OngoingTaskSpec_TalosUpgrade); ok {
			return x.TalosUpgrade
		}
	}
	return nil
}

func (x *OngoingTaskSpec) GetKubernetesUpgrade() *KubernetesUpgradeStatusSpec {
	if x != nil {
		if x, ok := x.Details.(*OngoingTaskSpec_KubernetesUpgrade); ok {
			return x.KubernetesUpgrade
		}
	}
	return nil
}

func (x *OngoingTaskSpec) GetDestroy() *DestroyStatusSpec {
	if x != nil {
		if x, ok := x.Details.(*OngoingTaskSpec_Destroy); ok {
			return x.Destroy
		}
	}
	return nil
}

type isOngoingTaskSpec_Details interface {
	isOngoingTaskSpec_Details()
}

type OngoingTaskSpec_TalosUpgrade struct {
	TalosUpgrade *TalosUpgradeStatusSpec `protobuf:"bytes,2,opt,name=talos_upgrade,json=talosUpgrade,proto3,oneof"`
}

type OngoingTaskSpec_KubernetesUpgrade struct {
	KubernetesUpgrade *KubernetesUpgradeStatusSpec `protobuf:"bytes,3,opt,name=kubernetes_upgrade,json=kubernetesUpgrade,proto3,oneof"`
}

type OngoingTaskSpec_Destroy struct {
	Destroy *DestroyStatusSpec `protobuf:"bytes,4,opt,name=destroy,proto3,oneof"`
}

func (*OngoingTaskSpec_TalosUpgrade) isOngoingTaskSpec_Details() {}

func (*OngoingTaskSpec_KubernetesUpgrade) isOngoingTaskSpec_Details() {}

func (*OngoingTaskSpec_Destroy) isOngoingTaskSpec_Details() {}

// ClusterMachineEncryptionKeySpec keeps generated encryption key for the machine disk encryption.
type ClusterMachineEncryptionKeySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data stores generated encryption key for the machine.
	Data          []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterMachineEncryptionKeySpec) Reset() {
	*x = ClusterMachineEncryptionKeySpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineEncryptionKeySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineEncryptionKeySpec) ProtoMessage() {}

func (x *ClusterMachineEncryptionKeySpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineEncryptionKeySpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineEncryptionKeySpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{53}
}

func (x *ClusterMachineEncryptionKeySpec) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ExposedServiceSpec describes a Kubernetes service exposed through Omni from a workload cluster.
type ExposedServiceSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Port is the host port the service is exposed on.
	Port uint32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	// Label is the human-readable label of the service to be displayed on Omni Web.
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// IconBase64 is the icon of the service to be displayed on Omni Web.
	IconBase64 string `protobuf:"bytes,3,opt,name=icon_base64,json=iconBase64,proto3" json:"icon_base64,omitempty"`
	// Url is the full URL to access the service.
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// Error is the last error that occurred when trying to expose the service.
	Error string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	// HasExplicitAlias is true if the service alias is set explicitly.
	HasExplicitAlias bool `protobuf:"varint,6,opt,name=has_explicit_alias,json=hasExplicitAlias,proto3" json:"has_explicit_alias,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExposedServiceSpec) Reset() {
	*x = ExposedServiceSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExposedServiceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExposedServiceSpec) ProtoMessage() {}

func (x *ExposedServiceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExposedServiceSpec.ProtoReflect.Descriptor instead.
func (*ExposedServiceSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{54}
}

func (x *ExposedServiceSpec) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ExposedServiceSpec) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ExposedServiceSpec) GetIconBase64() string {
	if x != nil {
		return x.IconBase64
	}
	return ""
}

func (x *ExposedServiceSpec) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ExposedServiceSpec) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ExposedServiceSpec) GetHasExplicitAlias() bool {
	if x != nil {
		return x.HasExplicitAlias
	}
	return false
}

// ClusterWorkloadProxyStatusSpec describes the status of the exposed services in a cluster.
type ClusterWorkloadProxyStatusSpec struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NumExposedServices uint32                 `protobuf:"varint,1,opt,name=num_exposed_services,json=numExposedServices,proto3" json:"num_exposed_services,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClusterWorkloadProxyStatusSpec) Reset() {
	*x = ClusterWorkloadProxyStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterWorkloadProxyStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterWorkloadProxyStatusSpec) ProtoMessage() {}

func (x *ClusterWorkloadProxyStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterWorkloadProxyStatusSpec.ProtoReflect.Descriptor instead.
func (*ClusterWorkloadProxyStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{55}
}

func (x *ClusterWorkloadProxyStatusSpec) GetNumExposedServices() uint32 {
	if x != nil {
		return x.NumExposedServices
	}
	return 0
}

type FeaturesConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// EnableWorkloadProxying enables workload proxying feature.
	EnableWorkloadProxying bool `protobuf:"varint,1,opt,name=enable_workload_proxying,json=enableWorkloadProxying,proto3" json:"enable_workload_proxying,omitempty"`
	// EtcdBackupSettings represents omni etcd backup settings.
	EtcdBackupSettings *EtcdBackupSettings `protobuf:"bytes,2,opt,name=etcd_backup_settings,json=etcdBackupSettings,proto3" json:"etcd_backup_settings,omitempty"`
	// EmbeddedDiscoveryService enables the embedded discovery service.
	EmbeddedDiscoveryService bool `protobuf:"varint,3,opt,name=embedded_discovery_service,json=embeddedDiscoveryService,proto3" json:"embedded_discovery_service,omitempty"`
	// AuditLogEnabled is true when Omni is configured to collect the audit logs.
	AuditLogEnabled bool `protobuf:"varint,4,opt,name=audit_log_enabled,json=auditLogEnabled,proto3" json:"audit_log_enabled,omitempty"`
	// ImageFactoryBaseUrl is the base URL of the image factory.
	ImageFactoryBaseUrl string `protobuf:"bytes,5,opt,name=image_factory_base_url,json=imageFactoryBaseUrl,proto3" json:"image_factory_base_url,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FeaturesConfigSpec) Reset() {
	*x = FeaturesConfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeaturesConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturesConfigSpec) ProtoMessage() {}

func (x *FeaturesConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturesConfigSpec.ProtoReflect.Descriptor instead.
func (*FeaturesConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{56}
}

func (x *FeaturesConfigSpec) GetEnableWorkloadProxying() bool {
	if x != nil {
		return x.EnableWorkloadProxying
	}
	return false
}

func (x *FeaturesConfigSpec) GetEtcdBackupSettings() *EtcdBackupSettings {
	if x != nil {
		return x.EtcdBackupSettings
	}
	return nil
}

func (x *FeaturesConfigSpec) GetEmbeddedDiscoveryService() bool {
	if x != nil {
		return x.EmbeddedDiscoveryService
	}
	return false
}

func (x *FeaturesConfigSpec) GetAuditLogEnabled() bool {
	if x != nil {
		return x.AuditLogEnabled
	}
	return false
}

func (x *FeaturesConfigSpec) GetImageFactoryBaseUrl() string {
	if x != nil {
		return x.ImageFactoryBaseUrl
	}
	return ""
}

type EtcdBackupSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TickInterval is the interval between checking for backups in controller.
	TickInterval *durationpb.Duration `protobuf:"bytes,1,opt,name=tick_interval,json=tickInterval,proto3" json:"tick_interval,omitempty"`
	// MinInterval is the minimum interval between backups.
	MinInterval *durationpb.Duration `protobuf:"bytes,2,opt,name=min_interval,json=minInterval,proto3" json:"min_interval,omitempty"`
	// MaxInterval is the maximum interval between backups.
	MaxInterval   *durationpb.Duration `protobuf:"bytes,3,opt,name=max_interval,json=maxInterval,proto3" json:"max_interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdBackupSettings) Reset() {
	*x = EtcdBackupSettings{}
	mi := &file_omni_specs_omni_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdBackupSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdBackupSettings) ProtoMessage() {}

func (x *EtcdBackupSettings) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdBackupSettings.ProtoReflect.Descriptor instead.
func (*EtcdBackupSettings) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{57}
}

func (x *EtcdBackupSettings) GetTickInterval() *durationpb.Duration {
	if x != nil {
		return x.TickInterval
	}
	return nil
}

func (x *EtcdBackupSettings) GetMinInterval() *durationpb.Duration {
	if x != nil {
		return x.MinInterval
	}
	return nil
}

func (x *EtcdBackupSettings) GetMaxInterval() *durationpb.Duration {
	if x != nil {
		return x.MaxInterval
	}
	return nil
}

// MachineClassSpec describes an Omni MachineClass resource spec.
type MachineClassSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MatchLabels is the list of labels to match the machine to make it part of the machine class.
	MatchLabels []string `protobuf:"bytes,1,rep,name=match_labels,json=matchLabels,proto3" json:"match_labels,omitempty"`
	// AutoProvision configures the machine class to automatically provision the machines.
	AutoProvision *MachineClassSpec_Provision `protobuf:"bytes,2,opt,name=auto_provision,json=autoProvision,proto3" json:"auto_provision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineClassSpec) Reset() {
	*x = MachineClassSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineClassSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineClassSpec) ProtoMessage() {}

func (x *MachineClassSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineClassSpec.ProtoReflect.Descriptor instead.
func (*MachineClassSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{58}
}

func (x *MachineClassSpec) GetMatchLabels() []string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *MachineClassSpec) GetAutoProvision() *MachineClassSpec_Provision {
	if x != nil {
		return x.AutoProvision
	}
	return nil
}

// InstallImage contains the information needed to build the install image URL of a machine to be used by the Talos installer.
type InstallImage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TalosVersion is the Talos version to use for the install image.
	TalosVersion string `protobuf:"bytes,1,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	// SchematicId is the schematic id to use for the install image.
	SchematicId string `protobuf:"bytes,2,opt,name=schematic_id,json=schematicId,proto3" json:"schematic_id,omitempty"`
	// SchematicInitialized is true if the schematic is initialized.
	SchematicInitialized bool `protobuf:"varint,3,opt,name=schematic_initialized,json=schematicInitialized,proto3" json:"schematic_initialized,omitempty"`
	// SchematicInvalid is true if the schematic is invalid.
	SchematicInvalid bool `protobuf:"varint,4,opt,name=schematic_invalid,json=schematicInvalid,proto3" json:"schematic_invalid,omitempty"`
	// Platform is the machine platform to use for the install image.
	Platform string `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`
	// SecurityState is used to decide the secure boot enablement in the install image.
	SecurityState *SecurityState `protobuf:"bytes,7,opt,name=security_state,json=securityState,proto3" json:"security_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallImage) Reset() {
	*x = InstallImage{}
	mi := &file_omni_specs_omni_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallImage) ProtoMessage() {}

func (x *InstallImage) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallImage.ProtoReflect.Descriptor instead.
func (*InstallImage) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{59}
}

func (x *InstallImage) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

func (x *InstallImage) GetSchematicId() string {
	if x != nil {
		return x.SchematicId
	}
	return ""
}

func (x *InstallImage) GetSchematicInitialized() bool {
	if x != nil {
		return x.SchematicInitialized
	}
	return false
}

func (x *InstallImage) GetSchematicInvalid() bool {
	if x != nil {
		return x.SchematicInvalid
	}
	return false
}

func (x *InstallImage) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *InstallImage) GetSecurityState() *SecurityState {
	if x != nil {
		return x.SecurityState
	}
	return nil
}

// MachineConfigGenOptionsSpec describes machine related config generation inputs.
type MachineConfigGenOptionsSpec struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	InstallDisk string                 `protobuf:"bytes,1,opt,name=install_disk,json=installDisk,proto3" json:"install_disk,omitempty"`
	// InstallImage contains the information needed to build the install image URL of a machine to be used by the Talos installer.
	InstallImage  *InstallImage `protobuf:"bytes,2,opt,name=install_image,json=installImage,proto3" json:"install_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineConfigGenOptionsSpec) Reset() {
	*x = MachineConfigGenOptionsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineConfigGenOptionsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineConfigGenOptionsSpec) ProtoMessage() {}

func (x *MachineConfigGenOptionsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineConfigGenOptionsSpec.ProtoReflect.Descriptor instead.
func (*MachineConfigGenOptionsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{60}
}

func (x *MachineConfigGenOptionsSpec) GetInstallDisk() string {
	if x != nil {
		return x.InstallDisk
	}
	return ""
}

func (x *MachineConfigGenOptionsSpec) GetInstallImage() *InstallImage {
	if x != nil {
		return x.InstallImage
	}
	return nil
}

// EtcdAuditResult is updated when the etcd audit removes a member.
//
// This resource is used to re-trigger the controlplane status checks when etcd audit removes a member.
type EtcdAuditResultSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// EtcdMemberIds contains the list of ids of the members that were last removed.
	// The list is always sorted.
	EtcdMemberIds []uint64 `protobuf:"varint,1,rep,packed,name=etcd_member_ids,json=etcdMemberIds,proto3" json:"etcd_member_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdAuditResultSpec) Reset() {
	*x = EtcdAuditResultSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdAuditResultSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdAuditResultSpec) ProtoMessage() {}

func (x *EtcdAuditResultSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdAuditResultSpec.ProtoReflect.Descriptor instead.
func (*EtcdAuditResultSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{61}
}

func (x *EtcdAuditResultSpec) GetEtcdMemberIds() []uint64 {
	if x != nil {
		return x.EtcdMemberIds
	}
	return nil
}

// KubeconfigSpec describes a Kubernetes client configuraiton for a cluster.
type KubeconfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Marshalled kubeconfig.
	Data          []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubeconfigSpec) Reset() {
	*x = KubeconfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubeconfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeconfigSpec) ProtoMessage() {}

func (x *KubeconfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeconfigSpec.ProtoReflect.Descriptor instead.
func (*KubeconfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{62}
}

func (x *KubeconfigSpec) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// KubernetesUsageSpec represents kubernetes resource usage for a cluster.
type KubernetesUsageSpec struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Cpu           *KubernetesUsageSpec_Quantity `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Mem           *KubernetesUsageSpec_Quantity `protobuf:"bytes,2,opt,name=mem,proto3" json:"mem,omitempty"`
	Storage       *KubernetesUsageSpec_Quantity `protobuf:"bytes,3,opt,name=storage,proto3" json:"storage,omitempty"`
	Pods          *KubernetesUsageSpec_Pod      `protobuf:"bytes,4,opt,name=pods,proto3" json:"pods,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesUsageSpec) Reset() {
	*x = KubernetesUsageSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesUsageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesUsageSpec) ProtoMessage() {}

func (x *KubernetesUsageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesUsageSpec.ProtoReflect.Descriptor instead.
func (*KubernetesUsageSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{63}
}

func (x *KubernetesUsageSpec) GetCpu() *KubernetesUsageSpec_Quantity {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *KubernetesUsageSpec) GetMem() *KubernetesUsageSpec_Quantity {
	if x != nil {
		return x.Mem
	}
	return nil
}

func (x *KubernetesUsageSpec) GetStorage() *KubernetesUsageSpec_Quantity {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *KubernetesUsageSpec) GetPods() *KubernetesUsageSpec_Pod {
	if x != nil {
		return x.Pods
	}
	return nil
}

// ImagePullRequestSpec describes an Omni ImagePullRequest resource spec.
type ImagePullRequestSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NodeImageList are the images to be pulled into the node.
	NodeImageList []*ImagePullRequestSpec_NodeImageList `protobuf:"bytes,1,rep,name=node_image_list,json=nodeImageList,proto3" json:"node_image_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImagePullRequestSpec) Reset() {
	*x = ImagePullRequestSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePullRequestSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullRequestSpec) ProtoMessage() {}

func (x *ImagePullRequestSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullRequestSpec.ProtoReflect.Descriptor instead.
func (*ImagePullRequestSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{64}
}

func (x *ImagePullRequestSpec) GetNodeImageList() []*ImagePullRequestSpec_NodeImageList {
	if x != nil {
		return x.NodeImageList
	}
	return nil
}

// ImagePullStatusSpec describes an Omni ImagePullStatus resource spec.
type ImagePullStatusSpec struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LastProcessedNode  string                 `protobuf:"bytes,1,opt,name=last_processed_node,json=lastProcessedNode,proto3" json:"last_processed_node,omitempty"`
	LastProcessedImage string                 `protobuf:"bytes,2,opt,name=last_processed_image,json=lastProcessedImage,proto3" json:"last_processed_image,omitempty"`
	LastProcessedError string                 `protobuf:"bytes,3,opt,name=last_processed_error,json=lastProcessedError,proto3" json:"last_processed_error,omitempty"`
	ProcessedCount     uint32                 `protobuf:"varint,4,opt,name=processed_count,json=processedCount,proto3" json:"processed_count,omitempty"`
	TotalCount         uint32                 `protobuf:"varint,5,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// RequestVersion is the version of the ImagePullRequest that this status is for.
	RequestVersion string `protobuf:"bytes,6,opt,name=request_version,json=requestVersion,proto3" json:"request_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ImagePullStatusSpec) Reset() {
	*x = ImagePullStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePullStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullStatusSpec) ProtoMessage() {}

func (x *ImagePullStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullStatusSpec.ProtoReflect.Descriptor instead.
func (*ImagePullStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{65}
}

func (x *ImagePullStatusSpec) GetLastProcessedNode() string {
	if x != nil {
		return x.LastProcessedNode
	}
	return ""
}

func (x *ImagePullStatusSpec) GetLastProcessedImage() string {
	if x != nil {
		return x.LastProcessedImage
	}
	return ""
}

func (x *ImagePullStatusSpec) GetLastProcessedError() string {
	if x != nil {
		return x.LastProcessedError
	}
	return ""
}

func (x *ImagePullStatusSpec) GetProcessedCount() uint32 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *ImagePullStatusSpec) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ImagePullStatusSpec) GetRequestVersion() string {
	if x != nil {
		return x.RequestVersion
	}
	return ""
}

// SchematicSpec keeps all schematics generated by Omni.
// For each schematic it keeps information about the list of extensions.
type SchematicSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchematicSpec) Reset() {
	*x = SchematicSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchematicSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchematicSpec) ProtoMessage() {}

func (x *SchematicSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchematicSpec.ProtoReflect.Descriptor instead.
func (*SchematicSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{66}
}

// TalosExtensionsSpec represents all available extensions for a particular Talos version.
type TalosExtensionsSpec struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Items         []*TalosExtensionsSpec_Info `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalosExtensionsSpec) Reset() {
	*x = TalosExtensionsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalosExtensionsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalosExtensionsSpec) ProtoMessage() {}

func (x *TalosExtensionsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalosExtensionsSpec.ProtoReflect.Descriptor instead.
func (*TalosExtensionsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{67}
}

func (x *TalosExtensionsSpec) GetItems() []*TalosExtensionsSpec_Info {
	if x != nil {
		return x.Items
	}
	return nil
}

// SchematicConfigurationSpec is the desired Image Factory schematic for a machine, machine set or a cluster.
type SchematicConfigurationSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchematicId   string                 `protobuf:"bytes,1,opt,name=schematic_id,json=schematicId,proto3" json:"schematic_id,omitempty"`
	TalosVersion  string                 `protobuf:"bytes,2,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchematicConfigurationSpec) Reset() {
	*x = SchematicConfigurationSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchematicConfigurationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchematicConfigurationSpec) ProtoMessage() {}

func (x *SchematicConfigurationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchematicConfigurationSpec.ProtoReflect.Descriptor instead.
func (*SchematicConfigurationSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{68}
}

func (x *SchematicConfigurationSpec) GetSchematicId() string {
	if x != nil {
		return x.SchematicId
	}
	return ""
}

func (x *SchematicConfigurationSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

// ExtensionsConfigurationSpec is the desired list of extensions to be installed on the machine or the set of machines.
type ExtensionsConfigurationSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extensions    []string               `protobuf:"bytes,1,rep,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionsConfigurationSpec) Reset() {
	*x = ExtensionsConfigurationSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionsConfigurationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionsConfigurationSpec) ProtoMessage() {}

func (x *ExtensionsConfigurationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionsConfigurationSpec.ProtoReflect.Descriptor instead.
func (*ExtensionsConfigurationSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{69}
}

func (x *ExtensionsConfigurationSpec) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// ExtensionsConfigurationStatusSpec is the status of the generated schematic.
// Deprecated: to be removed.
type ExtensionsConfigurationStatusSpec struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Phase         ExtensionsConfigurationStatusSpec_Phase `protobuf:"varint,1,opt,name=phase,proto3,enum=specs.ExtensionsConfigurationStatusSpec_Phase" json:"phase,omitempty"`
	Error         string                                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Extensions    []string                                `protobuf:"bytes,3,rep,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionsConfigurationStatusSpec) Reset() {
	*x = ExtensionsConfigurationStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionsConfigurationStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionsConfigurationStatusSpec) ProtoMessage() {}

func (x *ExtensionsConfigurationStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionsConfigurationStatusSpec.ProtoReflect.Descriptor instead.
func (*ExtensionsConfigurationStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{70}
}

func (x *ExtensionsConfigurationStatusSpec) GetPhase() ExtensionsConfigurationStatusSpec_Phase {
	if x != nil {
		return x.Phase
	}
	return ExtensionsConfigurationStatusSpec_Unknown
}

func (x *ExtensionsConfigurationStatusSpec) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ExtensionsConfigurationStatusSpec) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// MachineExtensionsSpec is the extensions list to be used for a machine.
type MachineExtensionsSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extensions    []string               `protobuf:"bytes,1,rep,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineExtensionsSpec) Reset() {
	*x = MachineExtensionsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineExtensionsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineExtensionsSpec) ProtoMessage() {}

func (x *MachineExtensionsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineExtensionsSpec.ProtoReflect.Descriptor instead.
func (*MachineExtensionsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{71}
}

func (x *MachineExtensionsSpec) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// MachineExtensionsStatusSpec defines status of each extension on the machine.
type MachineExtensionsStatusSpec struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Extensions    []*MachineExtensionsStatusSpec_Item `protobuf:"bytes,1,rep,name=extensions,proto3" json:"extensions,omitempty"`
	TalosVersion  string                              `protobuf:"bytes,2,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineExtensionsStatusSpec) Reset() {
	*x = MachineExtensionsStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineExtensionsStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineExtensionsStatusSpec) ProtoMessage() {}

func (x *MachineExtensionsStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineExtensionsStatusSpec.ProtoReflect.Descriptor instead.
func (*MachineExtensionsStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{72}
}

func (x *MachineExtensionsStatusSpec) GetExtensions() []*MachineExtensionsStatusSpec_Item {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *MachineExtensionsStatusSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

// MachineStatusMetricsSpec provides aggregated state of the number of registered and connected machines for the Omni instance.
type MachineStatusMetricsSpec struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	RegisteredMachinesCount uint32                 `protobuf:"varint,1,opt,name=registered_machines_count,json=registeredMachinesCount,proto3" json:"registered_machines_count,omitempty"`
	ConnectedMachinesCount  uint32                 `protobuf:"varint,2,opt,name=connected_machines_count,json=connectedMachinesCount,proto3" json:"connected_machines_count,omitempty"`
	AllocatedMachinesCount  uint32                 `protobuf:"varint,3,opt,name=allocated_machines_count,json=allocatedMachinesCount,proto3" json:"allocated_machines_count,omitempty"`
	PendingMachinesCount    uint32                 `protobuf:"varint,4,opt,name=pending_machines_count,json=pendingMachinesCount,proto3" json:"pending_machines_count,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MachineStatusMetricsSpec) Reset() {
	*x = MachineStatusMetricsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusMetricsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusMetricsSpec) ProtoMessage() {}

func (x *MachineStatusMetricsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusMetricsSpec.ProtoReflect.Descriptor instead.
func (*MachineStatusMetricsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{73}
}

func (x *MachineStatusMetricsSpec) GetRegisteredMachinesCount() uint32 {
	if x != nil {
		return x.RegisteredMachinesCount
	}
	return 0
}

func (x *MachineStatusMetricsSpec) GetConnectedMachinesCount() uint32 {
	if x != nil {
		return x.ConnectedMachinesCount
	}
	return 0
}

func (x *MachineStatusMetricsSpec) GetAllocatedMachinesCount() uint32 {
	if x != nil {
		return x.AllocatedMachinesCount
	}
	return 0
}

func (x *MachineStatusMetricsSpec) GetPendingMachinesCount() uint32 {
	if x != nil {
		return x.PendingMachinesCount
	}
	return 0
}

// ClusterStatusMetricsSpec provides aggregated state of the number of clusters in not ready phase.
// and the number of clusters in each phase.
type ClusterStatusMetricsSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NotReadyCount uint32                 `protobuf:"varint,1,opt,name=not_ready_count,json=notReadyCount,proto3" json:"not_ready_count,omitempty"`
	Phases        map[int32]uint32       `protobuf:"bytes,2,rep,name=phases,proto3" json:"phases,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterStatusMetricsSpec) Reset() {
	*x = ClusterStatusMetricsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatusMetricsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusMetricsSpec) ProtoMessage() {}

func (x *ClusterStatusMetricsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusMetricsSpec.ProtoReflect.Descriptor instead.
func (*ClusterStatusMetricsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{74}
}

func (x *ClusterStatusMetricsSpec) GetNotReadyCount() uint32 {
	if x != nil {
		return x.NotReadyCount
	}
	return 0
}

func (x *ClusterStatusMetricsSpec) GetPhases() map[int32]uint32 {
	if x != nil {
		return x.Phases
	}
	return nil
}

// ClusterKubernetesNodesSpec describes the list of nodes in a Kubernetes cluster.
type ClusterKubernetesNodesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Nodes is the list of nodes in the cluster.
	//
	// It is always sorted.
	Nodes         []string `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterKubernetesNodesSpec) Reset() {
	*x = ClusterKubernetesNodesSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterKubernetesNodesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterKubernetesNodesSpec) ProtoMessage() {}

func (x *ClusterKubernetesNodesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterKubernetesNodesSpec.ProtoReflect.Descriptor instead.
func (*ClusterKubernetesNodesSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{75}
}

func (x *ClusterKubernetesNodesSpec) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// KubernetesNodeAuditResultSpec describes the result of the Kubernetes node audit.
//
// It contains the list of nodes that were last removed.
type KubernetesNodeAuditResultSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DeletedNodes contains the list of nodes that were last removed.
	DeletedNodes  []string `protobuf:"bytes,1,rep,name=deleted_nodes,json=deletedNodes,proto3" json:"deleted_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesNodeAuditResultSpec) Reset() {
	*x = KubernetesNodeAuditResultSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesNodeAuditResultSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesNodeAuditResultSpec) ProtoMessage() {}

func (x *KubernetesNodeAuditResultSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesNodeAuditResultSpec.ProtoReflect.Descriptor instead.
func (*KubernetesNodeAuditResultSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{76}
}

func (x *KubernetesNodeAuditResultSpec) GetDeletedNodes() []string {
	if x != nil {
		return x.DeletedNodes
	}
	return nil
}

// MachineRequestSetSpec creates the number of machine requests.
// Can be either connected to a machine class or be manual.
type MachineRequestSetSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProviderId    string                 `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	MachineCount  int32                  `protobuf:"varint,2,opt,name=machine_count,json=machineCount,proto3" json:"machine_count,omitempty"`
	TalosVersion  string                 `protobuf:"bytes,3,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	Extensions    []string               `protobuf:"bytes,5,rep,name=extensions,proto3" json:"extensions,omitempty"`
	KernelArgs    []string               `protobuf:"bytes,6,rep,name=kernel_args,json=kernelArgs,proto3" json:"kernel_args,omitempty"`
	MetaValues    []*MetaValue           `protobuf:"bytes,7,rep,name=meta_values,json=metaValues,proto3" json:"meta_values,omitempty"`
	ProviderData  string                 `protobuf:"bytes,8,opt,name=provider_data,json=providerData,proto3" json:"provider_data,omitempty"`
	GrpcTunnel    GrpcTunnelMode         `protobuf:"varint,9,opt,name=grpc_tunnel,json=grpcTunnel,proto3,enum=specs.GrpcTunnelMode" json:"grpc_tunnel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineRequestSetSpec) Reset() {
	*x = MachineRequestSetSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineRequestSetSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineRequestSetSpec) ProtoMessage() {}

func (x *MachineRequestSetSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineRequestSetSpec.ProtoReflect.Descriptor instead.
func (*MachineRequestSetSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{77}
}

func (x *MachineRequestSetSpec) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *MachineRequestSetSpec) GetMachineCount() int32 {
	if x != nil {
		return x.MachineCount
	}
	return 0
}

func (x *MachineRequestSetSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

func (x *MachineRequestSetSpec) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *MachineRequestSetSpec) GetKernelArgs() []string {
	if x != nil {
		return x.KernelArgs
	}
	return nil
}

func (x *MachineRequestSetSpec) GetMetaValues() []*MetaValue {
	if x != nil {
		return x.MetaValues
	}
	return nil
}

func (x *MachineRequestSetSpec) GetProviderData() string {
	if x != nil {
		return x.ProviderData
	}
	return ""
}

func (x *MachineRequestSetSpec) GetGrpcTunnel() GrpcTunnelMode {
	if x != nil {
		return x.GrpcTunnel
	}
	return GrpcTunnelMode_UNSET
}

// MachineRequestSetStatusSpec describes the status of the machine request set.
type MachineRequestSetStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineRequestSetStatusSpec) Reset() {
	*x = MachineRequestSetStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineRequestSetStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineRequestSetStatusSpec) ProtoMessage() {}

func (x *MachineRequestSetStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineRequestSetStatusSpec.ProtoReflect.Descriptor instead.
func (*MachineRequestSetStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{78}
}

// ClusterDiagnosticSpec describes the nodes in a cluster with diagnostics information available (indicating potential problems).
type ClusterDiagnosticsSpec struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Nodes         []*ClusterDiagnosticsSpec_Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterDiagnosticsSpec) Reset() {
	*x = ClusterDiagnosticsSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterDiagnosticsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterDiagnosticsSpec) ProtoMessage() {}

func (x *ClusterDiagnosticsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterDiagnosticsSpec.ProtoReflect.Descriptor instead.
func (*ClusterDiagnosticsSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{79}
}

func (x *ClusterDiagnosticsSpec) GetNodes() []*ClusterDiagnosticsSpec_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// MachineClassStatusSpec describes an Omni MachineRequestSetPressure resource spec.
type MachineRequestSetPressureSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// RequiredMachines is the number of machines required by all machine sets which are using the request set.
	RequiredMachines uint32 `protobuf:"varint,1,opt,name=required_machines,json=requiredMachines,proto3" json:"required_machines,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MachineRequestSetPressureSpec) Reset() {
	*x = MachineRequestSetPressureSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineRequestSetPressureSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineRequestSetPressureSpec) ProtoMessage() {}

func (x *MachineRequestSetPressureSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineRequestSetPressureSpec.ProtoReflect.Descriptor instead.
func (*MachineRequestSetPressureSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{80}
}

func (x *MachineRequestSetPressureSpec) GetRequiredMachines() uint32 {
	if x != nil {
		return x.RequiredMachines
	}
	return 0
}

// ClusterMachineRequestStatusSpec is generated from the MachineRequestStatus when the machine is being automatically provisioned
// for a specific machine set and is used in the UI.
type ClusterMachineRequestStatusSpec struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Status        string                                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	MachineUuid   string                                `protobuf:"bytes,2,opt,name=machine_uuid,json=machineUuid,proto3" json:"machine_uuid,omitempty"`
	ProviderId    string                                `protobuf:"bytes,3,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	Stage         ClusterMachineRequestStatusSpec_Stage `protobuf:"varint,4,opt,name=stage,proto3,enum=specs.ClusterMachineRequestStatusSpec_Stage" json:"stage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterMachineRequestStatusSpec) Reset() {
	*x = ClusterMachineRequestStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineRequestStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineRequestStatusSpec) ProtoMessage() {}

func (x *ClusterMachineRequestStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineRequestStatusSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineRequestStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{81}
}

func (x *ClusterMachineRequestStatusSpec) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ClusterMachineRequestStatusSpec) GetMachineUuid() string {
	if x != nil {
		return x.MachineUuid
	}
	return ""
}

func (x *ClusterMachineRequestStatusSpec) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *ClusterMachineRequestStatusSpec) GetStage() ClusterMachineRequestStatusSpec_Stage {
	if x != nil {
		return x.Stage
	}
	return ClusterMachineRequestStatusSpec_UNKNOWN
}

// InfraMachineConfigSpec is the spec of the user-owned InfraMachineConfig resource.
type InfraMachineConfigSpec struct {
	state             protoimpl.MessageState                   `protogen:"open.v1"`
	PowerState        InfraMachineConfigSpec_MachinePowerState `protobuf:"varint,1,opt,name=power_state,json=powerState,proto3,enum=specs.InfraMachineConfigSpec_MachinePowerState" json:"power_state,omitempty"`
	AcceptanceStatus  InfraMachineConfigSpec_AcceptanceStatus  `protobuf:"varint,2,opt,name=acceptance_status,json=acceptanceStatus,proto3,enum=specs.InfraMachineConfigSpec_AcceptanceStatus" json:"acceptance_status,omitempty"`
	ExtraKernelArgs   string                                   `protobuf:"bytes,3,opt,name=extra_kernel_args,json=extraKernelArgs,proto3" json:"extra_kernel_args,omitempty"`
	RequestedRebootId string                                   `protobuf:"bytes,4,opt,name=requested_reboot_id,json=requestedRebootId,proto3" json:"requested_reboot_id,omitempty"`
	Cordoned          bool                                     `protobuf:"varint,5,opt,name=cordoned,proto3" json:"cordoned,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *InfraMachineConfigSpec) Reset() {
	*x = InfraMachineConfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfraMachineConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfraMachineConfigSpec) ProtoMessage() {}

func (x *InfraMachineConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfraMachineConfigSpec.ProtoReflect.Descriptor instead.
func (*InfraMachineConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{82}
}

func (x *InfraMachineConfigSpec) GetPowerState() InfraMachineConfigSpec_MachinePowerState {
	if x != nil {
		return x.PowerState
	}
	return InfraMachineConfigSpec_POWER_STATE_DEFAULT
}

func (x *InfraMachineConfigSpec) GetAcceptanceStatus() InfraMachineConfigSpec_AcceptanceStatus {
	if x != nil {
		return x.AcceptanceStatus
	}
	return InfraMachineConfigSpec_PENDING
}

func (x *InfraMachineConfigSpec) GetExtraKernelArgs() string {
	if x != nil {
		return x.ExtraKernelArgs
	}
	return ""
}

func (x *InfraMachineConfigSpec) GetRequestedRebootId() string {
	if x != nil {
		return x.RequestedRebootId
	}
	return ""
}

func (x *InfraMachineConfigSpec) GetCordoned() bool {
	if x != nil {
		return x.Cordoned
	}
	return false
}

type InfraMachineBMCConfigSpec struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Ipmi          *InfraMachineBMCConfigSpec_IPMI `protobuf:"bytes,1,opt,name=ipmi,proto3" json:"ipmi,omitempty"`
	Api           *InfraMachineBMCConfigSpec_API  `protobuf:"bytes,2,opt,name=api,proto3" json:"api,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfraMachineBMCConfigSpec) Reset() {
	*x = InfraMachineBMCConfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfraMachineBMCConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfraMachineBMCConfigSpec) ProtoMessage() {}

func (x *InfraMachineBMCConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfraMachineBMCConfigSpec.ProtoReflect.Descriptor instead.
func (*InfraMachineBMCConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{83}
}

func (x *InfraMachineBMCConfigSpec) GetIpmi() *InfraMachineBMCConfigSpec_IPMI {
	if x != nil {
		return x.Ipmi
	}
	return nil
}

func (x *InfraMachineBMCConfigSpec) GetApi() *InfraMachineBMCConfigSpec_API {
	if x != nil {
		return x.Api
	}
	return nil
}

type MaintenanceConfigStatusSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PublicKeyAtLastApply is the SideroLink public key of the machine at the time of the last apply.
	PublicKeyAtLastApply string `protobuf:"bytes,1,opt,name=public_key_at_last_apply,json=publicKeyAtLastApply,proto3" json:"public_key_at_last_apply,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MaintenanceConfigStatusSpec) Reset() {
	*x = MaintenanceConfigStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceConfigStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceConfigStatusSpec) ProtoMessage() {}

func (x *MaintenanceConfigStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceConfigStatusSpec.ProtoReflect.Descriptor instead.
func (*MaintenanceConfigStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{84}
}

func (x *MaintenanceConfigStatusSpec) GetPublicKeyAtLastApply() string {
	if x != nil {
		return x.PublicKeyAtLastApply
	}
	return ""
}

// NodeForceDestroyRequestSpec is used to force delete a node.
type NodeForceDestroyRequestSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeForceDestroyRequestSpec) Reset() {
	*x = NodeForceDestroyRequestSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeForceDestroyRequestSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeForceDestroyRequestSpec) ProtoMessage() {}

func (x *NodeForceDestroyRequestSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeForceDestroyRequestSpec.ProtoReflect.Descriptor instead.
func (*NodeForceDestroyRequestSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{85}
}

type DiscoveryAffiliateDeleteTaskSpec struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	ClusterId                string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	DiscoveryServiceEndpoint string                 `protobuf:"bytes,2,opt,name=discovery_service_endpoint,json=discoveryServiceEndpoint,proto3" json:"discovery_service_endpoint,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DiscoveryAffiliateDeleteTaskSpec) Reset() {
	*x = DiscoveryAffiliateDeleteTaskSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryAffiliateDeleteTaskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryAffiliateDeleteTaskSpec) ProtoMessage() {}

func (x *DiscoveryAffiliateDeleteTaskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryAffiliateDeleteTaskSpec.ProtoReflect.Descriptor instead.
func (*DiscoveryAffiliateDeleteTaskSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{86}
}

func (x *DiscoveryAffiliateDeleteTaskSpec) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DiscoveryAffiliateDeleteTaskSpec) GetDiscoveryServiceEndpoint() string {
	if x != nil {
		return x.DiscoveryServiceEndpoint
	}
	return ""
}

// InfraProviderCombinedStatusSpec unifies ProviderStatus and ProviderHealthStatus.
type InfraProviderCombinedStatusSpec struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Name          string                                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Icon          string                                  `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Health        *InfraProviderCombinedStatusSpec_Health `protobuf:"bytes,4,opt,name=health,proto3" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfraProviderCombinedStatusSpec) Reset() {
	*x = InfraProviderCombinedStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfraProviderCombinedStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfraProviderCombinedStatusSpec) ProtoMessage() {}

func (x *InfraProviderCombinedStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfraProviderCombinedStatusSpec.ProtoReflect.Descriptor instead.
func (*InfraProviderCombinedStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{87}
}

func (x *InfraProviderCombinedStatusSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfraProviderCombinedStatusSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InfraProviderCombinedStatusSpec) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *InfraProviderCombinedStatusSpec) GetHealth() *InfraProviderCombinedStatusSpec_Health {
	if x != nil {
		return x.Health
	}
	return nil
}

type MachineConfigDiffSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Diff          string                 `protobuf:"bytes,1,opt,name=diff,proto3" json:"diff,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineConfigDiffSpec) Reset() {
	*x = MachineConfigDiffSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineConfigDiffSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineConfigDiffSpec) ProtoMessage() {}

func (x *MachineConfigDiffSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineConfigDiffSpec.ProtoReflect.Descriptor instead.
func (*MachineConfigDiffSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{88}
}

func (x *MachineConfigDiffSpec) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

type ClusterMachineExtendedConfigSpec struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	ConfigSpec    *ClusterMachineConfigSpec `protobuf:"bytes,1,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	InstallImage  *InstallImage             `protobuf:"bytes,2,opt,name=install_image,json=installImage,proto3" json:"install_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterMachineExtendedConfigSpec) Reset() {
	*x = ClusterMachineExtendedConfigSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineExtendedConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineExtendedConfigSpec) ProtoMessage() {}

func (x *ClusterMachineExtendedConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineExtendedConfigSpec.ProtoReflect.Descriptor instead.
func (*ClusterMachineExtendedConfigSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{89}
}

func (x *ClusterMachineExtendedConfigSpec) GetConfigSpec() *ClusterMachineConfigSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *ClusterMachineExtendedConfigSpec) GetInstallImage() *InstallImage {
	if x != nil {
		return x.InstallImage
	}
	return nil
}

type ClusterOperationStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterOperationStatusSpec) Reset() {
	*x = ClusterOperationStatusSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterOperationStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterOperationStatusSpec) ProtoMessage() {}

func (x *ClusterOperationStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterOperationStatusSpec.ProtoReflect.Descriptor instead.
func (*ClusterOperationStatusSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{90}
}

// HardwareStatus describes machine hardware status.
type MachineStatusSpec_HardwareStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CPU information.
	Processors []*MachineStatusSpec_HardwareStatus_Processor `protobuf:"bytes,1,rep,name=processors,proto3" json:"processors,omitempty"`
	// Memory information.
	MemoryModules []*MachineStatusSpec_HardwareStatus_MemoryModule `protobuf:"bytes,2,rep,name=memory_modules,json=memoryModules,proto3" json:"memory_modules,omitempty"`
	// Blockdevice information.
	Blockdevices []*MachineStatusSpec_HardwareStatus_BlockDevice `protobuf:"bytes,3,rep,name=blockdevices,proto3" json:"blockdevices,omitempty"`
	// Machine architecture.
	Arch          string `protobuf:"bytes,4,opt,name=arch,proto3" json:"arch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_HardwareStatus) Reset() {
	*x = MachineStatusSpec_HardwareStatus{}
	mi := &file_omni_specs_omni_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_HardwareStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_HardwareStatus) ProtoMessage() {}

func (x *MachineStatusSpec_HardwareStatus) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_HardwareStatus.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_HardwareStatus) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MachineStatusSpec_HardwareStatus) GetProcessors() []*MachineStatusSpec_HardwareStatus_Processor {
	if x != nil {
		return x.Processors
	}
	return nil
}

func (x *MachineStatusSpec_HardwareStatus) GetMemoryModules() []*MachineStatusSpec_HardwareStatus_MemoryModule {
	if x != nil {
		return x.MemoryModules
	}
	return nil
}

func (x *MachineStatusSpec_HardwareStatus) GetBlockdevices() []*MachineStatusSpec_HardwareStatus_BlockDevice {
	if x != nil {
		return x.Blockdevices
	}
	return nil
}

func (x *MachineStatusSpec_HardwareStatus) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

// NetworkStatus describes the status of a machine network .
type MachineStatusSpec_NetworkStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current machine hostname.
	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Current machine domainname.
	Domainname string `protobuf:"bytes,2,opt,name=domainname,proto3" json:"domainname,omitempty"`
	// List of machine IPs.
	Addresses []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// List of default gateway IPs.
	DefaultGateways []string `protobuf:"bytes,4,rep,name=default_gateways,json=defaultGateways,proto3" json:"default_gateways,omitempty"`
	// List of physical network interfaces.
	NetworkLinks  []*MachineStatusSpec_NetworkStatus_NetworkLinkStatus `protobuf:"bytes,5,rep,name=network_links,json=networkLinks,proto3" json:"network_links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_NetworkStatus) Reset() {
	*x = MachineStatusSpec_NetworkStatus{}
	mi := &file_omni_specs_omni_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_NetworkStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_NetworkStatus) ProtoMessage() {}

func (x *MachineStatusSpec_NetworkStatus) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_NetworkStatus.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_NetworkStatus) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 1}
}

func (x *MachineStatusSpec_NetworkStatus) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *MachineStatusSpec_NetworkStatus) GetDomainname() string {
	if x != nil {
		return x.Domainname
	}
	return ""
}

func (x *MachineStatusSpec_NetworkStatus) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *MachineStatusSpec_NetworkStatus) GetDefaultGateways() []string {
	if x != nil {
		return x.DefaultGateways
	}
	return nil
}

func (x *MachineStatusSpec_NetworkStatus) GetNetworkLinks() []*MachineStatusSpec_NetworkStatus_NetworkLinkStatus {
	if x != nil {
		return x.NetworkLinks
	}
	return nil
}

// PlatformMetadata describes platform-specific information.
type MachineStatusSpec_PlatformMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Platform is the name of the platform (e.g. `aws`, `gcp`, `azure`).
	Platform string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	// Hostname is the hostname of the machine.
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Region (in the cloud).
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	// Availability zone (in the cloud).
	Zone string `protobuf:"bytes,4,opt,name=zone,proto3" json:"zone,omitempty"`
	// Instance type (in the cloud).
	InstanceType string `protobuf:"bytes,5,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	// Instance ID (in the cloud).
	InstanceId string `protobuf:"bytes,6,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Provider ID (for the Node resource).
	ProviderId string `protobuf:"bytes,7,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	// Spot instance flag.
	Spot          bool `protobuf:"varint,8,opt,name=spot,proto3" json:"spot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_PlatformMetadata) Reset() {
	*x = MachineStatusSpec_PlatformMetadata{}
	mi := &file_omni_specs_omni_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_PlatformMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_PlatformMetadata) ProtoMessage() {}

func (x *MachineStatusSpec_PlatformMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_PlatformMetadata.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_PlatformMetadata) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 2}
}

func (x *MachineStatusSpec_PlatformMetadata) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *MachineStatusSpec_PlatformMetadata) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *MachineStatusSpec_PlatformMetadata) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *MachineStatusSpec_PlatformMetadata) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *MachineStatusSpec_PlatformMetadata) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *MachineStatusSpec_PlatformMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *MachineStatusSpec_PlatformMetadata) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *MachineStatusSpec_PlatformMetadata) GetSpot() bool {
	if x != nil {
		return x.Spot
	}
	return false
}

type MachineStatusSpec_Schematic struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id is the image factory schematic id used for the image generation.
	//
	// This must be be plain id computed solely from the system extensions, not including the kernel command line arguments, META content etc.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Invalid marks the machine as having extensions installed bypassing image factory.
	// Which makes it impossible to detect schematic id and manage the image generation
	// using image factory.
	Invalid bool `protobuf:"varint,2,opt,name=invalid,proto3" json:"invalid,omitempty"`
	// Extensions is the list of extensions installed on the machine.
	Extensions []string `protobuf:"bytes,3,rep,name=extensions,proto3" json:"extensions,omitempty"`
	// InitialSchematic is the one first schematic the machine was using when it was connected to Omni for the first time.
	// Omni will always reset schematic configuration to this default value when no explicit schematic configuration is set.
	InitialSchematic string `protobuf:"bytes,4,opt,name=initial_schematic,json=initialSchematic,proto3" json:"initial_schematic,omitempty"`
	// Overlay contains the information about the overlay used during the machine image generation.
	// It is used by SBC images.
	Overlay *Overlay `protobuf:"bytes,6,opt,name=overlay,proto3" json:"overlay,omitempty"`
	// KernelArgs is the kernel command line arguments used during the machine image generation.
	KernelArgs []string `protobuf:"bytes,7,rep,name=kernel_args,json=kernelArgs,proto3" json:"kernel_args,omitempty"`
	// MetaValues is the list of meta values used during the machine image generation.
	MetaValues []*MetaValue `protobuf:"bytes,8,rep,name=meta_values,json=metaValues,proto3" json:"meta_values,omitempty"`
	// FullId is the full id of the schematic - including the kernel command line arguments, META content etc.
	//
	// It is used instead of Id primarily when the machine has secure boot enabled.
	FullId string `protobuf:"bytes,9,opt,name=full_id,json=fullId,proto3" json:"full_id,omitempty"`
	// InAgentMode indicates that the machine is running in agent mode.
	InAgentMode   bool `protobuf:"varint,10,opt,name=in_agent_mode,json=inAgentMode,proto3" json:"in_agent_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_Schematic) Reset() {
	*x = MachineStatusSpec_Schematic{}
	mi := &file_omni_specs_omni_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_Schematic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_Schematic) ProtoMessage() {}

func (x *MachineStatusSpec_Schematic) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_Schematic.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_Schematic) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 3}
}

func (x *MachineStatusSpec_Schematic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineStatusSpec_Schematic) GetInvalid() bool {
	if x != nil {
		return x.Invalid
	}
	return false
}

func (x *MachineStatusSpec_Schematic) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *MachineStatusSpec_Schematic) GetInitialSchematic() string {
	if x != nil {
		return x.InitialSchematic
	}
	return ""
}

func (x *MachineStatusSpec_Schematic) GetOverlay() *Overlay {
	if x != nil {
		return x.Overlay
	}
	return nil
}

func (x *MachineStatusSpec_Schematic) GetKernelArgs() []string {
	if x != nil {
		return x.KernelArgs
	}
	return nil
}

func (x *MachineStatusSpec_Schematic) GetMetaValues() []*MetaValue {
	if x != nil {
		return x.MetaValues
	}
	return nil
}

func (x *MachineStatusSpec_Schematic) GetFullId() string {
	if x != nil {
		return x.FullId
	}
	return ""
}

func (x *MachineStatusSpec_Schematic) GetInAgentMode() bool {
	if x != nil {
		return x.InAgentMode
	}
	return false
}

type MachineStatusSpec_Diagnostic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       []string               `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_Diagnostic) Reset() {
	*x = MachineStatusSpec_Diagnostic{}
	mi := &file_omni_specs_omni_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_Diagnostic) ProtoMessage() {}

func (x *MachineStatusSpec_Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_Diagnostic.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_Diagnostic) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 4}
}

func (x *MachineStatusSpec_Diagnostic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineStatusSpec_Diagnostic) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MachineStatusSpec_Diagnostic) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

// Processor describes machine CPU.
type MachineStatusSpec_HardwareStatus_Processor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of cores.
	CoreCount uint32 `protobuf:"varint,1,opt,name=core_count,json=coreCount,proto3" json:"core_count,omitempty"`
	// Number of threads.
	ThreadCount uint32 `protobuf:"varint,2,opt,name=thread_count,json=threadCount,proto3" json:"thread_count,omitempty"`
	// CPU frequency in MHz.
	Frequency uint32 `protobuf:"varint,3,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// CPU manufacturer and model.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// CPU manufacturer.
	Manufacturer  string `protobuf:"bytes,5,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_HardwareStatus_Processor) Reset() {
	*x = MachineStatusSpec_HardwareStatus_Processor{}
	mi := &file_omni_specs_omni_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_HardwareStatus_Processor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_HardwareStatus_Processor) ProtoMessage() {}

func (x *MachineStatusSpec_HardwareStatus_Processor) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_HardwareStatus_Processor.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_HardwareStatus_Processor) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *MachineStatusSpec_HardwareStatus_Processor) GetCoreCount() uint32 {
	if x != nil {
		return x.CoreCount
	}
	return 0
}

func (x *MachineStatusSpec_HardwareStatus_Processor) GetThreadCount() uint32 {
	if x != nil {
		return x.ThreadCount
	}
	return 0
}

func (x *MachineStatusSpec_HardwareStatus_Processor) GetFrequency() uint32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *MachineStatusSpec_HardwareStatus_Processor) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_Processor) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

// MemoryModule describes machine memory.
type MachineStatusSpec_HardwareStatus_MemoryModule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Size of memory in MB.
	SizeMb uint32 `protobuf:"varint,1,opt,name=size_mb,json=sizeMb,proto3" json:"size_mb,omitempty"`
	// Memory manufacturer and model.
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_HardwareStatus_MemoryModule) Reset() {
	*x = MachineStatusSpec_HardwareStatus_MemoryModule{}
	mi := &file_omni_specs_omni_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_HardwareStatus_MemoryModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_HardwareStatus_MemoryModule) ProtoMessage() {}

func (x *MachineStatusSpec_HardwareStatus_MemoryModule) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_HardwareStatus_MemoryModule.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_HardwareStatus_MemoryModule) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 0, 1}
}

func (x *MachineStatusSpec_HardwareStatus_MemoryModule) GetSizeMb() uint32 {
	if x != nil {
		return x.SizeMb
	}
	return 0
}

func (x *MachineStatusSpec_HardwareStatus_MemoryModule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// BlockDevice describes a block device.
type MachineStatusSpec_HardwareStatus_BlockDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Size indicates the disk size in bytes.
	Size uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Model idicates the disk model.
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// Linux blockdevice name (e.g. `/dev/sda`).
	LinuxName string `protobuf:"bytes,3,opt,name=linux_name,json=linuxName,proto3" json:"linux_name,omitempty"`
	// Name as in `/sys/block/<dev>/device/name`.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Serial as in `/sys/block/<dev>/device/serial`.
	Serial string `protobuf:"bytes,5,opt,name=serial,proto3" json:"serial,omitempty"`
	// Uuid as in `/sys/block/<dev>/device/uuid`.
	Uuid string `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Wwid as in `/sys/block/<dev>/device/wwid`.
	Wwid string `protobuf:"bytes,8,opt,name=wwid,proto3" json:"wwid,omitempty"`
	// Type is a type of the disk: nvme, ssd, hdd, sd card.
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	// BusPath is the bus path of the disk.
	BusPath string `protobuf:"bytes,10,opt,name=bus_path,json=busPath,proto3" json:"bus_path,omitempty"`
	// SystemDisk is the system disk flag.
	SystemDisk bool `protobuf:"varint,11,opt,name=system_disk,json=systemDisk,proto3" json:"system_disk,omitempty"`
	// Readonly disk.
	Readonly bool `protobuf:"varint,12,opt,name=readonly,proto3" json:"readonly,omitempty"`
	// Transport is the disk transport.
	Transport     string `protobuf:"bytes,13,opt,name=transport,proto3" json:"transport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) Reset() {
	*x = MachineStatusSpec_HardwareStatus_BlockDevice{}
	mi := &file_omni_specs_omni_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_HardwareStatus_BlockDevice) ProtoMessage() {}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_HardwareStatus_BlockDevice.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_HardwareStatus_BlockDevice) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 0, 2}
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetLinuxName() string {
	if x != nil {
		return x.LinuxName
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetWwid() string {
	if x != nil {
		return x.Wwid
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetBusPath() string {
	if x != nil {
		return x.BusPath
	}
	return ""
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetSystemDisk() bool {
	if x != nil {
		return x.SystemDisk
	}
	return false
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *MachineStatusSpec_HardwareStatus_BlockDevice) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

// Physical network interfaces.
type MachineStatusSpec_NetworkStatus_NetworkLinkStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Linux interface name.
	LinuxName string `protobuf:"bytes,1,opt,name=linux_name,json=linuxName,proto3" json:"linux_name,omitempty"`
	// MAC address.
	HardwareAddress string `protobuf:"bytes,2,opt,name=hardware_address,json=hardwareAddress,proto3" json:"hardware_address,omitempty"`
	// Speed in Mbps.
	SpeedMbps uint32 `protobuf:"varint,3,opt,name=speed_mbps,json=speedMbps,proto3" json:"speed_mbps,omitempty"`
	// Link status.
	LinkUp bool `protobuf:"varint,4,opt,name=link_up,json=linkUp,proto3" json:"link_up,omitempty"`
	// Hardware description.
	Description   string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec_NetworkStatus_NetworkLinkStatus) Reset() {
	*x = MachineStatusSpec_NetworkStatus_NetworkLinkStatus{}
	mi := &file_omni_specs_omni_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec_NetworkStatus_NetworkLinkStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec_NetworkStatus_NetworkLinkStatus) ProtoMessage() {}

func (x *MachineStatusSpec_NetworkStatus_NetworkLinkStatus) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec_NetworkStatus_NetworkLinkStatus.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec_NetworkStatus_NetworkLinkStatus) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{4, 1, 0}
}

func (x *MachineStatusSpec_NetworkStatus_NetworkLinkStatus) GetLinuxName() string {
	if x != nil {
		return x.LinuxName
	}
	return ""
}

func (x *MachineStatusSpec_NetworkStatus_NetworkLinkStatus) GetHardwareAddress() string {
	if x != nil {
		return x.HardwareAddress
	}
	return ""
}

func (x *MachineStatusSpec_NetworkStatus_NetworkLinkStatus) GetSpeedMbps() uint32 {
	if x != nil {
		return x.SpeedMbps
	}
	return 0
}

func (x *MachineStatusSpec_NetworkStatus_NetworkLinkStatus) GetLinkUp() bool {
	if x != nil {
		return x.LinkUp
	}
	return false
}

func (x *MachineStatusSpec_NetworkStatus_NetworkLinkStatus) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ClusterSpec_Features struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// EnableWorkloadProxy enables workload proxy.
	EnableWorkloadProxy bool `protobuf:"varint,1,opt,name=enable_workload_proxy,json=enableWorkloadProxy,proto3" json:"enable_workload_proxy,omitempty"`
	// DiskEncryption enables disk encryption on all nodes.
	DiskEncryption bool `protobuf:"varint,2,opt,name=disk_encryption,json=diskEncryption,proto3" json:"disk_encryption,omitempty"`
	// UseEmbeddedDiscoveryService enables the embedded discovery service.
	UseEmbeddedDiscoveryService bool `protobuf:"varint,3,opt,name=use_embedded_discovery_service,json=useEmbeddedDiscoveryService,proto3" json:"use_embedded_discovery_service,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ClusterSpec_Features) Reset() {
	*x = ClusterSpec_Features{}
	mi := &file_omni_specs_omni_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterSpec_Features) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec_Features) ProtoMessage() {}

func (x *ClusterSpec_Features) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSpec_Features.ProtoReflect.Descriptor instead.
func (*ClusterSpec_Features) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ClusterSpec_Features) GetEnableWorkloadProxy() bool {
	if x != nil {
		return x.EnableWorkloadProxy
	}
	return false
}

func (x *ClusterSpec_Features) GetDiskEncryption() bool {
	if x != nil {
		return x.DiskEncryption
	}
	return false
}

func (x *ClusterSpec_Features) GetUseEmbeddedDiscoveryService() bool {
	if x != nil {
		return x.UseEmbeddedDiscoveryService
	}
	return false
}

type ClusterMachineStatusSpec_ProvisionStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProviderId    string                 `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterMachineStatusSpec_ProvisionStatus) Reset() {
	*x = ClusterMachineStatusSpec_ProvisionStatus{}
	mi := &file_omni_specs_omni_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachineStatusSpec_ProvisionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachineStatusSpec_ProvisionStatus) ProtoMessage() {}

func (x *ClusterMachineStatusSpec_ProvisionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachineStatusSpec_ProvisionStatus.ProtoReflect.Descriptor instead.
func (*ClusterMachineStatusSpec_ProvisionStatus) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{25, 0}
}

func (x *ClusterMachineStatusSpec_ProvisionStatus) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *ClusterMachineStatusSpec_ProvisionStatus) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// MachineClass defines the machine class allocation mode config.
type MachineSetSpec_MachineClass struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name defines the machine class/machine request set id to select the machines from.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// MachineCount defines fixed amount of the machines to allocated from the machine class/request set.
	MachineCount uint32 `protobuf:"varint,2,opt,name=machine_count,json=machineCount,proto3" json:"machine_count,omitempty"`
	// AllocationType defines special constants for the amount of machines to be allocated.
	AllocationType MachineSetSpec_MachineClass_Type `protobuf:"varint,3,opt,name=allocation_type,json=allocationType,proto3,enum=specs.MachineSetSpec_MachineClass_Type" json:"allocation_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MachineSetSpec_MachineClass) Reset() {
	*x = MachineSetSpec_MachineClass{}
	mi := &file_omni_specs_omni_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSetSpec_MachineClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSetSpec_MachineClass) ProtoMessage() {}

func (x *MachineSetSpec_MachineClass) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSetSpec_MachineClass.ProtoReflect.Descriptor instead.
func (*MachineSetSpec_MachineClass) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40, 0}
}

func (x *MachineSetSpec_MachineClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineSetSpec_MachineClass) GetMachineCount() uint32 {
	if x != nil {
		return x.MachineCount
	}
	return 0
}

func (x *MachineSetSpec_MachineClass) GetAllocationType() MachineSetSpec_MachineClass_Type {
	if x != nil {
		return x.AllocationType
	}
	return MachineSetSpec_MachineClass_Static
}

// MachineAllocation defines the machine automatic allocation configuration.
type MachineSetSpec_MachineAllocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name defines the machine class/machine request set id to select the machines from.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// MachineCount defines fixed amount of the machines to allocated from the machine class/request set.
	MachineCount uint32 `protobuf:"varint,2,opt,name=machine_count,json=machineCount,proto3" json:"machine_count,omitempty"`
	// AllocationType defines special constants for the amount of machines to be allocated.
	AllocationType MachineSetSpec_MachineAllocation_Type `protobuf:"varint,3,opt,name=allocation_type,json=allocationType,proto3,enum=specs.MachineSetSpec_MachineAllocation_Type" json:"allocation_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MachineSetSpec_MachineAllocation) Reset() {
	*x = MachineSetSpec_MachineAllocation{}
	mi := &file_omni_specs_omni_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSetSpec_MachineAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSetSpec_MachineAllocation) ProtoMessage() {}

func (x *MachineSetSpec_MachineAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSetSpec_MachineAllocation.ProtoReflect.Descriptor instead.
func (*MachineSetSpec_MachineAllocation) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40, 1}
}

func (x *MachineSetSpec_MachineAllocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineSetSpec_MachineAllocation) GetMachineCount() uint32 {
	if x != nil {
		return x.MachineCount
	}
	return 0
}

func (x *MachineSetSpec_MachineAllocation) GetAllocationType() MachineSetSpec_MachineAllocation_Type {
	if x != nil {
		return x.AllocationType
	}
	return MachineSetSpec_MachineAllocation_Static
}

// BootstrapSpec defines the bootstrap spec for the control plane machine set.
// It can contain a reference to an etcd backup, which can be used to bootstrap etcd.
type MachineSetSpec_BootstrapSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ClusterUuid is the UUID of the cluster to bootstrap. It can be obtained via `omnictl get clusteruuid <cluster-name>`
	ClusterUuid string `protobuf:"bytes,1,opt,name=cluster_uuid,json=clusterUuid,proto3" json:"cluster_uuid,omitempty"`
	// Snapshot is the file name of the etcd snapshot to restore from. It follows the format similar to `FFFFFFFFFFFFFFFF.snapshot`.
	Snapshot      string `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineSetSpec_BootstrapSpec) Reset() {
	*x = MachineSetSpec_BootstrapSpec{}
	mi := &file_omni_specs_omni_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSetSpec_BootstrapSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSetSpec_BootstrapSpec) ProtoMessage() {}

func (x *MachineSetSpec_BootstrapSpec) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSetSpec_BootstrapSpec.ProtoReflect.Descriptor instead.
func (*MachineSetSpec_BootstrapSpec) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40, 2}
}

func (x *MachineSetSpec_BootstrapSpec) GetClusterUuid() string {
	if x != nil {
		return x.ClusterUuid
	}
	return ""
}

func (x *MachineSetSpec_BootstrapSpec) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

// RollingUpdateStrategyConfig defines the rolling update strategy configuration.
type MachineSetSpec_RollingUpdateStrategyConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MaxParallelism is the maximum number of machines that can be processed in parallel.
	// When unset or set to 0, it defaults to 1.
	MaxParallelism uint32 `protobuf:"varint,1,opt,name=max_parallelism,json=maxParallelism,proto3" json:"max_parallelism,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MachineSetSpec_RollingUpdateStrategyConfig) Reset() {
	*x = MachineSetSpec_RollingUpdateStrategyConfig{}
	mi := &file_omni_specs_omni_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSetSpec_RollingUpdateStrategyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSetSpec_RollingUpdateStrategyConfig) ProtoMessage() {}

func (x *MachineSetSpec_RollingUpdateStrategyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSetSpec_RollingUpdateStrategyConfig.ProtoReflect.Descriptor instead.
func (*MachineSetSpec_RollingUpdateStrategyConfig) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40, 3}
}

func (x *MachineSetSpec_RollingUpdateStrategyConfig) GetMaxParallelism() uint32 {
	if x != nil {
		return x.MaxParallelism
	}
	return 0
}

// UpdateConfig defines the update configuration.
type MachineSetSpec_UpdateStrategyConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Rolling is the rolling update configuration.
	// Used only when the UpdateStrategy is set to Rolling.
	Rolling       *MachineSetSpec_RollingUpdateStrategyConfig `protobuf:"bytes,1,opt,name=rolling,proto3" json:"rolling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineSetSpec_UpdateStrategyConfig) Reset() {
	*x = MachineSetSpec_UpdateStrategyConfig{}
	mi := &file_omni_specs_omni_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSetSpec_UpdateStrategyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSetSpec_UpdateStrategyConfig) ProtoMessage() {}

func (x *MachineSetSpec_UpdateStrategyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSetSpec_UpdateStrategyConfig.ProtoReflect.Descriptor instead.
func (*MachineSetSpec_UpdateStrategyConfig) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{40, 4}
}

func (x *MachineSetSpec_UpdateStrategyConfig) GetRolling() *MachineSetSpec_RollingUpdateStrategyConfig {
	if x != nil {
		return x.Rolling
	}
	return nil
}

type ControlPlaneStatusSpec_Condition struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Type          ConditionType                             `protobuf:"varint,1,opt,name=type,proto3,enum=specs.ConditionType" json:"type,omitempty"`
	Reason        string                                    `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Status        ControlPlaneStatusSpec_Condition_Status   `protobuf:"varint,3,opt,name=status,proto3,enum=specs.ControlPlaneStatusSpec_Condition_Status" json:"status,omitempty"`
	Severity      ControlPlaneStatusSpec_Condition_Severity `protobuf:"varint,4,opt,name=severity,proto3,enum=specs.ControlPlaneStatusSpec_Condition_Severity" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlPlaneStatusSpec_Condition) Reset() {
	*x = ControlPlaneStatusSpec_Condition{}
	mi := &file_omni_specs_omni_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlPlaneStatusSpec_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlPlaneStatusSpec_Condition) ProtoMessage() {}

func (x *ControlPlaneStatusSpec_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlPlaneStatusSpec_Condition.ProtoReflect.Descriptor instead.
func (*ControlPlaneStatusSpec_Condition) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{46, 0}
}

func (x *ControlPlaneStatusSpec_Condition) GetType() ConditionType {
	if x != nil {
		return x.Type
	}
	return ConditionType_UnknownCondition
}

func (x *ControlPlaneStatusSpec_Condition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ControlPlaneStatusSpec_Condition) GetStatus() ControlPlaneStatusSpec_Condition_Status {
	if x != nil {
		return x.Status
	}
	return ControlPlaneStatusSpec_Condition_Unknown
}

func (x *ControlPlaneStatusSpec_Condition) GetSeverity() ControlPlaneStatusSpec_Condition_Severity {
	if x != nil {
		return x.Severity
	}
	return ControlPlaneStatusSpec_Condition_Info
}

type KubernetesStatusSpec_NodeStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Nodename       string                 `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	KubeletVersion string                 `protobuf:"bytes,2,opt,name=kubelet_version,json=kubeletVersion,proto3" json:"kubelet_version,omitempty"`
	Ready          bool                   `protobuf:"varint,3,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *KubernetesStatusSpec_NodeStatus) Reset() {
	*x = KubernetesStatusSpec_NodeStatus{}
	mi := &file_omni_specs_omni_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesStatusSpec_NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesStatusSpec_NodeStatus) ProtoMessage() {}

func (x *KubernetesStatusSpec_NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesStatusSpec_NodeStatus.ProtoReflect.Descriptor instead.
func (*KubernetesStatusSpec_NodeStatus) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{48, 0}
}

func (x *KubernetesStatusSpec_NodeStatus) GetNodename() string {
	if x != nil {
		return x.Nodename
	}
	return ""
}

func (x *KubernetesStatusSpec_NodeStatus) GetKubeletVersion() string {
	if x != nil {
		return x.KubeletVersion
	}
	return ""
}

func (x *KubernetesStatusSpec_NodeStatus) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type KubernetesStatusSpec_StaticPodStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           string                 `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Ready         bool                   `protobuf:"varint,3,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesStatusSpec_StaticPodStatus) Reset() {
	*x = KubernetesStatusSpec_StaticPodStatus{}
	mi := &file_omni_specs_omni_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesStatusSpec_StaticPodStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesStatusSpec_StaticPodStatus) ProtoMessage() {}

func (x *KubernetesStatusSpec_StaticPodStatus) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesStatusSpec_StaticPodStatus.ProtoReflect.Descriptor instead.
func (*KubernetesStatusSpec_StaticPodStatus) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{48, 1}
}

func (x *KubernetesStatusSpec_StaticPodStatus) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *KubernetesStatusSpec_StaticPodStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *KubernetesStatusSpec_StaticPodStatus) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type KubernetesStatusSpec_NodeStaticPods struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Nodename      string                                  `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	StaticPods    []*KubernetesStatusSpec_StaticPodStatus `protobuf:"bytes,2,rep,name=static_pods,json=staticPods,proto3" json:"static_pods,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesStatusSpec_NodeStaticPods) Reset() {
	*x = KubernetesStatusSpec_NodeStaticPods{}
	mi := &file_omni_specs_omni_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesStatusSpec_NodeStaticPods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesStatusSpec_NodeStaticPods) ProtoMessage() {}

func (x *KubernetesStatusSpec_NodeStaticPods) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesStatusSpec_NodeStaticPods.ProtoReflect.Descriptor instead.
func (*KubernetesStatusSpec_NodeStaticPods) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{48, 2}
}

func (x *KubernetesStatusSpec_NodeStaticPods) GetNodename() string {
	if x != nil {
		return x.Nodename
	}
	return ""
}

func (x *KubernetesStatusSpec_NodeStaticPods) GetStaticPods() []*KubernetesStatusSpec_StaticPodStatus {
	if x != nil {
		return x.StaticPods
	}
	return nil
}

// MachineProvisionSpec describes the rules for creating and scaling the machine request set.
type MachineClassSpec_Provision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProviderId    string                 `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	KernelArgs    []string               `protobuf:"bytes,2,rep,name=kernel_args,json=kernelArgs,proto3" json:"kernel_args,omitempty"`
	MetaValues    []*MetaValue           `protobuf:"bytes,3,rep,name=meta_values,json=metaValues,proto3" json:"meta_values,omitempty"`
	ProviderData  string                 `protobuf:"bytes,4,opt,name=provider_data,json=providerData,proto3" json:"provider_data,omitempty"`
	GrpcTunnel    GrpcTunnelMode         `protobuf:"varint,5,opt,name=grpc_tunnel,json=grpcTunnel,proto3,enum=specs.GrpcTunnelMode" json:"grpc_tunnel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineClassSpec_Provision) Reset() {
	*x = MachineClassSpec_Provision{}
	mi := &file_omni_specs_omni_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineClassSpec_Provision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineClassSpec_Provision) ProtoMessage() {}

func (x *MachineClassSpec_Provision) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineClassSpec_Provision.ProtoReflect.Descriptor instead.
func (*MachineClassSpec_Provision) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{58, 0}
}

func (x *MachineClassSpec_Provision) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *MachineClassSpec_Provision) GetKernelArgs() []string {
	if x != nil {
		return x.KernelArgs
	}
	return nil
}

func (x *MachineClassSpec_Provision) GetMetaValues() []*MetaValue {
	if x != nil {
		return x.MetaValues
	}
	return nil
}

func (x *MachineClassSpec_Provision) GetProviderData() string {
	if x != nil {
		return x.ProviderData
	}
	return ""
}

func (x *MachineClassSpec_Provision) GetGrpcTunnel() GrpcTunnelMode {
	if x != nil {
		return x.GrpcTunnel
	}
	return GrpcTunnelMode_UNSET
}

type KubernetesUsageSpec_Quantity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      float64                `protobuf:"fixed64,1,opt,name=requests,proto3" json:"requests,omitempty"`
	Limits        float64                `protobuf:"fixed64,2,opt,name=limits,proto3" json:"limits,omitempty"`
	Capacity      float64                `protobuf:"fixed64,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesUsageSpec_Quantity) Reset() {
	*x = KubernetesUsageSpec_Quantity{}
	mi := &file_omni_specs_omni_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesUsageSpec_Quantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesUsageSpec_Quantity) ProtoMessage() {}

func (x *KubernetesUsageSpec_Quantity) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesUsageSpec_Quantity.ProtoReflect.Descriptor instead.
func (*KubernetesUsageSpec_Quantity) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{63, 0}
}

func (x *KubernetesUsageSpec_Quantity) GetRequests() float64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *KubernetesUsageSpec_Quantity) GetLimits() float64 {
	if x != nil {
		return x.Limits
	}
	return 0
}

func (x *KubernetesUsageSpec_Quantity) GetCapacity() float64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type KubernetesUsageSpec_Pod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Capacity      int32                  `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesUsageSpec_Pod) Reset() {
	*x = KubernetesUsageSpec_Pod{}
	mi := &file_omni_specs_omni_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesUsageSpec_Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesUsageSpec_Pod) ProtoMessage() {}

func (x *KubernetesUsageSpec_Pod) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesUsageSpec_Pod.ProtoReflect.Descriptor instead.
func (*KubernetesUsageSpec_Pod) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{63, 1}
}

func (x *KubernetesUsageSpec_Pod) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *KubernetesUsageSpec_Pod) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type ImagePullRequestSpec_NodeImageList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          string                 `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Images        []string               `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImagePullRequestSpec_NodeImageList) Reset() {
	*x = ImagePullRequestSpec_NodeImageList{}
	mi := &file_omni_specs_omni_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePullRequestSpec_NodeImageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullRequestSpec_NodeImageList) ProtoMessage() {}

func (x *ImagePullRequestSpec_NodeImageList) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullRequestSpec_NodeImageList.ProtoReflect.Descriptor instead.
func (*ImagePullRequestSpec_NodeImageList) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{64, 0}
}

func (x *ImagePullRequestSpec_NodeImageList) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *ImagePullRequestSpec_NodeImageList) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

// Info is a merged representation of the extensions manifest and image factory versions response.
type TalosExtensionsSpec_Info struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Author        string                 `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Ref           string                 `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	Digest        string                 `protobuf:"bytes,6,opt,name=digest,proto3" json:"digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalosExtensionsSpec_Info) Reset() {
	*x = TalosExtensionsSpec_Info{}
	mi := &file_omni_specs_omni_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalosExtensionsSpec_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalosExtensionsSpec_Info) ProtoMessage() {}

func (x *TalosExtensionsSpec_Info) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalosExtensionsSpec_Info.ProtoReflect.Descriptor instead.
func (*TalosExtensionsSpec_Info) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{67, 0}
}

func (x *TalosExtensionsSpec_Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TalosExtensionsSpec_Info) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *TalosExtensionsSpec_Info) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *TalosExtensionsSpec_Info) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TalosExtensionsSpec_Info) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *TalosExtensionsSpec_Info) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type MachineExtensionsStatusSpec_Item struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Name          string                                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Immutable     bool                                   `protobuf:"varint,2,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Phase         MachineExtensionsStatusSpec_Item_Phase `protobuf:"varint,3,opt,name=phase,proto3,enum=specs.MachineExtensionsStatusSpec_Item_Phase" json:"phase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineExtensionsStatusSpec_Item) Reset() {
	*x = MachineExtensionsStatusSpec_Item{}
	mi := &file_omni_specs_omni_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineExtensionsStatusSpec_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineExtensionsStatusSpec_Item) ProtoMessage() {}

func (x *MachineExtensionsStatusSpec_Item) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineExtensionsStatusSpec_Item.ProtoReflect.Descriptor instead.
func (*MachineExtensionsStatusSpec_Item) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{72, 0}
}

func (x *MachineExtensionsStatusSpec_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineExtensionsStatusSpec_Item) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *MachineExtensionsStatusSpec_Item) GetPhase() MachineExtensionsStatusSpec_Item_Phase {
	if x != nil {
		return x.Phase
	}
	return MachineExtensionsStatusSpec_Item_Installed
}

type ClusterDiagnosticsSpec_Node struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NumDiagnostics uint32                 `protobuf:"varint,2,opt,name=num_diagnostics,json=numDiagnostics,proto3" json:"num_diagnostics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClusterDiagnosticsSpec_Node) Reset() {
	*x = ClusterDiagnosticsSpec_Node{}
	mi := &file_omni_specs_omni_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterDiagnosticsSpec_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterDiagnosticsSpec_Node) ProtoMessage() {}

func (x *ClusterDiagnosticsSpec_Node) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterDiagnosticsSpec_Node.ProtoReflect.Descriptor instead.
func (*ClusterDiagnosticsSpec_Node) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{79, 0}
}

func (x *ClusterDiagnosticsSpec_Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClusterDiagnosticsSpec_Node) GetNumDiagnostics() uint32 {
	if x != nil {
		return x.NumDiagnostics
	}
	return 0
}

type InfraMachineBMCConfigSpec_IPMI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfraMachineBMCConfigSpec_IPMI) Reset() {
	*x = InfraMachineBMCConfigSpec_IPMI{}
	mi := &file_omni_specs_omni_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfraMachineBMCConfigSpec_IPMI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfraMachineBMCConfigSpec_IPMI) ProtoMessage() {}

func (x *InfraMachineBMCConfigSpec_IPMI) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfraMachineBMCConfigSpec_IPMI.ProtoReflect.Descriptor instead.
func (*InfraMachineBMCConfigSpec_IPMI) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{83, 0}
}

func (x *InfraMachineBMCConfigSpec_IPMI) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *InfraMachineBMCConfigSpec_IPMI) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *InfraMachineBMCConfigSpec_IPMI) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *InfraMachineBMCConfigSpec_IPMI) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type InfraMachineBMCConfigSpec_API struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfraMachineBMCConfigSpec_API) Reset() {
	*x = InfraMachineBMCConfigSpec_API{}
	mi := &file_omni_specs_omni_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfraMachineBMCConfigSpec_API) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfraMachineBMCConfigSpec_API) ProtoMessage() {}

func (x *InfraMachineBMCConfigSpec_API) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfraMachineBMCConfigSpec_API.ProtoReflect.Descriptor instead.
func (*InfraMachineBMCConfigSpec_API) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{83, 1}
}

func (x *InfraMachineBMCConfigSpec_API) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type InfraProviderCombinedStatusSpec_Health struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connected     bool                   `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Initialized   bool                   `protobuf:"varint,3,opt,name=initialized,proto3" json:"initialized,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfraProviderCombinedStatusSpec_Health) Reset() {
	*x = InfraProviderCombinedStatusSpec_Health{}
	mi := &file_omni_specs_omni_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfraProviderCombinedStatusSpec_Health) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfraProviderCombinedStatusSpec_Health) ProtoMessage() {}

func (x *InfraProviderCombinedStatusSpec_Health) ProtoReflect() protoreflect.Message {
	mi := &file_omni_specs_omni_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfraProviderCombinedStatusSpec_Health.ProtoReflect.Descriptor instead.
func (*InfraProviderCombinedStatusSpec_Health) Descriptor() ([]byte, []int) {
	return file_omni_specs_omni_proto_rawDescGZIP(), []int{87, 0}
}

func (x *InfraProviderCombinedStatusSpec_Health) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *InfraProviderCombinedStatusSpec_Health) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *InfraProviderCombinedStatusSpec_Health) GetInitialized() bool {
	if x != nil {
		return x.Initialized
	}
	return false
}

var File_omni_specs_omni_proto protoreflect.FileDescriptor

const file_omni_specs_omni_proto_rawDesc = "" +
	"\n" +
	"\x15omni/specs/omni.proto\x12\x05specs\x1a\x1btalos/machine/machine.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\x8e\x01\n" +
	"\vMachineSpec\x12-\n" +
	"\x12management_address\x18\x01 \x01(\tR\x11managementAddress\x12\x1c\n" +
	"\tconnected\x18\x02 \x01(\bR\tconnected\x12&\n" +
	"\x0fuse_grpc_tunnel\x18\x05 \x01(\bR\ruseGrpcTunnelJ\x04\b\x03\x10\x04J\x04\b\x04\x10\x05\"X\n" +
	"\rSecurityState\x12\x1f\n" +
	"\vsecure_boot\x18\x01 \x01(\bR\n" +
	"secureBoot\x12&\n" +
	"\x0fbooted_with_uki\x18\x02 \x01(\bR\rbootedWithUki\"3\n" +
	"\aOverlay\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\"3\n" +
	"\tMetaValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\x9e\x18\n" +
	"\x11MachineStatusSpec\x12#\n" +
	"\rtalos_version\x18\x01 \x01(\tR\ftalosVersion\x12C\n" +
	"\bhardware\x18\x02 \x01(\v2'.specs.MachineStatusSpec.HardwareStatusR\bhardware\x12@\n" +
	"\anetwork\x18\x03 \x01(\v2&.specs.MachineStatusSpec.NetworkStatusR\anetwork\x12\x1d\n" +
	"\n" +
	"last_error\x18\x04 \x01(\tR\tlastError\x12-\n" +
	"\x12management_address\x18\x05 \x01(\tR\x11managementAddress\x12\x1c\n" +
	"\tconnected\x18\x06 \x01(\bR\tconnected\x12 \n" +
	"\vmaintenance\x18\a \x01(\bR\vmaintenance\x12\x18\n" +
	"\acluster\x18\t \x01(\tR\acluster\x121\n" +
	"\x04role\x18\n" +
	" \x01(\x0e2\x1d.specs.MachineStatusSpec.RoleR\x04role\x12V\n" +
	"\x11platform_metadata\x18\v \x01(\v2).specs.MachineStatusSpec.PlatformMetadataR\x10platformMetadata\x12L\n" +
	"\fimage_labels\x18\r \x03(\v2).specs.MachineStatusSpec.ImageLabelsEntryR\vimageLabels\x12@\n" +
	"\tschematic\x18\x0e \x01(\v2\".specs.MachineStatusSpec.SchematicR\tschematic\x122\n" +
	"\x15initial_talos_version\x18\x10 \x01(\tR\x13initialTalosVersion\x12E\n" +
	"\vdiagnostics\x18\x13 \x03(\v2#.specs.MachineStatusSpec.DiagnosticR\vdiagnostics\x12D\n" +
	"\vpower_state\x18\x14 \x01(\x0e2#.specs.MachineStatusSpec.PowerStateR\n" +
	"powerState\x12;\n" +
	"\x0esecurity_state\x18\x15 \x01(\v2\x14.specs.SecurityStateR\rsecurityState\x1a\xe3\x06\n" +
	"\x0eHardwareStatus\x12Q\n" +
	"\n" +
	"processors\x18\x01 \x03(\v21.specs.MachineStatusSpec.HardwareStatus.ProcessorR\n" +
	"processors\x12[\n" +
	"\x0ememory_modules\x18\x02 \x03(\v24.specs.MachineStatusSpec.HardwareStatus.MemoryModuleR\rmemoryModules\x12W\n" +
	"\fblockdevices\x18\x03 \x03(\v23.specs.MachineStatusSpec.HardwareStatus.BlockDeviceR\fblockdevices\x12\x12\n" +
	"\x04arch\x18\x04 \x01(\tR\x04arch\x1a\xb1\x01\n" +
	"\tProcessor\x12\x1d\n" +
	"\n" +
	"core_count\x18\x01 \x01(\rR\tcoreCount\x12!\n" +
	"\fthread_count\x18\x02 \x01(\rR\vthreadCount\x12\x1c\n" +
	"\tfrequency\x18\x03 \x01(\rR\tfrequency\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\"\n" +
	"\fmanufacturer\x18\x05 \x01(\tR\fmanufacturer\x1aI\n" +
	"\fMemoryModule\x12\x17\n" +
	"\asize_mb\x18\x01 \x01(\rR\x06sizeMb\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x1a\xb4\x02\n" +
	"\vBlockDevice\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x04R\x04size\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x1d\n" +
	"\n" +
	"linux_name\x18\x03 \x01(\tR\tlinuxName\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x16\n" +
	"\x06serial\x18\x05 \x01(\tR\x06serial\x12\x12\n" +
	"\x04uuid\x18\a \x01(\tR\x04uuid\x12\x12\n" +
	"\x04wwid\x18\b \x01(\tR\x04wwid\x12\x12\n" +
	"\x04type\x18\t \x01(\tR\x04type\x12\x19\n" +
	"\bbus_path\x18\n" +
	" \x01(\tR\abusPath\x12\x1f\n" +
	"\vsystem_disk\x18\v \x01(\bR\n" +
	"systemDisk\x12\x1a\n" +
	"\breadonly\x18\f \x01(\bR\breadonly\x12\x1c\n" +
	"\ttransport\x18\r \x01(\tR\ttransport\x1a\xad\x03\n" +
	"\rNetworkStatus\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1e\n" +
	"\n" +
	"domainname\x18\x02 \x01(\tR\n" +
	"domainname\x12\x1c\n" +
	"\taddresses\x18\x03 \x03(\tR\taddresses\x12)\n" +
	"\x10default_gateways\x18\x04 \x03(\tR\x0fdefaultGateways\x12]\n" +
	"\rnetwork_links\x18\x05 \x03(\v28.specs.MachineStatusSpec.NetworkStatus.NetworkLinkStatusR\fnetworkLinks\x1a\xb7\x01\n" +
	"\x11NetworkLinkStatus\x12\x1d\n" +
	"\n" +
	"linux_name\x18\x01 \x01(\tR\tlinuxName\x12)\n" +
	"\x10hardware_address\x18\x02 \x01(\tR\x0fhardwareAddress\x12\x1d\n" +
	"\n" +
	"speed_mbps\x18\x03 \x01(\rR\tspeedMbps\x12\x17\n" +
	"\alink_up\x18\x04 \x01(\bR\x06linkUp\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x1a\xf1\x01\n" +
	"\x10PlatformMetadata\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x16\n" +
	"\x06region\x18\x03 \x01(\tR\x06region\x12\x12\n" +
	"\x04zone\x18\x04 \x01(\tR\x04zone\x12#\n" +
	"\rinstance_type\x18\x05 \x01(\tR\finstanceType\x12\x1f\n" +
	"\vinstance_id\x18\x06 \x01(\tR\n" +
	"instanceId\x12\x1f\n" +
	"\vprovider_id\x18\a \x01(\tR\n" +
	"providerId\x12\x12\n" +
	"\x04spot\x18\b \x01(\bR\x04spot\x1a\xc3\x02\n" +
	"\tSchematic\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\ainvalid\x18\x02 \x01(\bR\ainvalid\x12\x1e\n" +
	"\n" +
	"extensions\x18\x03 \x03(\tR\n" +
	"extensions\x12+\n" +
	"\x11initial_schematic\x18\x04 \x01(\tR\x10initialSchematic\x12(\n" +
	"\aoverlay\x18\x06 \x01(\v2\x0e.specs.OverlayR\aoverlay\x12\x1f\n" +
	"\vkernel_args\x18\a \x03(\tR\n" +
	"kernelArgs\x121\n" +
	"\vmeta_values\x18\b \x03(\v2\x10.specs.MetaValueR\n" +
	"metaValues\x12\x17\n" +
	"\afull_id\x18\t \x01(\tR\x06fullId\x12\"\n" +
	"\rin_agent_mode\x18\n" +
	" \x01(\bR\vinAgentModeJ\x04\b\x05\x10\x06\x1aP\n" +
	"\n" +
	"Diagnostic\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x03(\tR\adetails\x1a>\n" +
	"\x10ImageLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"/\n" +
	"\x04Role\x12\b\n" +
	"\x04NONE\x10\x00\x12\x11\n" +
	"\rCONTROL_PLANE\x10\x01\x12\n" +
	"\n" +
	"\x06WORKER\x10\x02\"k\n" +
	"\n" +
	"PowerState\x12\x17\n" +
	"\x13POWER_STATE_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17POWER_STATE_UNSUPPORTED\x10\x01\x12\x12\n" +
	"\x0ePOWER_STATE_ON\x10\x02\x12\x13\n" +
	"\x0fPOWER_STATE_OFF\x10\x03J\x04\b\b\x10\tJ\x04\b\f\x10\rJ\x04\b\x0f\x10\x10J\x04\b\x11\x10\x12J\x04\b\x12\x10\x13\"E\n" +
	"\x0fTalosConfigSpec\x12\x0e\n" +
	"\x02ca\x18\x01 \x01(\tR\x02ca\x12\x10\n" +
	"\x03crt\x18\x02 \x01(\tR\x03crt\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\"\xbc\x03\n" +
	"\vClusterSpec\x12'\n" +
	"\rinstall_image\x18\x01 \x01(\tB\x02\x18\x01R\finstallImage\x12-\n" +
	"\x12kubernetes_version\x18\x02 \x01(\tR\x11kubernetesVersion\x12#\n" +
	"\rtalos_version\x18\x03 \x01(\tR\ftalosVersion\x127\n" +
	"\bfeatures\x18\x04 \x01(\v2\x1b.specs.ClusterSpec.FeaturesR\bfeatures\x12H\n" +
	"\x14backup_configuration\x18\x05 \x01(\v2\x15.specs.EtcdBackupConfR\x13backupConfiguration\x1a\xac\x01\n" +
	"\bFeatures\x122\n" +
	"\x15enable_workload_proxy\x18\x01 \x01(\bR\x13enableWorkloadProxy\x12'\n" +
	"\x0fdisk_encryption\x18\x02 \x01(\bR\x0ediskEncryption\x12C\n" +
	"\x1euse_embedded_discovery_service\x18\x03 \x01(\bR\x1buseEmbeddedDiscoveryService\"\x12\n" +
	"\x10ClusterTaintSpec\"a\n" +
	"\x0eEtcdBackupConf\x125\n" +
	"\binterval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\binterval\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\"A\n" +
	"\x18EtcdBackupEncryptionSpec\x12%\n" +
	"\x0eencryption_key\x18\x01 \x01(\fR\rencryptionKey\",\n" +
	"\x10EtcdBackupHeader\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\"{\n" +
	"\x0eEtcdBackupSpec\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1a\n" +
	"\bsnapshot\x18\x02 \x01(\tR\bsnapshot\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x04R\x04size\"\x8c\x02\n" +
	"\x0eBackupDataSpec\x125\n" +
	"\binterval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\binterval\x12!\n" +
	"\fcluster_uuid\x18\x02 \x01(\tR\vclusterUuid\x12%\n" +
	"\x0eencryption_key\x18\x03 \x01(\fR\rencryptionKey\x129\n" +
	"\x19aes_cbc_encryption_secret\x18\x04 \x01(\tR\x16aesCbcEncryptionSecret\x12>\n" +
	"\x1bsecretbox_encryption_secret\x18\x05 \x01(\tR\x19secretboxEncryptionSecret\"\xd7\x01\n" +
	"\x14EtcdBackupS3ConfSpec\x12\x16\n" +
	"\x06bucket\x18\x01 \x01(\tR\x06bucket\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\x12\"\n" +
	"\raccess_key_id\x18\x04 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11secret_access_key\x18\x05 \x01(\tR\x0fsecretAccessKey\x12#\n" +
	"\rsession_token\x18\x06 \x01(\tR\fsessionToken\"\xb1\x02\n" +
	"\x14EtcdBackupStatusSpec\x12:\n" +
	"\x06status\x18\x01 \x01(\x0e2\".specs.EtcdBackupStatusSpec.StatusR\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12D\n" +
	"\x10last_backup_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastBackupTime\x12J\n" +
	"\x13last_backup_attempt\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x11lastBackupAttempt\"5\n" +
	"\x06Status\x12\v\n" +
	"\aUnknown\x10\x00\x12\x06\n" +
	"\x02Ok\x10\x01\x12\t\n" +
	"\x05Error\x10\x02\x12\v\n" +
	"\aRunning\x10\x03\"O\n" +
	"\x14EtcdManualBackupSpec\x127\n" +
	"\tbackup_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bbackupAt\"{\n" +
	"\x19EtcdBackupStoreStatusSpec\x12-\n" +
	"\x12configuration_name\x18\x01 \x01(\tR\x11configurationName\x12/\n" +
	"\x13configuration_error\x18\x02 \x01(\tR\x12configurationError\"\xc8\x01\n" +
	"\x1bEtcdBackupOverallStatusSpec\x12-\n" +
	"\x12configuration_name\x18\x01 \x01(\tR\x11configurationName\x12/\n" +
	"\x13configuration_error\x18\x02 \x01(\tR\x12configurationError\x12I\n" +
	"\x12last_backup_status\x18\x03 \x01(\v2\x1b.specs.EtcdBackupStatusSpecR\x10lastBackupStatus\"I\n" +
	"\x12ClusterMachineSpec\x12-\n" +
	"\x12kubernetes_version\x18\x02 \x01(\tR\x11kubernetesVersionJ\x04\b\x01\x10\x02\"j\n" +
	"\x1fClusterMachineConfigPatchesSpec\x12\x18\n" +
	"\apatches\x18\x01 \x03(\tR\apatches\x12-\n" +
	"\x12compressed_patches\x18\x02 \x03(\fR\x11compressedPatches\"h\n" +
	"\x1eClusterMachineTalosVersionSpec\x12#\n" +
	"\rtalos_version\x18\x01 \x01(\tR\ftalosVersion\x12!\n" +
	"\fschematic_id\x18\x02 \x01(\tR\vschematicId\"\xba\x01\n" +
	"\x18ClusterMachineConfigSpec\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x126\n" +
	"\x17cluster_machine_version\x18\x02 \x01(\tR\x15clusterMachineVersion\x12)\n" +
	"\x10generation_error\x18\x03 \x01(\tR\x0fgenerationError\x12'\n" +
	"\x0fcompressed_data\x18\x04 \x01(\fR\x0ecompressedData\"_\n" +
	" RedactedClusterMachineConfigSpec\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\x12'\n" +
	"\x0fcompressed_data\x18\x02 \x01(\fR\x0ecompressedData\"\xdc\x01\n" +
	"\x1aClusterMachineIdentitySpec\x12#\n" +
	"\rnode_identity\x18\x01 \x01(\tR\fnodeIdentity\x12$\n" +
	"\x0eetcd_member_id\x18\x02 \x01(\x04R\fetcdMemberId\x12\x1a\n" +
	"\bnodename\x18\x03 \x01(\tR\bnodename\x12\x19\n" +
	"\bnode_ips\x18\b \x03(\tR\anodeIps\x12<\n" +
	"\x1adiscovery_service_endpoint\x18\t \x01(\tR\x18discoveryServiceEndpoint\"\xa9\x01\n" +
	"\x1aClusterMachineTemplateSpec\x12#\n" +
	"\rinstall_image\x18\x01 \x01(\tR\finstallImage\x12-\n" +
	"\x12kubernetes_version\x18\x02 \x01(\tR\x11kubernetesVersion\x12!\n" +
	"\finstall_disk\x18\x03 \x01(\tR\vinstallDisk\x12\x14\n" +
	"\x05patch\x18\x05 \x01(\tR\x05patch\"\xfb\x05\n" +
	"\x18ClusterMachineStatusSpec\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready\x12;\n" +
	"\x05stage\x18\x02 \x01(\x0e2%.specs.ClusterMachineStatusSpec.StageR\x05stage\x12%\n" +
	"\x0eapid_available\x18\x03 \x01(\bR\rapidAvailable\x12)\n" +
	"\x11config_up_to_date\x18\x04 \x01(\bR\x0econfigUpToDate\x12*\n" +
	"\x11last_config_error\x18\x05 \x01(\tR\x0flastConfigError\x12-\n" +
	"\x12management_address\x18\x06 \x01(\tR\x11managementAddress\x12H\n" +
	"\x13config_apply_status\x18\a \x01(\x0e2\x18.specs.ConfigApplyStatusR\x11configApplyStatus\x12\x1d\n" +
	"\n" +
	"is_removed\x18\b \x01(\bR\tisRemoved\x12Z\n" +
	"\x10provision_status\x18\t \x01(\v2/.specs.ClusterMachineStatusSpec.ProvisionStatusR\x0fprovisionStatus\x1aQ\n" +
	"\x0fProvisionStatus\x12\x1f\n" +
	"\vprovider_id\x18\x01 \x01(\tR\n" +
	"providerId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\"\xc6\x01\n" +
	"\x05Stage\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aBOOTING\x10\x01\x12\x0e\n" +
	"\n" +
	"INSTALLING\x10\x02\x12\r\n" +
	"\tUPGRADING\x10\x06\x12\x0f\n" +
	"\vCONFIGURING\x10\x03\x12\v\n" +
	"\aRUNNING\x10\x04\x12\r\n" +
	"\tREBOOTING\x10\a\x12\x11\n" +
	"\rSHUTTING_DOWN\x10\b\x12\x12\n" +
	"\x0eBEFORE_DESTROY\x10\t\x12\x0e\n" +
	"\n" +
	"DESTROYING\x10\x05\x12\x0f\n" +
	"\vPOWERING_ON\x10\n" +
	"\x12\x0f\n" +
	"\vPOWERED_OFF\x10\v\"v\n" +
	"\bMachines\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x12\x18\n" +
	"\ahealthy\x18\x02 \x01(\rR\ahealthy\x12\x1c\n" +
	"\tconnected\x18\x03 \x01(\rR\tconnected\x12\x1c\n" +
	"\trequested\x18\x04 \x01(\rR\trequested\"\xe3\x03\n" +
	"\x11ClusterStatusSpec\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12+\n" +
	"\bmachines\x18\x02 \x01(\v2\x0f.specs.MachinesR\bmachines\x124\n" +
	"\x05phase\x18\x03 \x01(\x0e2\x1e.specs.ClusterStatusSpec.PhaseR\x05phase\x12\x14\n" +
	"\x05ready\x18\x04 \x01(\bR\x05ready\x12.\n" +
	"\x12kubernetesAPIReady\x18\x05 \x01(\bR\x12kubernetesAPIReady\x12,\n" +
	"\x11controlplaneReady\x18\x06 \x01(\bR\x11controlplaneReady\x12?\n" +
	"\x1chas_connected_control_planes\x18\a \x01(\bR\x19hasConnectedControlPlanes\x12C\n" +
	"\x1euse_embedded_discovery_service\x18\b \x01(\bR\x1buseEmbeddedDiscoveryService\"S\n" +
	"\x05Phase\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"SCALING_UP\x10\x01\x12\x10\n" +
	"\fSCALING_DOWN\x10\x02\x12\v\n" +
	"\aRUNNING\x10\x03\x12\x0e\n" +
	"\n" +
	"DESTROYING\x10\x04\"!\n" +
	"\vClusterUUID\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"4\n" +
	"\x18ClusterConfigVersionSpec\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\xe0\x02\n" +
	"\x1eClusterMachineConfigStatusSpec\x12C\n" +
	"\x1ecluster_machine_config_version\x18\x03 \x01(\tR\x1bclusterMachineConfigVersion\x126\n" +
	"\x17cluster_machine_version\x18\x04 \x01(\tR\x15clusterMachineVersion\x12A\n" +
	"\x1dcluster_machine_config_sha256\x18\x05 \x01(\tR\x1aclusterMachineConfigSha256\x12*\n" +
	"\x11last_config_error\x18\x06 \x01(\tR\x0flastConfigError\x12#\n" +
	"\rtalos_version\x18\a \x01(\tR\ftalosVersion\x12!\n" +
	"\fschematic_id\x18\b \x01(\tR\vschematicIdJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03\"@\n" +
	"\x1aClusterBootstrapStatusSpec\x12\"\n" +
	"\fbootstrapped\x18\x01 \x01(\bR\fbootstrapped\"D\n" +
	"\x12ClusterSecretsSpec\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bimported\x18\x02 \x01(\bR\bimported\"0\n" +
	"\x1aImportedClusterSecretsSpec\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\"\x8a\x01\n" +
	"\x16LoadBalancerConfigSpec\x12\x1b\n" +
	"\tbind_port\x18\x02 \x01(\tR\bbindPort\x12/\n" +
	"\x13siderolink_endpoint\x18\x04 \x01(\tR\x12siderolinkEndpoint\x12\x1c\n" +
	"\tendpoints\x18\x03 \x03(\tR\tendpointsJ\x04\b\x01\x10\x02\"X\n" +
	"\x16LoadBalancerStatusSpec\x12\x18\n" +
	"\ahealthy\x18\x03 \x01(\bR\ahealthy\x12\x18\n" +
	"\astopped\x18\x04 \x01(\bR\astoppedJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03\"1\n" +
	"\x15KubernetesVersionSpec\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\x92\x01\n" +
	"\x10TalosVersionSpec\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12D\n" +
	"\x1ecompatible_kubernetes_versions\x18\x02 \x03(\tR\x1ccompatibleKubernetesVersions\x12\x1e\n" +
	"\n" +
	"deprecated\x18\x03 \x01(\bR\n" +
	"deprecated\"\xe7\x02\n" +
	"\x15InstallationMediaSpec\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\"\n" +
	"\farchitecture\x18\x02 \x01(\tR\farchitecture\x12\x18\n" +
	"\aprofile\x18\x03 \x01(\tR\aprofile\x12 \n" +
	"\vcontentType\x18\x06 \x01(\tR\vcontentType\x12&\n" +
	"\x0fsrc_file_prefix\x18\a \x01(\tR\rsrcFilePrefix\x12(\n" +
	"\x10dest_file_prefix\x18\b \x01(\tR\x0edestFilePrefix\x12\x1c\n" +
	"\textension\x18\t \x01(\tR\textension\x12$\n" +
	"\x0eno_secure_boot\x18\v \x01(\bR\fnoSecureBoot\x12\x18\n" +
	"\aoverlay\x18\f \x01(\tR\aoverlay\x12*\n" +
	"\x11min_talos_version\x18\r \x01(\tR\x0fminTalosVersion\"N\n" +
	"\x0fConfigPatchSpec\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\x12'\n" +
	"\x0fcompressed_data\x18\x02 \x01(\fR\x0ecompressedData\"\x9d\n" +
	"\n" +
	"\x0eMachineSetSpec\x12M\n" +
	"\x0fupdate_strategy\x18\x01 \x01(\x0e2$.specs.MachineSetSpec.UpdateStrategyR\x0eupdateStrategy\x12P\n" +
	"\rmachine_class\x18\x02 \x01(\v2'.specs.MachineSetSpec.MachineAllocationB\x02\x18\x01R\fmachineClass\x12J\n" +
	"\x0ebootstrap_spec\x18\x03 \x01(\v2#.specs.MachineSetSpec.BootstrapSpecR\rbootstrapSpec\x12M\n" +
	"\x0fdelete_strategy\x18\x04 \x01(\x0e2$.specs.MachineSetSpec.UpdateStrategyR\x0edeleteStrategy\x12`\n" +
	"\x16update_strategy_config\x18\x05 \x01(\v2*.specs.MachineSetSpec.UpdateStrategyConfigR\x14updateStrategyConfig\x12`\n" +
	"\x16delete_strategy_config\x18\x06 \x01(\v2*.specs.MachineSetSpec.UpdateStrategyConfigR\x14deleteStrategyConfig\x12V\n" +
	"\x12machine_allocation\x18\a \x01(\v2'.specs.MachineSetSpec.MachineAllocationR\x11machineAllocation\x1a\xbc\x01\n" +
	"\fMachineClass\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rmachine_count\x18\x02 \x01(\rR\fmachineCount\x12P\n" +
	"\x0fallocation_type\x18\x03 \x01(\x0e2'.specs.MachineSetSpec.MachineClass.TypeR\x0eallocationType\"!\n" +
	"\x04Type\x12\n" +
	"\n" +
	"\x06Static\x10\x00\x12\r\n" +
	"\tUnlimited\x10\x01\x1a\xcc\x01\n" +
	"\x11MachineAllocation\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rmachine_count\x18\x02 \x01(\rR\fmachineCount\x12U\n" +
	"\x0fallocation_type\x18\x03 \x01(\x0e2,.specs.MachineSetSpec.MachineAllocation.TypeR\x0eallocationType\"!\n" +
	"\x04Type\x12\n" +
	"\n" +
	"\x06Static\x10\x00\x12\r\n" +
	"\tUnlimited\x10\x01J\x04\b\x04\x10\x05\x1aN\n" +
	"\rBootstrapSpec\x12!\n" +
	"\fcluster_uuid\x18\x01 \x01(\tR\vclusterUuid\x12\x1a\n" +
	"\bsnapshot\x18\x02 \x01(\tR\bsnapshot\x1aF\n" +
	"\x1bRollingUpdateStrategyConfig\x12'\n" +
	"\x0fmax_parallelism\x18\x01 \x01(\rR\x0emaxParallelism\x1ac\n" +
	"\x14UpdateStrategyConfig\x12K\n" +
	"\arolling\x18\x01 \x01(\v21.specs.MachineSetSpec.RollingUpdateStrategyConfigR\arolling\"(\n" +
	"\x0eUpdateStrategy\x12\t\n" +
	"\x05Unset\x10\x00\x12\v\n" +
	"\aRolling\x10\x01\"\x8e\x03\n" +
	"\x16TalosUpgradeStatusSpec\x129\n" +
	"\x05phase\x18\x01 \x01(\x0e2#.specs.TalosUpgradeStatusSpec.PhaseR\x05phase\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x12\n" +
	"\x04step\x18\x03 \x01(\tR\x04step\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x120\n" +
	"\x14last_upgrade_version\x18\x05 \x01(\tR\x12lastUpgradeVersion\x126\n" +
	"\x17current_upgrade_version\x18\x06 \x01(\tR\x15currentUpgradeVersion\x12)\n" +
	"\x10upgrade_versions\x18\a \x03(\tR\x0fupgradeVersions\"b\n" +
	"\x05Phase\x12\v\n" +
	"\aUnknown\x10\x00\x12\r\n" +
	"\tUpgrading\x10\x01\x12\b\n" +
	"\x04Done\x10\x02\x12\n" +
	"\n" +
	"\x06Failed\x10\x03\x12\r\n" +
	"\tReverting\x10\x04\x12\x18\n" +
	"\x14InstallingExtensions\x10\x05\"\xbd\x02\n" +
	"\x14MachineSetStatusSpec\x12,\n" +
	"\x05phase\x18\x01 \x01(\x0e2\x16.specs.MachineSetPhaseR\x05phase\x12\x14\n" +
	"\x05ready\x18\x02 \x01(\bR\x05ready\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12+\n" +
	"\bmachines\x18\x04 \x01(\v2\x0f.specs.MachinesR\bmachines\x12\x1f\n" +
	"\vconfig_hash\x18\x05 \x01(\tR\n" +
	"configHash\x12V\n" +
	"\x12machine_allocation\x18\x06 \x01(\v2'.specs.MachineSetSpec.MachineAllocationR\x11machineAllocation\x12%\n" +
	"\x0elocked_updates\x18\a \x01(\rR\rlockedUpdates\"\x14\n" +
	"\x12MachineSetNodeSpec\"\x13\n" +
	"\x11MachineLabelsSpec\"\x8b\x02\n" +
	"\x19MachineStatusSnapshotSpec\x12B\n" +
	"\x0emachine_status\x18\x01 \x01(\v2\x1b.machine.MachineStatusEventR\rmachineStatus\x12L\n" +
	"\vpower_stage\x18\x02 \x01(\x0e2+.specs.MachineStatusSnapshotSpec.PowerStageR\n" +
	"powerStage\"\\\n" +
	"\n" +
	"PowerStage\x12\x14\n" +
	"\x10POWER_STAGE_NONE\x10\x00\x12\x1b\n" +
	"\x17POWER_STAGE_POWERED_OFF\x10\x01\x12\x1b\n" +
	"\x17POWER_STAGE_POWERING_ON\x10\x02\"\xa5\x03\n" +
	"\x16ControlPlaneStatusSpec\x12G\n" +
	"\n" +
	"conditions\x18\x01 \x03(\v2'.specs.ControlPlaneStatusSpec.ConditionR\n" +
	"conditions\x1a\xc1\x02\n" +
	"\tCondition\x12(\n" +
	"\x04type\x18\x01 \x01(\x0e2\x14.specs.ConditionTypeR\x04type\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12F\n" +
	"\x06status\x18\x03 \x01(\x0e2..specs.ControlPlaneStatusSpec.Condition.StatusR\x06status\x12L\n" +
	"\bseverity\x18\x04 \x01(\x0e20.specs.ControlPlaneStatusSpec.Condition.SeverityR\bseverity\".\n" +
	"\x06Status\x12\v\n" +
	"\aUnknown\x10\x00\x12\t\n" +
	"\x05Ready\x10\x01\x12\f\n" +
	"\bNotReady\x10\x02\",\n" +
	"\bSeverity\x12\b\n" +
	"\x04Info\x10\x00\x12\v\n" +
	"\aWarning\x10\x01\x12\t\n" +
	"\x05Error\x10\x02\"H\n" +
	"\x13ClusterEndpointSpec\x121\n" +
	"\x14management_addresses\x18\x01 \x03(\tR\x13managementAddresses\"\xdb\x03\n" +
	"\x14KubernetesStatusSpec\x12<\n" +
	"\x05nodes\x18\x01 \x03(\v2&.specs.KubernetesStatusSpec.NodeStatusR\x05nodes\x12K\n" +
	"\vstatic_pods\x18\x02 \x03(\v2*.specs.KubernetesStatusSpec.NodeStaticPodsR\n" +
	"staticPods\x1ag\n" +
	"\n" +
	"NodeStatus\x12\x1a\n" +
	"\bnodename\x18\x01 \x01(\tR\bnodename\x12'\n" +
	"\x0fkubelet_version\x18\x02 \x01(\tR\x0ekubeletVersion\x12\x14\n" +
	"\x05ready\x18\x03 \x01(\bR\x05ready\x1aS\n" +
	"\x0fStaticPodStatus\x12\x10\n" +
	"\x03app\x18\x01 \x01(\tR\x03app\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x14\n" +
	"\x05ready\x18\x03 \x01(\bR\x05ready\x1az\n" +
	"\x0eNodeStaticPods\x12\x1a\n" +
	"\bnodename\x18\x01 \x01(\tR\bnodename\x12L\n" +
	"\vstatic_pods\x18\x02 \x03(\v2+.specs.KubernetesStatusSpec.StaticPodStatusR\n" +
	"staticPods\"\xfe\x02\n" +
	"\x1bKubernetesUpgradeStatusSpec\x12>\n" +
	"\x05phase\x18\x01 \x01(\x0e2(.specs.KubernetesUpgradeStatusSpec.PhaseR\x05phase\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x12\n" +
	"\x04step\x18\x03 \x01(\tR\x04step\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x120\n" +
	"\x14last_upgrade_version\x18\x05 \x01(\tR\x12lastUpgradeVersion\x126\n" +
	"\x17current_upgrade_version\x18\a \x01(\tR\x15currentUpgradeVersion\x12)\n" +
	"\x10upgrade_versions\x18\x06 \x03(\tR\x0fupgradeVersions\"H\n" +
	"\x05Phase\x12\v\n" +
	"\aUnknown\x10\x00\x12\r\n" +
	"\tUpgrading\x10\x01\x12\b\n" +
	"\x04Done\x10\x02\x12\n" +
	"\n" +
	"\x06Failed\x10\x03\x12\r\n" +
	"\tReverting\x10\x04\"o\n" +
	"#KubernetesUpgradeManifestStatusSpec\x12\x1e\n" +
	"\vout_of_sync\x18\x01 \x01(\x05R\toutOfSync\x12(\n" +
	"\x10last_fatal_error\x18\x02 \x01(\tR\x0elastFatalError\")\n" +
	"\x11DestroyStatusSpec\x12\x14\n" +
	"\x05phase\x18\x01 \x01(\tR\x05phase\"\x83\x02\n" +
	"\x0fOngoingTaskSpec\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12D\n" +
	"\rtalos_upgrade\x18\x02 \x01(\v2\x1d.specs.TalosUpgradeStatusSpecH\x00R\ftalosUpgrade\x12S\n" +
	"\x12kubernetes_upgrade\x18\x03 \x01(\v2\".specs.KubernetesUpgradeStatusSpecH\x00R\x11kubernetesUpgrade\x124\n" +
	"\adestroy\x18\x04 \x01(\v2\x18.specs.DestroyStatusSpecH\x00R\adestroyB\t\n" +
	"\adetails\"5\n" +
	"\x1fClusterMachineEncryptionKeySpec\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\xb5\x01\n" +
	"\x12ExposedServiceSpec\x12\x12\n" +
	"\x04port\x18\x01 \x01(\rR\x04port\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x1f\n" +
	"\vicon_base64\x18\x03 \x01(\tR\n" +
	"iconBase64\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12,\n" +
	"\x12has_explicit_alias\x18\x06 \x01(\bR\x10hasExplicitAlias\"R\n" +
	"\x1eClusterWorkloadProxyStatusSpec\x120\n" +
	"\x14num_exposed_services\x18\x01 \x01(\rR\x12numExposedServices\"\xba\x02\n" +
	"\x12FeaturesConfigSpec\x128\n" +
	"\x18enable_workload_proxying\x18\x01 \x01(\bR\x16enableWorkloadProxying\x12K\n" +
	"\x14etcd_backup_settings\x18\x02 \x01(\v2\x19.specs.EtcdBackupSettingsR\x12etcdBackupSettings\x12<\n" +
	"\x1aembedded_discovery_service\x18\x03 \x01(\bR\x18embeddedDiscoveryService\x12*\n" +
	"\x11audit_log_enabled\x18\x04 \x01(\bR\x0fauditLogEnabled\x123\n" +
	"\x16image_factory_base_url\x18\x05 \x01(\tR\x13imageFactoryBaseUrl\"\xd6\x01\n" +
	"\x12EtcdBackupSettings\x12>\n" +
	"\rtick_interval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\ftickInterval\x12<\n" +
	"\fmin_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\vminInterval\x12<\n" +
	"\fmax_interval\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\vmaxIntervalJ\x04\b\x04\x10\x05\"\xdf\x02\n" +
	"\x10MachineClassSpec\x12!\n" +
	"\fmatch_labels\x18\x01 \x03(\tR\vmatchLabels\x12H\n" +
	"\x0eauto_provision\x18\x02 \x01(\v2!.specs.MachineClassSpec.ProvisionR\rautoProvision\x1a\xdd\x01\n" +
	"\tProvision\x12\x1f\n" +
	"\vprovider_id\x18\x01 \x01(\tR\n" +
	"providerId\x12\x1f\n" +
	"\vkernel_args\x18\x02 \x03(\tR\n" +
	"kernelArgs\x121\n" +
	"\vmeta_values\x18\x03 \x03(\v2\x10.specs.MetaValueR\n" +
	"metaValues\x12#\n" +
	"\rprovider_data\x18\x04 \x01(\tR\fproviderData\x126\n" +
	"\vgrpc_tunnel\x18\x05 \x01(\x0e2\x15.specs.GrpcTunnelModeR\n" +
	"grpcTunnel\"\x97\x02\n" +
	"\fInstallImage\x12#\n" +
	"\rtalos_version\x18\x01 \x01(\tR\ftalosVersion\x12!\n" +
	"\fschematic_id\x18\x02 \x01(\tR\vschematicId\x123\n" +
	"\x15schematic_initialized\x18\x03 \x01(\bR\x14schematicInitialized\x12+\n" +
	"\x11schematic_invalid\x18\x04 \x01(\bR\x10schematicInvalid\x12\x1a\n" +
	"\bplatform\x18\x06 \x01(\tR\bplatform\x12;\n" +
	"\x0esecurity_state\x18\a \x01(\v2\x14.specs.SecurityStateR\rsecurityStateJ\x04\b\x05\x10\x06\"z\n" +
	"\x1bMachineConfigGenOptionsSpec\x12!\n" +
	"\finstall_disk\x18\x01 \x01(\tR\vinstallDisk\x128\n" +
	"\rinstall_image\x18\x02 \x01(\v2\x13.specs.InstallImageR\finstallImage\"=\n" +
	"\x13EtcdAuditResultSpec\x12&\n" +
	"\x0fetcd_member_ids\x18\x01 \x03(\x04R\retcdMemberIds\"$\n" +
	"\x0eKubeconfigSpec\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\x8b\x03\n" +
	"\x13KubernetesUsageSpec\x125\n" +
	"\x03cpu\x18\x01 \x01(\v2#.specs.KubernetesUsageSpec.QuantityR\x03cpu\x125\n" +
	"\x03mem\x18\x02 \x01(\v2#.specs.KubernetesUsageSpec.QuantityR\x03mem\x12=\n" +
	"\astorage\x18\x03 \x01(\v2#.specs.KubernetesUsageSpec.QuantityR\astorage\x122\n" +
	"\x04pods\x18\x04 \x01(\v2\x1e.specs.KubernetesUsageSpec.PodR\x04pods\x1aZ\n" +
	"\bQuantity\x12\x1a\n" +
	"\brequests\x18\x01 \x01(\x01R\brequests\x12\x16\n" +
	"\x06limits\x18\x02 \x01(\x01R\x06limits\x12\x1a\n" +
	"\bcapacity\x18\x03 \x01(\x01R\bcapacity\x1a7\n" +
	"\x03Pod\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x1a\n" +
	"\bcapacity\x18\x03 \x01(\x05R\bcapacity\"\xa6\x01\n" +
	"\x14ImagePullRequestSpec\x12Q\n" +
	"\x0fnode_image_list\x18\x01 \x03(\v2).specs.ImagePullRequestSpec.NodeImageListR\rnodeImageList\x1a;\n" +
	"\rNodeImageList\x12\x12\n" +
	"\x04node\x18\x01 \x01(\tR\x04node\x12\x16\n" +
	"\x06images\x18\x02 \x03(\tR\x06images\"\x9c\x02\n" +
	"\x13ImagePullStatusSpec\x12.\n" +
	"\x13last_processed_node\x18\x01 \x01(\tR\x11lastProcessedNode\x120\n" +
	"\x14last_processed_image\x18\x02 \x01(\tR\x12lastProcessedImage\x120\n" +
	"\x14last_processed_error\x18\x03 \x01(\tR\x12lastProcessedError\x12'\n" +
	"\x0fprocessed_count\x18\x04 \x01(\rR\x0eprocessedCount\x12\x1f\n" +
	"\vtotal_count\x18\x05 \x01(\rR\n" +
	"totalCount\x12'\n" +
	"\x0frequest_version\x18\x06 \x01(\tR\x0erequestVersion\"\x15\n" +
	"\rSchematicSpecJ\x04\b\x01\x10\x02\"\xe7\x01\n" +
	"\x13TalosExtensionsSpec\x125\n" +
	"\x05items\x18\x01 \x03(\v2\x1f.specs.TalosExtensionsSpec.InfoR\x05items\x1a\x98\x01\n" +
	"\x04Info\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06author\x18\x02 \x01(\tR\x06author\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x10\n" +
	"\x03ref\x18\x05 \x01(\tR\x03ref\x12\x16\n" +
	"\x06digest\x18\x06 \x01(\tR\x06digest\"d\n" +
	"\x1aSchematicConfigurationSpec\x12!\n" +
	"\fschematic_id\x18\x01 \x01(\tR\vschematicId\x12#\n" +
	"\rtalos_version\x18\x02 \x01(\tR\ftalosVersion\"=\n" +
	"\x1bExtensionsConfigurationSpec\x12\x1e\n" +
	"\n" +
	"extensions\x18\x01 \x03(\tR\n" +
	"extensions\"\xcc\x01\n" +
	"!ExtensionsConfigurationStatusSpec\x12D\n" +
	"\x05phase\x18\x01 \x01(\x0e2..specs.ExtensionsConfigurationStatusSpec.PhaseR\x05phase\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x1e\n" +
	"\n" +
	"extensions\x18\x03 \x03(\tR\n" +
	"extensions\"+\n" +
	"\x05Phase\x12\v\n" +
	"\aUnknown\x10\x00\x12\t\n" +
	"\x05Ready\x10\x01\x12\n" +
	"\n" +
	"\x06Failed\x10\x02\"7\n" +
	"\x15MachineExtensionsSpec\x12\x1e\n" +
	"\n" +
	"extensions\x18\x01 \x03(\tR\n" +
	"extensions\"\xc1\x02\n" +
	"\x1bMachineExtensionsStatusSpec\x12G\n" +
	"\n" +
	"extensions\x18\x01 \x03(\v2'.specs.MachineExtensionsStatusSpec.ItemR\n" +
	"extensions\x12#\n" +
	"\rtalos_version\x18\x02 \x01(\tR\ftalosVersion\x1a\xb3\x01\n" +
	"\x04Item\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\timmutable\x18\x02 \x01(\bR\timmutable\x12C\n" +
	"\x05phase\x18\x03 \x01(\x0e2-.specs.MachineExtensionsStatusSpec.Item.PhaseR\x05phase\"4\n" +
	"\x05Phase\x12\r\n" +
	"\tInstalled\x10\x00\x12\x0e\n" +
	"\n" +
	"Installing\x10\x01\x12\f\n" +
	"\bRemoving\x10\x02\"\x80\x02\n" +
	"\x18MachineStatusMetricsSpec\x12:\n" +
	"\x19registered_machines_count\x18\x01 \x01(\rR\x17registeredMachinesCount\x128\n" +
	"\x18connected_machines_count\x18\x02 \x01(\rR\x16connectedMachinesCount\x128\n" +
	"\x18allocated_machines_count\x18\x03 \x01(\rR\x16allocatedMachinesCount\x124\n" +
	"\x16pending_machines_count\x18\x04 \x01(\rR\x14pendingMachinesCount\"\xc2\x01\n" +
	"\x18ClusterStatusMetricsSpec\x12&\n" +
	"\x0fnot_ready_count\x18\x01 \x01(\rR\rnotReadyCount\x12C\n" +
	"\x06phases\x18\x02 \x03(\v2+.specs.ClusterStatusMetricsSpec.PhasesEntryR\x06phases\x1a9\n" +
	"\vPhasesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\"2\n" +
	"\x1aClusterKubernetesNodesSpec\x12\x14\n" +
	"\x05nodes\x18\x01 \x03(\tR\x05nodes\"D\n" +
	"\x1dKubernetesNodeAuditResultSpec\x12#\n" +
	"\rdeleted_nodes\x18\x01 \x03(\tR\fdeletedNodes\"\xd9\x02\n" +
	"\x15MachineRequestSetSpec\x12\x1f\n" +
	"\vprovider_id\x18\x01 \x01(\tR\n" +
	"providerId\x12#\n" +
	"\rmachine_count\x18\x02 \x01(\x05R\fmachineCount\x12#\n" +
	"\rtalos_version\x18\x03 \x01(\tR\ftalosVersion\x12\x1e\n" +
	"\n" +
	"extensions\x18\x05 \x03(\tR\n" +
	"extensions\x12\x1f\n" +
	"\vkernel_args\x18\x06 \x03(\tR\n" +
	"kernelArgs\x121\n" +
	"\vmeta_values\x18\a \x03(\v2\x10.specs.MetaValueR\n" +
	"metaValues\x12#\n" +
	"\rprovider_data\x18\b \x01(\tR\fproviderData\x126\n" +
	"\vgrpc_tunnel\x18\t \x01(\x0e2\x15.specs.GrpcTunnelModeR\n" +
	"grpcTunnelJ\x04\b\x04\x10\x05\"\x1d\n" +
	"\x1bMachineRequestSetStatusSpec\"\x93\x01\n" +
	"\x16ClusterDiagnosticsSpec\x128\n" +
	"\x05nodes\x18\x01 \x03(\v2\".specs.ClusterDiagnosticsSpec.NodeR\x05nodes\x1a?\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0fnum_diagnostics\x18\x02 \x01(\rR\x0enumDiagnostics\"L\n" +
	"\x1dMachineRequestSetPressureSpec\x12+\n" +
	"\x11required_machines\x18\x01 \x01(\rR\x10requiredMachines\"\xa7\x02\n" +
	"\x1fClusterMachineRequestStatusSpec\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12!\n" +
	"\fmachine_uuid\x18\x02 \x01(\tR\vmachineUuid\x12\x1f\n" +
	"\vprovider_id\x18\x03 \x01(\tR\n" +
	"providerId\x12B\n" +
	"\x05stage\x18\x04 \x01(\x0e2,.specs.ClusterMachineRequestStatusSpec.StageR\x05stage\"d\n" +
	"\x05Stage\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\x10\n" +
	"\fPROVISIONING\x10\x02\x12\x0f\n" +
	"\vPROVISIONED\x10\x03\x12\x12\n" +
	"\x0eDEPROVISIONING\x10\x04\x12\n" +
	"\n" +
	"\x06FAILED\x10\x05\"\xd3\x03\n" +
	"\x16InfraMachineConfigSpec\x12P\n" +
	"\vpower_state\x18\x01 \x01(\x0e2/.specs.InfraMachineConfigSpec.MachinePowerStateR\n" +
	"powerState\x12[\n" +
	"\x11acceptance_status\x18\x02 \x01(\x0e2..specs.InfraMachineConfigSpec.AcceptanceStatusR\x10acceptanceStatus\x12*\n" +
	"\x11extra_kernel_args\x18\x03 \x01(\tR\x0fextraKernelArgs\x12.\n" +
	"\x13requested_reboot_id\x18\x04 \x01(\tR\x11requestedRebootId\x12\x1a\n" +
	"\bcordoned\x18\x05 \x01(\bR\bcordoned\";\n" +
	"\x10AcceptanceStatus\x12\v\n" +
	"\aPENDING\x10\x00\x12\f\n" +
	"\bACCEPTED\x10\x01\x12\f\n" +
	"\bREJECTED\x10\x02\"U\n" +
	"\x11MachinePowerState\x12\x17\n" +
	"\x13POWER_STATE_DEFAULT\x10\x00\x12\x13\n" +
	"\x0fPOWER_STATE_OFF\x10\x01\x12\x12\n" +
	"\x0ePOWER_STATE_ON\x10\x02\"\x9d\x02\n" +
	"\x19InfraMachineBMCConfigSpec\x129\n" +
	"\x04ipmi\x18\x01 \x01(\v2%.specs.InfraMachineBMCConfigSpec.IPMIR\x04ipmi\x126\n" +
	"\x03api\x18\x02 \x01(\v2$.specs.InfraMachineBMCConfigSpec.APIR\x03api\x1al\n" +
	"\x04IPMI\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x1a\x1f\n" +
	"\x03API\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"U\n" +
	"\x1bMaintenanceConfigStatusSpec\x126\n" +
	"\x18public_key_at_last_apply\x18\x01 \x01(\tR\x14publicKeyAtLastApply\"\x1d\n" +
	"\x1bNodeForceDestroyRequestSpec\"\x7f\n" +
	" DiscoveryAffiliateDeleteTaskSpec\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12<\n" +
	"\x1adiscovery_service_endpoint\x18\x02 \x01(\tR\x18discoveryServiceEndpoint\"\x92\x02\n" +
	"\x1fInfraProviderCombinedStatusSpec\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12E\n" +
	"\x06health\x18\x04 \x01(\v2-.specs.InfraProviderCombinedStatusSpec.HealthR\x06health\x1a^\n" +
	"\x06Health\x12\x1c\n" +
	"\tconnected\x18\x01 \x01(\bR\tconnected\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12 \n" +
	"\vinitialized\x18\x03 \x01(\bR\vinitialized\"+\n" +
	"\x15MachineConfigDiffSpec\x12\x12\n" +
	"\x04diff\x18\x01 \x01(\tR\x04diff\"\x9e\x01\n" +
	" ClusterMachineExtendedConfigSpec\x12@\n" +
	"\vconfig_spec\x18\x01 \x01(\v2\x1f.specs.ClusterMachineConfigSpecR\n" +
	"configSpec\x128\n" +
	"\rinstall_image\x18\x02 \x01(\v2\x13.specs.InstallImageR\finstallImage\"\x1c\n" +
	"\x1aClusterOperationStatusSpec*F\n" +
	"\x11ConfigApplyStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\v\n" +
	"\aAPPLIED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03*z\n" +
	"\x0fMachineSetPhase\x12\v\n" +
	"\aUnknown\x10\x00\x12\r\n" +
	"\tScalingUp\x10\x01\x12\x0f\n" +
	"\vScalingDown\x10\x02\x12\v\n" +
	"\aRunning\x10\x03\x12\x0e\n" +
	"\n" +
	"Destroying\x10\x04\x12\n" +
	"\n" +
	"\x06Failed\x10\x05\x12\x11\n" +
	"\rReconfiguring\x10\x06*H\n" +
	"\rConditionType\x12\x14\n" +
	"\x10UnknownCondition\x10\x00\x12\b\n" +
	"\x04Etcd\x10\x01\x12\x17\n" +
	"\x13WireguardConnection\x10\x02*6\n" +
	"\x0eGrpcTunnelMode\x12\t\n" +
	"\x05UNSET\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x02B2Z0github.com/siderolabs/omni/client/api/omni/specsb\x06proto3"

var (
	file_omni_specs_omni_proto_rawDescOnce sync.Once
	file_omni_specs_omni_proto_rawDescData []byte
)

func file_omni_specs_omni_proto_rawDescGZIP() []byte {
	file_omni_specs_omni_proto_rawDescOnce.Do(func() {
		file_omni_specs_omni_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_omni_specs_omni_proto_rawDesc), len(file_omni_specs_omni_proto_rawDesc)))
	})
	return file_omni_specs_omni_proto_rawDescData
}

var file_omni_specs_omni_proto_enumTypes = make([]protoimpl.EnumInfo, 22)
var file_omni_specs_omni_proto_msgTypes = make([]protoimpl.MessageInfo, 123)
var file_omni_specs_omni_proto_goTypes = []any{
	(ConfigApplyStatus)(0),                                    // 0: specs.ConfigApplyStatus
	(MachineSetPhase)(0),                                      // 1: specs.MachineSetPhase
	(ConditionType)(0),                                        // 2: specs.ConditionType
	(GrpcTunnelMode)(0),                                       // 3: specs.GrpcTunnelMode
	(MachineStatusSpec_Role)(0),                               // 4: specs.MachineStatusSpec.Role
	(MachineStatusSpec_PowerState)(0),                         // 5: specs.MachineStatusSpec.PowerState
	(EtcdBackupStatusSpec_Status)(0),                          // 6: specs.EtcdBackupStatusSpec.Status
	(ClusterMachineStatusSpec_Stage)(0),                       // 7: specs.ClusterMachineStatusSpec.Stage
	(ClusterStatusSpec_Phase)(0),                              // 8: specs.ClusterStatusSpec.Phase
	(MachineSetSpec_UpdateStrategy)(0),                        // 9: specs.MachineSetSpec.UpdateStrategy
	(MachineSetSpec_MachineClass_Type)(0),                     // 10: specs.MachineSetSpec.MachineClass.Type
	(MachineSetSpec_MachineAllocation_Type)(0),                // 11: specs.MachineSetSpec.MachineAllocation.Type
	(TalosUpgradeStatusSpec_Phase)(0),                         // 12: specs.TalosUpgradeStatusSpec.Phase
	(MachineStatusSnapshotSpec_PowerStage)(0),                 // 13: specs.MachineStatusSnapshotSpec.PowerStage
	(ControlPlaneStatusSpec_Condition_Status)(0),              // 14: specs.ControlPlaneStatusSpec.Condition.Status
	(ControlPlaneStatusSpec_Condition_Severity)(0),            // 15: specs.ControlPlaneStatusSpec.Condition.Severity
	(KubernetesUpgradeStatusSpec_Phase)(0),                    // 16: specs.KubernetesUpgradeStatusSpec.Phase
	(ExtensionsConfigurationStatusSpec_Phase)(0),              // 17: specs.ExtensionsConfigurationStatusSpec.Phase
	(MachineExtensionsStatusSpec_Item_Phase)(0),               // 18: specs.MachineExtensionsStatusSpec.Item.Phase
	(ClusterMachineRequestStatusSpec_Stage)(0),                // 19: specs.ClusterMachineRequestStatusSpec.Stage
	(InfraMachineConfigSpec_AcceptanceStatus)(0),              // 20: specs.InfraMachineConfigSpec.AcceptanceStatus
	(InfraMachineConfigSpec_MachinePowerState)(0),             // 21: specs.InfraMachineConfigSpec.MachinePowerState
	(*MachineSpec)(nil),                                       // 22: specs.MachineSpec
	(*SecurityState)(nil),                                     // 23: specs.SecurityState
	(*Overlay)(nil),                                           // 24: specs.Overlay
	(*MetaValue)(nil),                                         // 25: specs.MetaValue
	(*MachineStatusSpec)(nil),                                 // 26: specs.MachineStatusSpec
	(*TalosConfigSpec)(nil),                                   // 27: specs.TalosConfigSpec
	(*ClusterSpec)(nil),                                       // 28: specs.ClusterSpec
	(*ClusterTaintSpec)(nil),                                  // 29: specs.ClusterTaintSpec
	(*EtcdBackupConf)(nil),                                    // 30: specs.EtcdBackupConf
	(*EtcdBackupEncryptionSpec)(nil),                          // 31: specs.EtcdBackupEncryptionSpec
	(*EtcdBackupHeader)(nil),                                  // 32: specs.EtcdBackupHeader
	(*EtcdBackupSpec)(nil),                                    // 33: specs.EtcdBackupSpec
	(*BackupDataSpec)(nil),                                    // 34: specs.BackupDataSpec
	(*EtcdBackupS3ConfSpec)(nil),                              // 35: specs.EtcdBackupS3ConfSpec
	(*EtcdBackupStatusSpec)(nil),                              // 36: specs.EtcdBackupStatusSpec
	(*EtcdManualBackupSpec)(nil),                              // 37: specs.EtcdManualBackupSpec
	(*EtcdBackupStoreStatusSpec)(nil),                         // 38: specs.EtcdBackupStoreStatusSpec
	(*EtcdBackupOverallStatusSpec)(nil),                       // 39: specs.EtcdBackupOverallStatusSpec
	(*ClusterMachineSpec)(nil),                                // 40: specs.ClusterMachineSpec
	(*ClusterMachineConfigPatchesSpec)(nil),                   // 41: specs.ClusterMachineConfigPatchesSpec
	(*ClusterMachineTalosVersionSpec)(nil),                    // 42: specs.ClusterMachineTalosVersionSpec
	(*ClusterMachineConfigSpec)(nil),                          // 43: specs.ClusterMachineConfigSpec
	(*RedactedClusterMachineConfigSpec)(nil),                  // 44: specs.RedactedClusterMachineConfigSpec
	(*ClusterMachineIdentitySpec)(nil),                        // 45: specs.ClusterMachineIdentitySpec
	(*ClusterMachineTemplateSpec)(nil),                        // 46: specs.ClusterMachineTemplateSpec
	(*ClusterMachineStatusSpec)(nil),                          // 47: specs.ClusterMachineStatusSpec
	(*Machines)(nil),                                          // 48: specs.Machines
	(*ClusterStatusSpec)(nil),                                 // 49: specs.ClusterStatusSpec
	(*ClusterUUID)(nil),                                       // 50: specs.ClusterUUID
	(*ClusterConfigVersionSpec)(nil),                          // 51: specs.ClusterConfigVersionSpec
	(*ClusterMachineConfigStatusSpec)(nil),                    // 52: specs.ClusterMachineConfigStatusSpec
	(*ClusterBootstrapStatusSpec)(nil),                        // 53: specs.ClusterBootstrapStatusSpec
	(*ClusterSecretsSpec)(nil),                                // 54: specs.ClusterSecretsSpec
	(*ImportedClusterSecretsSpec)(nil),                        // 55: specs.ImportedClusterSecretsSpec
	(*LoadBalancerConfigSpec)(nil),                            // 56: specs.LoadBalancerConfigSpec
	(*LoadBalancerStatusSpec)(nil),                            // 57: specs.LoadBalancerStatusSpec
	(*KubernetesVersionSpec)(nil),                             // 58: specs.KubernetesVersionSpec
	(*TalosVersionSpec)(nil),                                  // 59: specs.TalosVersionSpec
	(*InstallationMediaSpec)(nil),                             // 60: specs.InstallationMediaSpec
	(*ConfigPatchSpec)(nil),                                   // 61: specs.ConfigPatchSpec
	(*MachineSetSpec)(nil),                                    // 62: specs.MachineSetSpec
	(*TalosUpgradeStatusSpec)(nil),                            // 63: specs.TalosUpgradeStatusSpec
	(*MachineSetStatusSpec)(nil),                              // 64: specs.MachineSetStatusSpec
	(*MachineSetNodeSpec)(nil),                                // 65: specs.MachineSetNodeSpec
	(*MachineLabelsSpec)(nil),                                 // 66: specs.MachineLabelsSpec
	(*MachineStatusSnapshotSpec)(nil),                         // 67: specs.MachineStatusSnapshotSpec
	(*ControlPlaneStatusSpec)(nil),                            // 68: specs.ControlPlaneStatusSpec
	(*ClusterEndpointSpec)(nil),                               // 69: specs.ClusterEndpointSpec
	(*KubernetesStatusSpec)(nil),                              // 70: specs.KubernetesStatusSpec
	(*KubernetesUpgradeStatusSpec)(nil),                       // 71: specs.KubernetesUpgradeStatusSpec
	(*KubernetesUpgradeManifestStatusSpec)(nil),               // 72: specs.KubernetesUpgradeManifestStatusSpec
	(*DestroyStatusSpec)(nil),                                 // 73: specs.DestroyStatusSpec
	(*OngoingTaskSpec)(nil),                                   // 74: specs.OngoingTaskSpec
	(*ClusterMachineEncryptionKeySpec)(nil),                   // 75: specs.ClusterMachineEncryptionKeySpec
	(*ExposedServiceSpec)(nil),                                // 76: specs.ExposedServiceSpec
	(*ClusterWorkloadProxyStatusSpec)(nil),                    // 77: specs.ClusterWorkloadProxyStatusSpec
	(*FeaturesConfigSpec)(nil),                                // 78: specs.FeaturesConfigSpec
	(*EtcdBackupSettings)(nil),                                // 79: specs.EtcdBackupSettings
	(*MachineClassSpec)(nil),                                  // 80: specs.MachineClassSpec
	(*InstallImage)(nil),                                      // 81: specs.InstallImage
	(*MachineConfigGenOptionsSpec)(nil),                       // 82: specs.MachineConfigGenOptionsSpec
	(*EtcdAuditResultSpec)(nil),                               // 83: specs.EtcdAuditResultSpec
	(*KubeconfigSpec)(nil),                                    // 84: specs.KubeconfigSpec
	(*KubernetesUsageSpec)(nil),                               // 85: specs.KubernetesUsageSpec
	(*ImagePullRequestSpec)(nil),                              // 86: specs.ImagePullRequestSpec
	(*ImagePullStatusSpec)(nil),                               // 87: specs.ImagePullStatusSpec
	(*SchematicSpec)(nil),                                     // 88: specs.SchematicSpec
	(*TalosExtensionsSpec)(nil),                               // 89: specs.TalosExtensionsSpec
	(*SchematicConfigurationSpec)(nil),                        // 90: specs.SchematicConfigurationSpec
	(*ExtensionsConfigurationSpec)(nil),                       // 91: specs.ExtensionsConfigurationSpec
	(*ExtensionsConfigurationStatusSpec)(nil),                 // 92: specs.ExtensionsConfigurationStatusSpec
	(*MachineExtensionsSpec)(nil),                             // 93: specs.MachineExtensionsSpec
	(*MachineExtensionsStatusSpec)(nil),                       // 94: specs.MachineExtensionsStatusSpec
	(*MachineStatusMetricsSpec)(nil),                          // 95: specs.MachineStatusMetricsSpec
	(*ClusterStatusMetricsSpec)(nil),                          // 96: specs.ClusterStatusMetricsSpec
	(*ClusterKubernetesNodesSpec)(nil),                        // 97: specs.ClusterKubernetesNodesSpec
	(*KubernetesNodeAuditResultSpec)(nil),                     // 98: specs.KubernetesNodeAuditResultSpec
	(*MachineRequestSetSpec)(nil),                             // 99: specs.MachineRequestSetSpec
	(*MachineRequestSetStatusSpec)(nil),                       // 100: specs.MachineRequestSetStatusSpec
	(*ClusterDiagnosticsSpec)(nil),                            // 101: specs.ClusterDiagnosticsSpec
	(*MachineRequestSetPressureSpec)(nil),                     // 102: specs.MachineRequestSetPressureSpec
	(*ClusterMachineRequestStatusSpec)(nil),                   // 103: specs.ClusterMachineRequestStatusSpec
	(*InfraMachineConfigSpec)(nil),                            // 104: specs.InfraMachineConfigSpec
	(*InfraMachineBMCConfigSpec)(nil),                         // 105: specs.InfraMachineBMCConfigSpec
	(*MaintenanceConfigStatusSpec)(nil),                       // 106: specs.MaintenanceConfigStatusSpec
	(*NodeForceDestroyRequestSpec)(nil),                       // 107: specs.NodeForceDestroyRequestSpec
	(*DiscoveryAffiliateDeleteTaskSpec)(nil),                  // 108: specs.DiscoveryAffiliateDeleteTaskSpec
	(*InfraProviderCombinedStatusSpec)(nil),                   // 109: specs.InfraProviderCombinedStatusSpec
	(*MachineConfigDiffSpec)(nil),                             // 110: specs.MachineConfigDiffSpec
	(*ClusterMachineExtendedConfigSpec)(nil),                  // 111: specs.ClusterMachineExtendedConfigSpec
	(*ClusterOperationStatusSpec)(nil),                        // 112: specs.ClusterOperationStatusSpec
	(*MachineStatusSpec_HardwareStatus)(nil),                  // 113: specs.MachineStatusSpec.HardwareStatus
	(*MachineStatusSpec_NetworkStatus)(nil),                   // 114: specs.MachineStatusSpec.NetworkStatus
	(*MachineStatusSpec_PlatformMetadata)(nil),                // 115: specs.MachineStatusSpec.PlatformMetadata
	(*MachineStatusSpec_Schematic)(nil),                       // 116: specs.MachineStatusSpec.Schematic
	(*MachineStatusSpec_Diagnostic)(nil),                      // 117: specs.MachineStatusSpec.Diagnostic
	nil,                                                       // 118: specs.MachineStatusSpec.ImageLabelsEntry
	(*MachineStatusSpec_HardwareStatus_Processor)(nil),        // 119: specs.MachineStatusSpec.HardwareStatus.Processor
	(*MachineStatusSpec_HardwareStatus_MemoryModule)(nil),     // 120: specs.MachineStatusSpec.HardwareStatus.MemoryModule
	(*MachineStatusSpec_HardwareStatus_BlockDevice)(nil),      // 121: specs.MachineStatusSpec.HardwareStatus.BlockDevice
	(*MachineStatusSpec_NetworkStatus_NetworkLinkStatus)(nil), // 122: specs.MachineStatusSpec.NetworkStatus.NetworkLinkStatus
	(*ClusterSpec_Features)(nil),                              // 123: specs.ClusterSpec.Features
	(*ClusterMachineStatusSpec_ProvisionStatus)(nil),          // 124: specs.ClusterMachineStatusSpec.ProvisionStatus
	(*MachineSetSpec_MachineClass)(nil),                       // 125: specs.MachineSetSpec.MachineClass
	(*MachineSetSpec_MachineAllocation)(nil),                  // 126: specs.MachineSetSpec.MachineAllocation
	(*MachineSetSpec_BootstrapSpec)(nil),                      // 127: specs.MachineSetSpec.BootstrapSpec
	(*MachineSetSpec_RollingUpdateStrategyConfig)(nil),        // 128: specs.MachineSetSpec.RollingUpdateStrategyConfig
	(*MachineSetSpec_UpdateStrategyConfig)(nil),               // 129: specs.MachineSetSpec.UpdateStrategyConfig
	(*ControlPlaneStatusSpec_Condition)(nil),                  // 130: specs.ControlPlaneStatusSpec.Condition
	(*KubernetesStatusSpec_NodeStatus)(nil),                   // 131: specs.KubernetesStatusSpec.NodeStatus
	(*KubernetesStatusSpec_StaticPodStatus)(nil),              // 132: specs.KubernetesStatusSpec.StaticPodStatus
	(*KubernetesStatusSpec_NodeStaticPods)(nil),               // 133: specs.KubernetesStatusSpec.NodeStaticPods
	(*MachineClassSpec_Provision)(nil),                        // 134: specs.MachineClassSpec.Provision
	(*KubernetesUsageSpec_Quantity)(nil),                      // 135: specs.KubernetesUsageSpec.Quantity
	(*KubernetesUsageSpec_Pod)(nil),                           // 136: specs.KubernetesUsageSpec.Pod
	(*ImagePullRequestSpec_NodeImageList)(nil),                // 137: specs.ImagePullRequestSpec.NodeImageList
	(*TalosExtensionsSpec_Info)(nil),                          // 138: specs.TalosExtensionsSpec.Info
	(*MachineExtensionsStatusSpec_Item)(nil),                  // 139: specs.MachineExtensionsStatusSpec.Item
	nil,                                                       // 140: specs.ClusterStatusMetricsSpec.PhasesEntry
	(*ClusterDiagnosticsSpec_Node)(nil),                       // 141: specs.ClusterDiagnosticsSpec.Node
	(*InfraMachineBMCConfigSpec_IPMI)(nil),                    // 142: specs.InfraMachineBMCConfigSpec.IPMI
	(*InfraMachineBMCConfigSpec_API)(nil),                     // 143: specs.InfraMachineBMCConfigSpec.API
	(*InfraProviderCombinedStatusSpec_Health)(nil),            // 144: specs.InfraProviderCombinedStatusSpec.Health
	(*durationpb.Duration)(nil),                               // 145: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),                             // 146: google.protobuf.Timestamp
	(*machine.MachineStatusEvent)(nil),                        // 147: machine.MachineStatusEvent
}
var file_omni_specs_omni_proto_depIdxs = []int32{
	113, // 0: specs.MachineStatusSpec.hardware:type_name -> specs.MachineStatusSpec.HardwareStatus
	114, // 1: specs.MachineStatusSpec.network:type_name -> specs.MachineStatusSpec.NetworkStatus
	4,   // 2: specs.MachineStatusSpec.role:type_name -> specs.MachineStatusSpec.Role
	115, // 3: specs.MachineStatusSpec.platform_metadata:type_name -> specs.MachineStatusSpec.PlatformMetadata
	118, // 4: specs.MachineStatusSpec.image_labels:type_name -> specs.MachineStatusSpec.ImageLabelsEntry
	116, // 5: specs.MachineStatusSpec.schematic:type_name -> specs.MachineStatusSpec.Schematic
	117, // 6: specs.MachineStatusSpec.diagnostics:type_name -> specs.MachineStatusSpec.Diagnostic
	5,   // 7: specs.MachineStatusSpec.power_state:type_name -> specs.MachineStatusSpec.PowerState
	23,  // 8: specs.MachineStatusSpec.security_state:type_name -> specs.SecurityState
	123, // 9: specs.ClusterSpec.features:type_name -> specs.ClusterSpec.Features
	30,  // 10: specs.ClusterSpec.backup_configuration:type_name -> specs.EtcdBackupConf
	145, // 11: specs.EtcdBackupConf.interval:type_name -> google.protobuf.Duration
	146, // 12: specs.EtcdBackupSpec.created_at:type_name -> google.protobuf.Timestamp
	145, // 13: specs.BackupDataSpec.interval:type_name -> google.protobuf.Duration
	6,   // 14: specs.EtcdBackupStatusSpec.status:type_name -> specs.EtcdBackupStatusSpec.Status
	146, // 15: specs.EtcdBackupStatusSpec.last_backup_time:type_name -> google.protobuf.Timestamp
	146, // 16: specs.EtcdBackupStatusSpec.last_backup_attempt:type_name -> google.protobuf.Timestamp
	146, // 17: specs.EtcdManualBackupSpec.backup_at:type_name -> google.protobuf.Timestamp
	36,  // 18: specs.EtcdBackupOverallStatusSpec.last_backup_status:type_name -> specs.EtcdBackupStatusSpec
	7,   // 19: specs.ClusterMachineStatusSpec.stage:type_name -> specs.ClusterMachineStatusSpec.Stage
	0,   // 20: specs.ClusterMachineStatusSpec.config_apply_status:type_name -> specs.ConfigApplyStatus
	124, // 21: specs.ClusterMachineStatusSpec.provision_status:type_name -> specs.ClusterMachineStatusSpec.ProvisionStatus
	48,  // 22: specs.ClusterStatusSpec.machines:type_name -> specs.Machines
	8,   // 23: specs.ClusterStatusSpec.phase:type_name -> specs.ClusterStatusSpec.Phase
	9,   // 24: specs.MachineSetSpec.update_strategy:type_name -> specs.MachineSetSpec.UpdateStrategy
	126, // 25: specs.MachineSetSpec.machine_class:type_name -> specs.MachineSetSpec.MachineAllocation
	127, // 26: specs.MachineSetSpec.bootstrap_spec:type_name -> specs.MachineSetSpec.BootstrapSpec
	9,   // 27: specs.MachineSetSpec.delete_strategy:type_name -> specs.MachineSetSpec.UpdateStrategy
	129, // 28: specs.MachineSetSpec.update_strategy_config:type_name -> specs.MachineSetSpec.UpdateStrategyConfig
	129, // 29: specs.MachineSetSpec.delete_strategy_config:type_name -> specs.MachineSetSpec.UpdateStrategyConfig
	126, // 30: specs.MachineSetSpec.machine_allocation:type_name -> specs.MachineSetSpec.MachineAllocation
	12,  // 31: specs.TalosUpgradeStatusSpec.phase:type_name -> specs.TalosUpgradeStatusSpec.Phase
	1,   // 32: specs.MachineSetStatusSpec.phase:type_name -> specs.MachineSetPhase
	48,  // 33: specs.MachineSetStatusSpec.machines:type_name -> specs.Machines
	126, // 34: specs.MachineSetStatusSpec.machine_allocation:type_name -> specs.MachineSetSpec.MachineAllocation
	147, // 35: specs.MachineStatusSnapshotSpec.machine_status:type_name -> machine.MachineStatusEvent
	13,  // 36: specs.MachineStatusSnapshotSpec.power_stage:type_name -> specs.MachineStatusSnapshotSpec.PowerStage
	130, // 37: specs.ControlPlaneStatusSpec.conditions:type_name -> specs.ControlPlaneStatusSpec.Condition
	131, // 38: specs.KubernetesStatusSpec.nodes:type_name -> specs.KubernetesStatusSpec.NodeStatus
	133, // 39: specs.KubernetesStatusSpec.static_pods:type_name -> specs.KubernetesStatusSpec.NodeStaticPods
	16,  // 40: specs.KubernetesUpgradeStatusSpec.phase:type_name -> specs.KubernetesUpgradeStatusSpec.Phase
	63,  // 41: specs.OngoingTaskSpec.talos_upgrade:type_name -> specs.TalosUpgradeStatusSpec
	71,  // 42: specs.OngoingTaskSpec.kubernetes_upgrade:type_name -> specs.KubernetesUpgradeStatusSpec
	73,  // 43: specs.OngoingTaskSpec.destroy:type_name -> specs.DestroyStatusSpec
	79,  // 44: specs.FeaturesConfigSpec.etcd_backup_settings:type_name -> specs.EtcdBackupSettings
	145, // 45: specs.EtcdBackupSettings.tick_interval:type_name -> google.protobuf.Duration
	145, // 46: specs.EtcdBackupSettings.min_interval:type_name -> google.protobuf.Duration
	145, // 47: specs.EtcdBackupSettings.max_interval:type_name -> google.protobuf.Duration
	134, // 48: specs.MachineClassSpec.auto_provision:type_name -> specs.MachineClassSpec.Provision
	23,  // 49: specs.InstallImage.security_state:type_name -> specs.SecurityState
	81,  // 50: specs.MachineConfigGenOptionsSpec.install_image:type_name -> specs.InstallImage
	135, // 51: specs.KubernetesUsageSpec.cpu:type_name -> specs.KubernetesUsageSpec.Quantity
	135, // 52: specs.KubernetesUsageSpec.mem:type_name -> specs.KubernetesUsageSpec.Quantity
	135, // 53: specs.KubernetesUsageSpec.storage:type_name -> specs.KubernetesUsageSpec.Quantity
	136, // 54: specs.KubernetesUsageSpec.pods:type_name -> specs.KubernetesUsageSpec.Pod
	137, // 55: specs.ImagePullRequestSpec.node_image_list:type_name -> specs.ImagePullRequestSpec.NodeImageList
	138, // 56: specs.TalosExtensionsSpec.items:type_name -> specs.TalosExtensionsSpec.Info
	17,  // 57: specs.ExtensionsConfigurationStatusSpec.phase:type_name -> specs.ExtensionsConfigurationStatusSpec.Phase
	139, // 58: specs.MachineExtensionsStatusSpec.extensions:type_name -> specs.MachineExtensionsStatusSpec.Item
	140, // 59: specs.ClusterStatusMetricsSpec.phases:type_name -> specs.ClusterStatusMetricsSpec.PhasesEntry
	25,  // 60: specs.MachineRequestSetSpec.meta_values:type_name -> specs.MetaValue
	3,   // 61: specs.MachineRequestSetSpec.grpc_tunnel:type_name -> specs.GrpcTunnelMode
	141, // 62: specs.ClusterDiagnosticsSpec.nodes:type_name -> specs.ClusterDiagnosticsSpec.Node
	19,  // 63: specs.ClusterMachineRequestStatusSpec.stage:type_name -> specs.ClusterMachineRequestStatusSpec.Stage
	21,  // 64: specs.InfraMachineConfigSpec.power_state:type_name -> specs.InfraMachineConfigSpec.MachinePowerState
	20,  // 65: specs.InfraMachineConfigSpec.acceptance_status:type_name -> specs.InfraMachineConfigSpec.AcceptanceStatus
	142, // 66: specs.InfraMachineBMCConfigSpec.ipmi:type_name -> specs.InfraMachineBMCConfigSpec.IPMI
	143, // 67: specs.InfraMachineBMCConfigSpec.api:type_name -> specs.InfraMachineBMCConfigSpec.API
	144, // 68: specs.InfraProviderCombinedStatusSpec.health:type_name -> specs.InfraProviderCombinedStatusSpec.Health
	43,  // 69: specs.ClusterMachineExtendedConfigSpec.config_spec:type_name -> specs.ClusterMachineConfigSpec
	81,  // 70: specs.ClusterMachineExtendedConfigSpec.install_image:type_name -> specs.InstallImage
	119, // 71: specs.MachineStatusSpec.HardwareStatus.processors:type_name -> specs.MachineStatusSpec.HardwareStatus.Processor
	120, // 72: specs.MachineStatusSpec.HardwareStatus.memory_modules:type_name -> specs.MachineStatusSpec.HardwareStatus.MemoryModule
	121, // 73: specs.MachineStatusSpec.HardwareStatus.blockdevices:type_name -> specs.MachineStatusSpec.HardwareStatus.BlockDevice
	122, // 74: specs.MachineStatusSpec.NetworkStatus.network_links:type_name -> specs.MachineStatusSpec.NetworkStatus.NetworkLinkStatus
	24,  // 75: specs.MachineStatusSpec.Schematic.overlay:type_name -> specs.Overlay
	25,  // 76: specs.MachineStatusSpec.Schematic.meta_values:type_name -> specs.MetaValue
	10,  // 77: specs.MachineSetSpec.MachineClass.allocation_type:type_name -> specs.MachineSetSpec.MachineClass.Type
	11,  // 78: specs.MachineSetSpec.MachineAllocation.allocation_type:type_name -> specs.MachineSetSpec.MachineAllocation.Type
	128, // 79: specs.MachineSetSpec.UpdateStrategyConfig.rolling:type_name -> specs.MachineSetSpec.RollingUpdateStrategyConfig
	2,   // 80: specs.ControlPlaneStatusSpec.Condition.type:type_name -> specs.ConditionType
	14,  // 81: specs.ControlPlaneStatusSpec.Condition.status:type_name -> specs.ControlPlaneStatusSpec.Condition.Status
	15,  // 82: specs.ControlPlaneStatusSpec.Condition.severity:type_name -> specs.ControlPlaneStatusSpec.Condition.Severity
	132, // 83: specs.KubernetesStatusSpec.NodeStaticPods.static_pods:type_name -> specs.KubernetesStatusSpec.StaticPodStatus
	25,  // 84: specs.MachineClassSpec.Provision.meta_values:type_name -> specs.MetaValue
	3,   // 85: specs.MachineClassSpec.Provision.grpc_tunnel:type_name -> specs.GrpcTunnelMode
	18,  // 86: specs.MachineExtensionsStatusSpec.Item.phase:type_name -> specs.MachineExtensionsStatusSpec.Item.Phase
	87,  // [87:87] is the sub-list for method output_type
	87,  // [87:87] is the sub-list for method input_type
	87,  // [87:87] is the sub-list for extension type_name
	87,  // [87:87] is the sub-list for extension extendee
	0,   // [0:87] is the sub-list for field type_name
}

func init() { file_omni_specs_omni_proto_init() }
func file_omni_specs_omni_proto_init() {
	if File_omni_specs_omni_proto != nil {
		return
	}
	file_omni_specs_omni_proto_msgTypes[52].OneofWrappers = []any{
		(*OngoingTaskSpec_TalosUpgrade)(nil),
		(*OngoingTaskSpec_KubernetesUpgrade)(nil),
		(*OngoingTaskSpec_Destroy)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_omni_specs_omni_proto_rawDesc), len(file_omni_specs_omni_proto_rawDesc)),
			NumEnums:      22,
			NumMessages:   123,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_omni_specs_omni_proto_goTypes,
		DependencyIndexes: file_omni_specs_omni_proto_depIdxs,
		EnumInfos:         file_omni_specs_omni_proto_enumTypes,
		MessageInfos:      file_omni_specs_omni_proto_msgTypes,
	}.Build()
	File_omni_specs_omni_proto = out.File
	file_omni_specs_omni_proto_goTypes = nil
	file_omni_specs_omni_proto_depIdxs = nil
}
