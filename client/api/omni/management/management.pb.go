// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.24.4
// source: omni/management/management.proto

package management

import (
	reflect "reflect"
	sync "sync"

	common "github.com/siderolabs/talos/pkg/machinery/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KubernetesSyncManifestResponse_ResponseType int32

const (
	KubernetesSyncManifestResponse_UNKNOWN  KubernetesSyncManifestResponse_ResponseType = 0
	KubernetesSyncManifestResponse_MANIFEST KubernetesSyncManifestResponse_ResponseType = 1
	KubernetesSyncManifestResponse_ROLLOUT  KubernetesSyncManifestResponse_ResponseType = 2
)

// Enum value maps for KubernetesSyncManifestResponse_ResponseType.
var (
	KubernetesSyncManifestResponse_ResponseType_name = map[int32]string{
		0: "UNKNOWN",
		1: "MANIFEST",
		2: "ROLLOUT",
	}
	KubernetesSyncManifestResponse_ResponseType_value = map[string]int32{
		"UNKNOWN":  0,
		"MANIFEST": 1,
		"ROLLOUT":  2,
	}
)

func (x KubernetesSyncManifestResponse_ResponseType) Enum() *KubernetesSyncManifestResponse_ResponseType {
	p := new(KubernetesSyncManifestResponse_ResponseType)
	*p = x
	return p
}

func (x KubernetesSyncManifestResponse_ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubernetesSyncManifestResponse_ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_management_management_proto_enumTypes[0].Descriptor()
}

func (KubernetesSyncManifestResponse_ResponseType) Type() protoreflect.EnumType {
	return &file_omni_management_management_proto_enumTypes[0]
}

func (x KubernetesSyncManifestResponse_ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubernetesSyncManifestResponse_ResponseType.Descriptor instead.
func (KubernetesSyncManifestResponse_ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{16, 0}
}

type CreateSchematicRequest_SiderolinkGRPCTunnelMode int32

const (
	CreateSchematicRequest_AUTO     CreateSchematicRequest_SiderolinkGRPCTunnelMode = 0
	CreateSchematicRequest_DISABLED CreateSchematicRequest_SiderolinkGRPCTunnelMode = 1
	CreateSchematicRequest_ENABLED  CreateSchematicRequest_SiderolinkGRPCTunnelMode = 2
)

// Enum value maps for CreateSchematicRequest_SiderolinkGRPCTunnelMode.
var (
	CreateSchematicRequest_SiderolinkGRPCTunnelMode_name = map[int32]string{
		0: "AUTO",
		1: "DISABLED",
		2: "ENABLED",
	}
	CreateSchematicRequest_SiderolinkGRPCTunnelMode_value = map[string]int32{
		"AUTO":     0,
		"DISABLED": 1,
		"ENABLED":  2,
	}
)

func (x CreateSchematicRequest_SiderolinkGRPCTunnelMode) Enum() *CreateSchematicRequest_SiderolinkGRPCTunnelMode {
	p := new(CreateSchematicRequest_SiderolinkGRPCTunnelMode)
	*p = x
	return p
}

func (x CreateSchematicRequest_SiderolinkGRPCTunnelMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateSchematicRequest_SiderolinkGRPCTunnelMode) Descriptor() protoreflect.EnumDescriptor {
	return file_omni_management_management_proto_enumTypes[1].Descriptor()
}

func (CreateSchematicRequest_SiderolinkGRPCTunnelMode) Type() protoreflect.EnumType {
	return &file_omni_management_management_proto_enumTypes[1]
}

func (x CreateSchematicRequest_SiderolinkGRPCTunnelMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateSchematicRequest_SiderolinkGRPCTunnelMode.Descriptor instead.
func (CreateSchematicRequest_SiderolinkGRPCTunnelMode) EnumDescriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{17, 0}
}

type KubeconfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kubeconfig is the kubeconfig for the cluster.
	Kubeconfig []byte `protobuf:"bytes,1,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
}

func (x *KubeconfigResponse) Reset() {
	*x = KubeconfigResponse{}
	mi := &file_omni_management_management_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubeconfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeconfigResponse) ProtoMessage() {}

func (x *KubeconfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeconfigResponse.ProtoReflect.Descriptor instead.
func (*KubeconfigResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{0}
}

func (x *KubeconfigResponse) GetKubeconfig() []byte {
	if x != nil {
		return x.Kubeconfig
	}
	return nil
}

type TalosconfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// talosconfig is the talos client configuration to access the cluster via the proxy.
	Talosconfig []byte `protobuf:"bytes,1,opt,name=talosconfig,proto3" json:"talosconfig,omitempty"`
}

func (x *TalosconfigResponse) Reset() {
	*x = TalosconfigResponse{}
	mi := &file_omni_management_management_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalosconfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalosconfigResponse) ProtoMessage() {}

func (x *TalosconfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalosconfigResponse.ProtoReflect.Descriptor instead.
func (*TalosconfigResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{1}
}

func (x *TalosconfigResponse) GetTalosconfig() []byte {
	if x != nil {
		return x.Talosconfig
	}
	return nil
}

type OmniconfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// omniconfig is the omnictl client configuration to access the omni instance.
	Omniconfig []byte `protobuf:"bytes,1,opt,name=omniconfig,proto3" json:"omniconfig,omitempty"`
}

func (x *OmniconfigResponse) Reset() {
	*x = OmniconfigResponse{}
	mi := &file_omni_management_management_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OmniconfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OmniconfigResponse) ProtoMessage() {}

func (x *OmniconfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OmniconfigResponse.ProtoReflect.Descriptor instead.
func (*OmniconfigResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{2}
}

func (x *OmniconfigResponse) GetOmniconfig() []byte {
	if x != nil {
		return x.Omniconfig
	}
	return nil
}

type MachineLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MachineId is the ID of the machine.
	MachineId string `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	// Follow is whether to follow the logs.
	Follow bool `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`
	// TailLines is the number of lines to tail.
	TailLines int32 `protobuf:"varint,3,opt,name=tail_lines,json=tailLines,proto3" json:"tail_lines,omitempty"`
}

func (x *MachineLogsRequest) Reset() {
	*x = MachineLogsRequest{}
	mi := &file_omni_management_management_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineLogsRequest) ProtoMessage() {}

func (x *MachineLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineLogsRequest.ProtoReflect.Descriptor instead.
func (*MachineLogsRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{3}
}

func (x *MachineLogsRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *MachineLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *MachineLogsRequest) GetTailLines() int32 {
	if x != nil {
		return x.TailLines
	}
	return 0
}

type ValidateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Config represents raw configuration string to validate.
	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ValidateConfigRequest) Reset() {
	*x = ValidateConfigRequest{}
	mi := &file_omni_management_management_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigRequest) ProtoMessage() {}

func (x *ValidateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigRequest.ProtoReflect.Descriptor instead.
func (*ValidateConfigRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateConfigRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type TalosconfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Raw indicates whether to generate an raw talosconfig or a regular one.
	Raw bool `protobuf:"varint,1,opt,name=raw,proto3" json:"raw,omitempty"`
	// BreakGlass indicates whether to generate an operator break glass talosconfig or a regular one.
	BreakGlass bool `protobuf:"varint,2,opt,name=break_glass,json=breakGlass,proto3" json:"break_glass,omitempty"`
}

func (x *TalosconfigRequest) Reset() {
	*x = TalosconfigRequest{}
	mi := &file_omni_management_management_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalosconfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalosconfigRequest) ProtoMessage() {}

func (x *TalosconfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalosconfigRequest.ProtoReflect.Descriptor instead.
func (*TalosconfigRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{5}
}

func (x *TalosconfigRequest) GetRaw() bool {
	if x != nil {
		return x.Raw
	}
	return false
}

func (x *TalosconfigRequest) GetBreakGlass() bool {
	if x != nil {
		return x.BreakGlass
	}
	return false
}

type CreateServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArmoredPgpPublicKey string `protobuf:"bytes,1,opt,name=armored_pgp_public_key,json=armoredPgpPublicKey,proto3" json:"armored_pgp_public_key,omitempty"`
	// UseUserRole indicates whether to use the role of the creating user.
	// When true, role will be ignored and the service account will be created with the role of the creating user.
	UseUserRole bool   `protobuf:"varint,3,opt,name=use_user_role,json=useUserRole,proto3" json:"use_user_role,omitempty"`
	Role        string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateServiceAccountRequest) Reset() {
	*x = CreateServiceAccountRequest{}
	mi := &file_omni_management_management_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceAccountRequest) ProtoMessage() {}

func (x *CreateServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{6}
}

func (x *CreateServiceAccountRequest) GetArmoredPgpPublicKey() string {
	if x != nil {
		return x.ArmoredPgpPublicKey
	}
	return ""
}

func (x *CreateServiceAccountRequest) GetUseUserRole() bool {
	if x != nil {
		return x.UseUserRole
	}
	return false
}

func (x *CreateServiceAccountRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateServiceAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeyId string `protobuf:"bytes,1,opt,name=public_key_id,json=publicKeyId,proto3" json:"public_key_id,omitempty"`
}

func (x *CreateServiceAccountResponse) Reset() {
	*x = CreateServiceAccountResponse{}
	mi := &file_omni_management_management_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceAccountResponse) ProtoMessage() {}

func (x *CreateServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{7}
}

func (x *CreateServiceAccountResponse) GetPublicKeyId() string {
	if x != nil {
		return x.PublicKeyId
	}
	return ""
}

type RenewServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ArmoredPgpPublicKey string `protobuf:"bytes,2,opt,name=armored_pgp_public_key,json=armoredPgpPublicKey,proto3" json:"armored_pgp_public_key,omitempty"`
}

func (x *RenewServiceAccountRequest) Reset() {
	*x = RenewServiceAccountRequest{}
	mi := &file_omni_management_management_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewServiceAccountRequest) ProtoMessage() {}

func (x *RenewServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*RenewServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{8}
}

func (x *RenewServiceAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RenewServiceAccountRequest) GetArmoredPgpPublicKey() string {
	if x != nil {
		return x.ArmoredPgpPublicKey
	}
	return ""
}

type RenewServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeyId string `protobuf:"bytes,1,opt,name=public_key_id,json=publicKeyId,proto3" json:"public_key_id,omitempty"`
}

func (x *RenewServiceAccountResponse) Reset() {
	*x = RenewServiceAccountResponse{}
	mi := &file_omni_management_management_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewServiceAccountResponse) ProtoMessage() {}

func (x *RenewServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*RenewServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{9}
}

func (x *RenewServiceAccountResponse) GetPublicKeyId() string {
	if x != nil {
		return x.PublicKeyId
	}
	return ""
}

type DestroyServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DestroyServiceAccountRequest) Reset() {
	*x = DestroyServiceAccountRequest{}
	mi := &file_omni_management_management_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyServiceAccountRequest) ProtoMessage() {}

func (x *DestroyServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*DestroyServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{10}
}

func (x *DestroyServiceAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListServiceAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccounts []*ListServiceAccountsResponse_ServiceAccount `protobuf:"bytes,1,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
}

func (x *ListServiceAccountsResponse) Reset() {
	*x = ListServiceAccountsResponse{}
	mi := &file_omni_management_management_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceAccountsResponse) ProtoMessage() {}

func (x *ListServiceAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListServiceAccountsResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{11}
}

func (x *ListServiceAccountsResponse) GetServiceAccounts() []*ListServiceAccountsResponse_ServiceAccount {
	if x != nil {
		return x.ServiceAccounts
	}
	return nil
}

type KubeconfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccount       bool                 `protobuf:"varint,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	ServiceAccountTtl    *durationpb.Duration `protobuf:"bytes,2,opt,name=service_account_ttl,json=serviceAccountTtl,proto3" json:"service_account_ttl,omitempty"`
	ServiceAccountUser   string               `protobuf:"bytes,3,opt,name=service_account_user,json=serviceAccountUser,proto3" json:"service_account_user,omitempty"`
	ServiceAccountGroups []string             `protobuf:"bytes,4,rep,name=service_account_groups,json=serviceAccountGroups,proto3" json:"service_account_groups,omitempty"`
	GrantType            string               `protobuf:"bytes,5,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	BreakGlass           bool                 `protobuf:"varint,6,opt,name=break_glass,json=breakGlass,proto3" json:"break_glass,omitempty"`
}

func (x *KubeconfigRequest) Reset() {
	*x = KubeconfigRequest{}
	mi := &file_omni_management_management_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubeconfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeconfigRequest) ProtoMessage() {}

func (x *KubeconfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeconfigRequest.ProtoReflect.Descriptor instead.
func (*KubeconfigRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{12}
}

func (x *KubeconfigRequest) GetServiceAccount() bool {
	if x != nil {
		return x.ServiceAccount
	}
	return false
}

func (x *KubeconfigRequest) GetServiceAccountTtl() *durationpb.Duration {
	if x != nil {
		return x.ServiceAccountTtl
	}
	return nil
}

func (x *KubeconfigRequest) GetServiceAccountUser() string {
	if x != nil {
		return x.ServiceAccountUser
	}
	return ""
}

func (x *KubeconfigRequest) GetServiceAccountGroups() []string {
	if x != nil {
		return x.ServiceAccountGroups
	}
	return nil
}

func (x *KubeconfigRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *KubeconfigRequest) GetBreakGlass() bool {
	if x != nil {
		return x.BreakGlass
	}
	return false
}

type KubernetesUpgradePreChecksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewVersion string `protobuf:"bytes,1,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
}

func (x *KubernetesUpgradePreChecksRequest) Reset() {
	*x = KubernetesUpgradePreChecksRequest{}
	mi := &file_omni_management_management_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesUpgradePreChecksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesUpgradePreChecksRequest) ProtoMessage() {}

func (x *KubernetesUpgradePreChecksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesUpgradePreChecksRequest.ProtoReflect.Descriptor instead.
func (*KubernetesUpgradePreChecksRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{13}
}

func (x *KubernetesUpgradePreChecksRequest) GetNewVersion() string {
	if x != nil {
		return x.NewVersion
	}
	return ""
}

type KubernetesUpgradePreChecksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok     bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *KubernetesUpgradePreChecksResponse) Reset() {
	*x = KubernetesUpgradePreChecksResponse{}
	mi := &file_omni_management_management_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesUpgradePreChecksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesUpgradePreChecksResponse) ProtoMessage() {}

func (x *KubernetesUpgradePreChecksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesUpgradePreChecksResponse.ProtoReflect.Descriptor instead.
func (*KubernetesUpgradePreChecksResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{14}
}

func (x *KubernetesUpgradePreChecksResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *KubernetesUpgradePreChecksResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type KubernetesSyncManifestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DryRun bool `protobuf:"varint,1,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
}

func (x *KubernetesSyncManifestRequest) Reset() {
	*x = KubernetesSyncManifestRequest{}
	mi := &file_omni_management_management_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesSyncManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesSyncManifestRequest) ProtoMessage() {}

func (x *KubernetesSyncManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesSyncManifestRequest.ProtoReflect.Descriptor instead.
func (*KubernetesSyncManifestRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{15}
}

func (x *KubernetesSyncManifestRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type KubernetesSyncManifestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseType KubernetesSyncManifestResponse_ResponseType `protobuf:"varint,1,opt,name=response_type,json=responseType,proto3,enum=management.KubernetesSyncManifestResponse_ResponseType" json:"response_type,omitempty"`
	Path         string                                      `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Object       []byte                                      `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Diff         string                                      `protobuf:"bytes,4,opt,name=diff,proto3" json:"diff,omitempty"`
	Skipped      bool                                        `protobuf:"varint,5,opt,name=skipped,proto3" json:"skipped,omitempty"`
}

func (x *KubernetesSyncManifestResponse) Reset() {
	*x = KubernetesSyncManifestResponse{}
	mi := &file_omni_management_management_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesSyncManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesSyncManifestResponse) ProtoMessage() {}

func (x *KubernetesSyncManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesSyncManifestResponse.ProtoReflect.Descriptor instead.
func (*KubernetesSyncManifestResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{16}
}

func (x *KubernetesSyncManifestResponse) GetResponseType() KubernetesSyncManifestResponse_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return KubernetesSyncManifestResponse_UNKNOWN
}

func (x *KubernetesSyncManifestResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *KubernetesSyncManifestResponse) GetObject() []byte {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *KubernetesSyncManifestResponse) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

func (x *KubernetesSyncManifestResponse) GetSkipped() bool {
	if x != nil {
		return x.Skipped
	}
	return false
}

type CreateSchematicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extensions               []string                                        `protobuf:"bytes,1,rep,name=extensions,proto3" json:"extensions,omitempty"`
	ExtraKernelArgs          []string                                        `protobuf:"bytes,2,rep,name=extra_kernel_args,json=extraKernelArgs,proto3" json:"extra_kernel_args,omitempty"`
	MetaValues               map[uint32]string                               `protobuf:"bytes,3,rep,name=meta_values,json=metaValues,proto3" json:"meta_values,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TalosVersion             string                                          `protobuf:"bytes,4,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	MediaId                  string                                          `protobuf:"bytes,5,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	SecureBoot               bool                                            `protobuf:"varint,6,opt,name=secure_boot,json=secureBoot,proto3" json:"secure_boot,omitempty"`
	SiderolinkGrpcTunnelMode CreateSchematicRequest_SiderolinkGRPCTunnelMode `protobuf:"varint,7,opt,name=siderolink_grpc_tunnel_mode,json=siderolinkGrpcTunnelMode,proto3,enum=management.CreateSchematicRequest_SiderolinkGRPCTunnelMode" json:"siderolink_grpc_tunnel_mode,omitempty"`
}

func (x *CreateSchematicRequest) Reset() {
	*x = CreateSchematicRequest{}
	mi := &file_omni_management_management_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSchematicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSchematicRequest) ProtoMessage() {}

func (x *CreateSchematicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSchematicRequest.ProtoReflect.Descriptor instead.
func (*CreateSchematicRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{17}
}

func (x *CreateSchematicRequest) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *CreateSchematicRequest) GetExtraKernelArgs() []string {
	if x != nil {
		return x.ExtraKernelArgs
	}
	return nil
}

func (x *CreateSchematicRequest) GetMetaValues() map[uint32]string {
	if x != nil {
		return x.MetaValues
	}
	return nil
}

func (x *CreateSchematicRequest) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

func (x *CreateSchematicRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *CreateSchematicRequest) GetSecureBoot() bool {
	if x != nil {
		return x.SecureBoot
	}
	return false
}

func (x *CreateSchematicRequest) GetSiderolinkGrpcTunnelMode() CreateSchematicRequest_SiderolinkGRPCTunnelMode {
	if x != nil {
		return x.SiderolinkGrpcTunnelMode
	}
	return CreateSchematicRequest_AUTO
}

type CreateSchematicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchematicId string `protobuf:"bytes,1,opt,name=schematic_id,json=schematicId,proto3" json:"schematic_id,omitempty"`
	PxeUrl      string `protobuf:"bytes,2,opt,name=pxe_url,json=pxeUrl,proto3" json:"pxe_url,omitempty"`
}

func (x *CreateSchematicResponse) Reset() {
	*x = CreateSchematicResponse{}
	mi := &file_omni_management_management_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSchematicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSchematicResponse) ProtoMessage() {}

func (x *CreateSchematicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSchematicResponse.ProtoReflect.Descriptor instead.
func (*CreateSchematicResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{18}
}

func (x *CreateSchematicResponse) GetSchematicId() string {
	if x != nil {
		return x.SchematicId
	}
	return ""
}

func (x *CreateSchematicResponse) GetPxeUrl() string {
	if x != nil {
		return x.PxeUrl
	}
	return ""
}

type GetSupportBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetSupportBundleRequest) Reset() {
	*x = GetSupportBundleRequest{}
	mi := &file_omni_management_management_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportBundleRequest) ProtoMessage() {}

func (x *GetSupportBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportBundleRequest.ProtoReflect.Descriptor instead.
func (*GetSupportBundleRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{19}
}

func (x *GetSupportBundleRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type GetSupportBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress   *GetSupportBundleResponse_Progress `protobuf:"bytes,1,opt,name=progress,proto3" json:"progress,omitempty"`
	BundleData []byte                             `protobuf:"bytes,2,opt,name=bundle_data,json=bundleData,proto3" json:"bundle_data,omitempty"`
}

func (x *GetSupportBundleResponse) Reset() {
	*x = GetSupportBundleResponse{}
	mi := &file_omni_management_management_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportBundleResponse) ProtoMessage() {}

func (x *GetSupportBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportBundleResponse.ProtoReflect.Descriptor instead.
func (*GetSupportBundleResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{20}
}

func (x *GetSupportBundleResponse) GetProgress() *GetSupportBundleResponse_Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GetSupportBundleResponse) GetBundleData() []byte {
	if x != nil {
		return x.BundleData
	}
	return nil
}

// specifies start and end time (inclusive range) in <year>-<month>-<day> format. We pass time as string to avoid timezone issues.
type ReadAuditLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ReadAuditLogRequest) Reset() {
	*x = ReadAuditLogRequest{}
	mi := &file_omni_management_management_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAuditLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAuditLogRequest) ProtoMessage() {}

func (x *ReadAuditLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAuditLogRequest.ProtoReflect.Descriptor instead.
func (*ReadAuditLogRequest) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{21}
}

func (x *ReadAuditLogRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ReadAuditLogRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ReadAuditLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditLog []byte `protobuf:"bytes,1,opt,name=audit_log,json=auditLog,proto3" json:"audit_log,omitempty"`
}

func (x *ReadAuditLogResponse) Reset() {
	*x = ReadAuditLogResponse{}
	mi := &file_omni_management_management_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAuditLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAuditLogResponse) ProtoMessage() {}

func (x *ReadAuditLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAuditLogResponse.ProtoReflect.Descriptor instead.
func (*ReadAuditLogResponse) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{22}
}

func (x *ReadAuditLogResponse) GetAuditLog() []byte {
	if x != nil {
		return x.AuditLog
	}
	return nil
}

type ListServiceAccountsResponse_ServiceAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                                                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PgpPublicKeys []*ListServiceAccountsResponse_ServiceAccount_PgpPublicKey `protobuf:"bytes,2,rep,name=pgp_public_keys,json=pgpPublicKeys,proto3" json:"pgp_public_keys,omitempty"`
	Role          string                                                     `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ListServiceAccountsResponse_ServiceAccount) Reset() {
	*x = ListServiceAccountsResponse_ServiceAccount{}
	mi := &file_omni_management_management_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceAccountsResponse_ServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceAccountsResponse_ServiceAccount) ProtoMessage() {}

func (x *ListServiceAccountsResponse_ServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceAccountsResponse_ServiceAccount.ProtoReflect.Descriptor instead.
func (*ListServiceAccountsResponse_ServiceAccount) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListServiceAccountsResponse_ServiceAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListServiceAccountsResponse_ServiceAccount) GetPgpPublicKeys() []*ListServiceAccountsResponse_ServiceAccount_PgpPublicKey {
	if x != nil {
		return x.PgpPublicKeys
	}
	return nil
}

func (x *ListServiceAccountsResponse_ServiceAccount) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ListServiceAccountsResponse_ServiceAccount_PgpPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Armored    string                 `protobuf:"bytes,2,opt,name=armored,proto3" json:"armored,omitempty"`
	Expiration *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *ListServiceAccountsResponse_ServiceAccount_PgpPublicKey) Reset() {
	*x = ListServiceAccountsResponse_ServiceAccount_PgpPublicKey{}
	mi := &file_omni_management_management_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceAccountsResponse_ServiceAccount_PgpPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceAccountsResponse_ServiceAccount_PgpPublicKey) ProtoMessage() {}

func (x *ListServiceAccountsResponse_ServiceAccount_PgpPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceAccountsResponse_ServiceAccount_PgpPublicKey.ProtoReflect.Descriptor instead.
func (*ListServiceAccountsResponse_ServiceAccount_PgpPublicKey) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *ListServiceAccountsResponse_ServiceAccount_PgpPublicKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListServiceAccountsResponse_ServiceAccount_PgpPublicKey) GetArmored() string {
	if x != nil {
		return x.Armored
	}
	return ""
}

func (x *ListServiceAccountsResponse_ServiceAccount_PgpPublicKey) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type GetSupportBundleResponse_Progress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	State  string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Total  int32  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Value  int32  `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetSupportBundleResponse_Progress) Reset() {
	*x = GetSupportBundleResponse_Progress{}
	mi := &file_omni_management_management_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportBundleResponse_Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportBundleResponse_Progress) ProtoMessage() {}

func (x *GetSupportBundleResponse_Progress) ProtoReflect() protoreflect.Message {
	mi := &file_omni_management_management_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportBundleResponse_Progress.ProtoReflect.Descriptor instead.
func (*GetSupportBundleResponse_Progress) Descriptor() ([]byte, []int) {
	return file_omni_management_management_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetSupportBundleResponse_Progress) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GetSupportBundleResponse_Progress) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetSupportBundleResponse_Progress) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetSupportBundleResponse_Progress) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSupportBundleResponse_Progress) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_omni_management_management_proto protoreflect.FileDescriptor

var file_omni_management_management_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6f, 0x6d, 0x6e, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x34, 0x0a, 0x12, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6b, 0x75, 0x62,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x37, 0x0a, 0x13, 0x54, 0x61, 0x6c, 0x6f, 0x73,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x34, 0x0a, 0x12, 0x4f, 0x6d, 0x6e, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6d, 0x6e, 0x69, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x6d, 0x6e, 0x69,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6a, 0x0a, 0x12, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x6e,
	0x65, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x47, 0x0a, 0x12, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x72, 0x65, 0x61, 0x6b, 0x5f, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xa4, 0x01, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16,
	0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x67, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x72,
	0x6d, 0x6f, 0x72, 0x65, 0x64, 0x50, 0x67, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x22, 0x42, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1a, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x72, 0x6d,
	0x6f, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x67, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x72, 0x6d, 0x6f, 0x72,
	0x65, 0x64, 0x50, 0x67, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x41,
	0x0a, 0x1b, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x22, 0x32, 0x0a, 0x1c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa4, 0x03, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0xa1, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x6b, 0x0a, 0x0f, 0x70, 0x67, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x50, 0x67, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x0d, 0x70,
	0x67, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x1a, 0x74, 0x0a, 0x0c, 0x50, 0x67, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xaf, 0x02, 0x0a,
	0x11, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x13, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74,
	0x74, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x74, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x44,
	0x0a, 0x21, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x22, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x1d, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x22, 0x90, 0x02, 0x0a,
	0x1e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x4d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x79,
	0x6e, 0x63, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66,
	0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x22, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x4f, 0x4c, 0x4c, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x22,
	0x96, 0x04, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x41, 0x72, 0x67, 0x73, 0x12, 0x53, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x61, 0x6c, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x12, 0x7a, 0x0a, 0x1b,
	0x73, 0x69, 0x64, 0x65, 0x72, 0x6f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x72, 0x6f, 0x6c, 0x69, 0x6e, 0x6b,
	0x47, 0x52, 0x50, 0x43, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x18,
	0x73, 0x69, 0x64, 0x65, 0x72, 0x6f, 0x6c, 0x69, 0x6e, 0x6b, 0x47, 0x72, 0x70, 0x63, 0x54, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x18, 0x53, 0x69, 0x64, 0x65, 0x72,
	0x6f, 0x6c, 0x69, 0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45,
	0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x55, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x78, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x78, 0x65, 0x55, 0x72, 0x6c, 0x22,
	0x33, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x22, 0x82, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x7a, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x52, 0x65, 0x61,
	0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x14, 0x52, 0x65,
	0x61, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x32,
	0x8b, 0x0a, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x6c, 0x6f, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x6c, 0x6f, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x4f, 0x6d, 0x6e, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x69, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x13, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x7b, 0x0a, 0x1a, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50,
	0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x17, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x12, 0x22,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x37, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x64, 0x65,
	0x72, 0x6f, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_omni_management_management_proto_rawDescOnce sync.Once
	file_omni_management_management_proto_rawDescData = file_omni_management_management_proto_rawDesc
)

func file_omni_management_management_proto_rawDescGZIP() []byte {
	file_omni_management_management_proto_rawDescOnce.Do(func() {
		file_omni_management_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_omni_management_management_proto_rawDescData)
	})
	return file_omni_management_management_proto_rawDescData
}

var file_omni_management_management_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_omni_management_management_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_omni_management_management_proto_goTypes = []any{
	(KubernetesSyncManifestResponse_ResponseType)(0),                // 0: management.KubernetesSyncManifestResponse.ResponseType
	(CreateSchematicRequest_SiderolinkGRPCTunnelMode)(0),            // 1: management.CreateSchematicRequest.SiderolinkGRPCTunnelMode
	(*KubeconfigResponse)(nil),                                      // 2: management.KubeconfigResponse
	(*TalosconfigResponse)(nil),                                     // 3: management.TalosconfigResponse
	(*OmniconfigResponse)(nil),                                      // 4: management.OmniconfigResponse
	(*MachineLogsRequest)(nil),                                      // 5: management.MachineLogsRequest
	(*ValidateConfigRequest)(nil),                                   // 6: management.ValidateConfigRequest
	(*TalosconfigRequest)(nil),                                      // 7: management.TalosconfigRequest
	(*CreateServiceAccountRequest)(nil),                             // 8: management.CreateServiceAccountRequest
	(*CreateServiceAccountResponse)(nil),                            // 9: management.CreateServiceAccountResponse
	(*RenewServiceAccountRequest)(nil),                              // 10: management.RenewServiceAccountRequest
	(*RenewServiceAccountResponse)(nil),                             // 11: management.RenewServiceAccountResponse
	(*DestroyServiceAccountRequest)(nil),                            // 12: management.DestroyServiceAccountRequest
	(*ListServiceAccountsResponse)(nil),                             // 13: management.ListServiceAccountsResponse
	(*KubeconfigRequest)(nil),                                       // 14: management.KubeconfigRequest
	(*KubernetesUpgradePreChecksRequest)(nil),                       // 15: management.KubernetesUpgradePreChecksRequest
	(*KubernetesUpgradePreChecksResponse)(nil),                      // 16: management.KubernetesUpgradePreChecksResponse
	(*KubernetesSyncManifestRequest)(nil),                           // 17: management.KubernetesSyncManifestRequest
	(*KubernetesSyncManifestResponse)(nil),                          // 18: management.KubernetesSyncManifestResponse
	(*CreateSchematicRequest)(nil),                                  // 19: management.CreateSchematicRequest
	(*CreateSchematicResponse)(nil),                                 // 20: management.CreateSchematicResponse
	(*GetSupportBundleRequest)(nil),                                 // 21: management.GetSupportBundleRequest
	(*GetSupportBundleResponse)(nil),                                // 22: management.GetSupportBundleResponse
	(*ReadAuditLogRequest)(nil),                                     // 23: management.ReadAuditLogRequest
	(*ReadAuditLogResponse)(nil),                                    // 24: management.ReadAuditLogResponse
	(*ListServiceAccountsResponse_ServiceAccount)(nil),              // 25: management.ListServiceAccountsResponse.ServiceAccount
	(*ListServiceAccountsResponse_ServiceAccount_PgpPublicKey)(nil), // 26: management.ListServiceAccountsResponse.ServiceAccount.PgpPublicKey
	nil, // 27: management.CreateSchematicRequest.MetaValuesEntry
	(*GetSupportBundleResponse_Progress)(nil), // 28: management.GetSupportBundleResponse.Progress
	(*durationpb.Duration)(nil),               // 29: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),             // 30: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                     // 31: google.protobuf.Empty
	(*common.Data)(nil),                       // 32: common.Data
}
var file_omni_management_management_proto_depIdxs = []int32{
	25, // 0: management.ListServiceAccountsResponse.service_accounts:type_name -> management.ListServiceAccountsResponse.ServiceAccount
	29, // 1: management.KubeconfigRequest.service_account_ttl:type_name -> google.protobuf.Duration
	0,  // 2: management.KubernetesSyncManifestResponse.response_type:type_name -> management.KubernetesSyncManifestResponse.ResponseType
	27, // 3: management.CreateSchematicRequest.meta_values:type_name -> management.CreateSchematicRequest.MetaValuesEntry
	1,  // 4: management.CreateSchematicRequest.siderolink_grpc_tunnel_mode:type_name -> management.CreateSchematicRequest.SiderolinkGRPCTunnelMode
	28, // 5: management.GetSupportBundleResponse.progress:type_name -> management.GetSupportBundleResponse.Progress
	26, // 6: management.ListServiceAccountsResponse.ServiceAccount.pgp_public_keys:type_name -> management.ListServiceAccountsResponse.ServiceAccount.PgpPublicKey
	30, // 7: management.ListServiceAccountsResponse.ServiceAccount.PgpPublicKey.expiration:type_name -> google.protobuf.Timestamp
	14, // 8: management.ManagementService.Kubeconfig:input_type -> management.KubeconfigRequest
	7,  // 9: management.ManagementService.Talosconfig:input_type -> management.TalosconfigRequest
	31, // 10: management.ManagementService.Omniconfig:input_type -> google.protobuf.Empty
	5,  // 11: management.ManagementService.MachineLogs:input_type -> management.MachineLogsRequest
	6,  // 12: management.ManagementService.ValidateConfig:input_type -> management.ValidateConfigRequest
	8,  // 13: management.ManagementService.CreateServiceAccount:input_type -> management.CreateServiceAccountRequest
	10, // 14: management.ManagementService.RenewServiceAccount:input_type -> management.RenewServiceAccountRequest
	31, // 15: management.ManagementService.ListServiceAccounts:input_type -> google.protobuf.Empty
	12, // 16: management.ManagementService.DestroyServiceAccount:input_type -> management.DestroyServiceAccountRequest
	15, // 17: management.ManagementService.KubernetesUpgradePreChecks:input_type -> management.KubernetesUpgradePreChecksRequest
	17, // 18: management.ManagementService.KubernetesSyncManifests:input_type -> management.KubernetesSyncManifestRequest
	19, // 19: management.ManagementService.CreateSchematic:input_type -> management.CreateSchematicRequest
	21, // 20: management.ManagementService.GetSupportBundle:input_type -> management.GetSupportBundleRequest
	23, // 21: management.ManagementService.ReadAuditLog:input_type -> management.ReadAuditLogRequest
	2,  // 22: management.ManagementService.Kubeconfig:output_type -> management.KubeconfigResponse
	3,  // 23: management.ManagementService.Talosconfig:output_type -> management.TalosconfigResponse
	4,  // 24: management.ManagementService.Omniconfig:output_type -> management.OmniconfigResponse
	32, // 25: management.ManagementService.MachineLogs:output_type -> common.Data
	31, // 26: management.ManagementService.ValidateConfig:output_type -> google.protobuf.Empty
	9,  // 27: management.ManagementService.CreateServiceAccount:output_type -> management.CreateServiceAccountResponse
	11, // 28: management.ManagementService.RenewServiceAccount:output_type -> management.RenewServiceAccountResponse
	13, // 29: management.ManagementService.ListServiceAccounts:output_type -> management.ListServiceAccountsResponse
	31, // 30: management.ManagementService.DestroyServiceAccount:output_type -> google.protobuf.Empty
	16, // 31: management.ManagementService.KubernetesUpgradePreChecks:output_type -> management.KubernetesUpgradePreChecksResponse
	18, // 32: management.ManagementService.KubernetesSyncManifests:output_type -> management.KubernetesSyncManifestResponse
	20, // 33: management.ManagementService.CreateSchematic:output_type -> management.CreateSchematicResponse
	22, // 34: management.ManagementService.GetSupportBundle:output_type -> management.GetSupportBundleResponse
	24, // 35: management.ManagementService.ReadAuditLog:output_type -> management.ReadAuditLogResponse
	22, // [22:36] is the sub-list for method output_type
	8,  // [8:22] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_omni_management_management_proto_init() }
func file_omni_management_management_proto_init() {
	if File_omni_management_management_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_omni_management_management_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_omni_management_management_proto_goTypes,
		DependencyIndexes: file_omni_management_management_proto_depIdxs,
		EnumInfos:         file_omni_management_management_proto_enumTypes,
		MessageInfos:      file_omni_management_management_proto_msgTypes,
	}.Build()
	File_omni_management_management_proto = out.File
	file_omni_management_management_proto_rawDesc = nil
	file_omni_management_management_proto_goTypes = nil
	file_omni_management_management_proto_depIdxs = nil
}
