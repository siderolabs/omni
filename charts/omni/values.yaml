# Default values for sidero-omni.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Override the deployment namespace; defaults to .Release.Namespace
namespaceOverride: ""

image:
  # -- Omni image host registry
  registry: ghcr.io
  # -- Omni image repository
  repository: siderolabs/omni
  # -- Omni image tag
  tag: v0.38.0
  # -- Omni image pull policy
  pullPolicy: IfNotPresent

# -- Additional imagePullSecrets
imagePullSecrets: []
# - name: regcred

# -- Number of pods of the deployment (only applies for Omni Deployment)
replicaCount: 1

omniAccount:
  # -- Additional configMap annotations
  annotations: {}
  # -- Generate a unique UUID.
  # -- This can be done with the following command: `uuidgen`.
  uuid: ""
  # -- Or use a existing configMap with uuid as key
  existingConfigMap: ""

# -- Additional deployment annotations
annotations: {}

tls:
  # -- Domain that is used by Omni
  domain: ""
  # -- existing Secret that contains the certificate and key
  existingTlsSecret: ""

etcd:
  # -- existing Secret that contains the ETCD encryption key
  encryptionKeySecret: ""

authentication:
  # -- There are 2 option for authentication. saml or auth0
  # -- Which authentication type
  type: saml
  auth0:
    # -- Auth0 Domain
    domain: ""
    # -- Auth0 Client ID
    clientId: ""
    # -- Email address
    initialUsersEmailAddress: ""
  saml:
    # -- SAML URL
    url: ""

wireguard:
  # -- IP Address of the public-ip, host or service that exposes wireguard
  ipAddr: ""

# -- Additional pod annotations
podAnnotations: {}
# -- Additional pod labels
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# -- Set the container security context
securityContext:
  capabilities:
    add:
    - NET_ADMIN

service:
  # -- Additional service annotations
  annotations: {}
  # -- Exposed services
  https:
    port: 443
    nodePort: 32443
  machineApi:
    port: 8090
    nodePort: 32090
  events:
    port: 8091
    nodePort: 32091
  k8sProxy:
    port: 8100
    nodePort: 32100
  wireguard:
    port: 50180
    nodePort: 32180
  # -- Type of service
  type: LoadBalancer
  # -- IP Address of the LoadBalancer
  loadBalancerIP: ""


persistence:
  # -- Enable persistence for the ETCD database
  enabled: true
  # -- Additional pvc annotations
  annotations: {}
  # -- Which AccessModes are used
  accessModes:
    - ReadWriteOnce
  accessMode: ReadWriteOnce
  # -- Size of the pvc
  size: 5Gi
  # -- Name of the StorageClass (If empty the default be used)
  storageClass: ""
  # -- Name of a existing PVC
  existingClaim: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

## Docker-in-docker configuration

dind:
  image:
    # -- Docker image host registry
    registry: docker.io
    # -- Docker image repository
    repository: docker
    # -- Docker image tag
    tag: 26.1.4-dind
    # -- Docker image pull policy
    pullPolicy: IfNotPresent

  # -- Set the container security context
  securityContext:
    privileged: true

  # -- Additional volumeMounts on the output Deployment definition.
  extraVolumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
