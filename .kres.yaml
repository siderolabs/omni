---
kind: auto.CommandConfig
name: omnictl
spec:
  disableImage: true
---
kind: auto.CommandConfig
name: acompat
spec:
  disableImage: true
---
kind: auto.CommandConfig
name: make-cookies
spec:
  disableImage: true
---
kind: auto.Helm
spec:
  enabled: true
  chartDir: deploy/helm/omni
---
kind: auto.IntegrationTests
spec:
  tests:
    - path: internal/integration
      name: integration-test
      enableDockerImage: true
      imageName: omni-integration-test
      outputs:
        linux-amd64:
          GOOS: linux
          GOARCH: amd64
        linux-arm64:
          GOOS: linux
          GOARCH: arm64
        darwin-amd64:
          GOOS: darwin
          GOARCH: amd64
        darwin-arm64:
          GOOS: darwin
          GOARCH: arm64
---
kind: common.GHWorkflow
spec:
  customRunnerGroup: large
---
kind: auto.CustomSteps
spec:
  steps:
    - name: docker-compose-up
      toplevel: true
    - name: docker-compose-down
      toplevel: true
    - name: mkcert-install
      toplevel: true
    - name: mkcert-generate
      toplevel: true
    - name: mkcert-uninstall
      toplevel: true
    - name: run-integration-test
      toplevel: true
      dependants:
        - coverage
---
kind: custom.Step
name: docker-compose-up
spec:
  makefile:
    enabled: true
    phony: true
    script:
      - >-
        ARTIFACTS="$(ARTIFACTS)"
        SHA="$(SHA)"
        TAG="$(TAG)"
        USERNAME="$(USERNAME)"
        REGISTRY="$(REGISTRY)"
        JS_TOOLCHAIN="$(JS_TOOLCHAIN)"
        PROTOBUF_TS_VERSION="$(PROTOBUF_TS_VERSION)"
        PROTOBUF_GRPC_GATEWAY_TS_VERSION="$(PROTOBUF_GRPC_GATEWAY_TS_VERSION)"
        NODE_BUILD_ARGS="$(NODE_BUILD_ARGS)"
        TOOLCHAIN="$(TOOLCHAIN)"
        CGO_ENABLED="$(CGO_ENABLED)"
        GO_BUILDFLAGS="$(GO_BUILDFLAGS)"
        GOLANGCILINT_VERSION="$(GOLANGCILINT_VERSION)"
        GOFUMPT_VERSION="$(GOFUMPT_VERSION)"
        GOIMPORTS_VERSION="$(GOIMPORTS_VERSION)"
        GOMOCK_VERSION="$(GOMOCK_VERSION)"
        PROTOBUF_GO_VERSION="$(PROTOBUF_GO_VERSION)"
        GRPC_GO_VERSION="$(GRPC_GO_VERSION)"
        GRPC_GATEWAY_VERSION="$(GRPC_GATEWAY_VERSION)"
        VTPROTOBUF_VERSION="$(VTPROTOBUF_VERSION)"
        DEEPCOPY_VERSION="$(DEEPCOPY_VERSION)"
        TESTPKGS="$(TESTPKGS)"
        COMPOSE_DOCKER_CLI_BUILD=1
        DOCKER_BUILDKIT=1
        GO_LDFLAGS="$(GO_LDFLAGS)"
        GOTOOLCHAIN="$(GOTOOLCHAIN)"
        GOEXPERIMENT="$(GOEXPERIMENT)"
        WITH_DEBUG="$(WITH_DEBUG)"
        docker compose --file ./hack/compose/docker-compose.yml --file ./hack/compose/docker-compose.override.yml up --build
---
kind: custom.Step
name: mkcert-generate
spec:
  makefile:
    enabled: true
    phony: true
    script:
      - >-
        go run ./hack/generate-certs -config ./hack/generate-certs.yml generate
---
kind: custom.Step
name: mkcert-install
spec:
  makefile:
    enabled: true
    phony: true
    script:
      - >-
        go run ./hack/generate-certs install
---
kind: custom.Step
name: mkcert-uninstall
spec:
  makefile:
    enabled: true
    phony: true
    script:
      - >-
        go run ./hack/generate-certs uninstall
---
kind: custom.Step
name: docker-compose-down
spec:
  makefile:
    enabled: true
    phony: true
    variables:
      - name: REMOVE_VOLUMES
        defaultValue: false
    script:
      - >-
        ARTIFACTS="$(ARTIFACTS)"
        SHA="$(SHA)"
        TAG="$(TAG)"
        USERNAME="$(USERNAME)"
        REGISTRY="$(REGISTRY)"
        JS_TOOLCHAIN="$(JS_TOOLCHAIN)"
        PROTOBUF_TS_VERSION="$(PROTOBUF_TS_VERSION)"
        PROTOBUF_GRPC_GATEWAY_TS_VERSION="$(PROTOBUF_GRPC_GATEWAY_TS_VERSION)"
        NODE_BUILD_ARGS="$(NODE_BUILD_ARGS)"
        TOOLCHAIN="$(TOOLCHAIN)"
        CGO_ENABLED="$(CGO_ENABLED)"
        GO_BUILDFLAGS="$(GO_BUILDFLAGS)"
        GOLANGCILINT_VERSION="$(GOLANGCILINT_VERSION)"
        GOFUMPT_VERSION="$(GOFUMPT_VERSION)"
        GOIMPORTS_VERSION="$(GOIMPORTS_VERSION)"
        GOMOCK_VERSION="$(GOMOCK_VERSION)"
        PROTOBUF_GO_VERSION="$(PROTOBUF_GO_VERSION)"
        GRPC_GO_VERSION="$(GRPC_GO_VERSION)"
        GRPC_GATEWAY_VERSION="$(GRPC_GATEWAY_VERSION)"
        VTPROTOBUF_VERSION="$(VTPROTOBUF_VERSION)"
        DEEPCOPY_VERSION="$(DEEPCOPY_VERSION)"
        TESTPKGS="$(TESTPKGS)"
        COMPOSE_DOCKER_CLI_BUILD=1
        DOCKER_BUILDKIT=1
        GO_LDFLAGS="$(GO_LDFLAGS)"
        GOTOOLCHAIN="$(GOTOOLCHAIN)"
        GOEXPERIMENT="$(GOEXPERIMENT)"
        WITH_DEBUG="$(WITH_DEBUG)"
        docker compose --file ./hack/compose/docker-compose.yml --file ./hack/compose/docker-compose.override.yml down --rmi local --remove-orphans --volumes=$(REMOVE_VOLUMES)
---
kind: custom.Step
name: run-integration-test
spec:
  sudoInCI: true
  makefile:
    enabled: true
    depends:
      - integration-test-linux-amd64
      - omnictl-linux-amd64
      - omni-linux-amd64
    script:
      - >-
        @hack/test/integration.sh
  ghaction:
    condition: on-pull-request
    enabled: true
    sops: true
    parallelJob:
      name: integration-test
      runnerGroup: large
    coverage:
      inputPaths:
        - coverage-emulator.txt
        - coverage-integration.txt
    artifacts:
      enabled: true
      extraPaths:
        - "!_out/etcd"
        - "!_out/secondary-storage/**"
      additional: # save the integration test artifacts: Talos logs, support bundles, etc.
        - name: integration-test
          always: true
          continueOnError: true
          paths:
            - "~/.talos/clusters/**/*.log"
            - "!~/.talos/clusters/**/swtpm.log"
            - ${{ github.workspace }}/integration-test
    environment:
      WITH_DEBUG: "true"
      WITH_RACE: "true"
      INTEGRATION_RUN_E2E_TEST: "true"
      INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|Auth|DefaultCluster|CLICommands)$"
      TALEMU_TEST_ARGS: "--test.run TestIntegration/Suites/(ImmediateClusterDestruction|EncryptedCluster|SinglenodeCluster|ScaleUpAndDown|ScaleUpAndDownMachineClassBasedMachineSets|TalosUpgrades|KubernetesUpgrades|MaintenanceUpgrade|ClusterTemplate|ScaleUpAndDownAutoProvisionMachineSets)$"
      RUN_TALEMU_TESTS: true
    jobs:
      - name: e2e-short-secureboot
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e-short-secureboot
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|TalosImageGeneration|ImmediateClusterDestruction|DefaultCluster|EncryptedCluster|SinglenodeCluster|Auth)$"
          RUN_TALEMU_TESTS: false
          ENABLE_SECUREBOOT: true
      - name: e2e-short
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-short
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|TalosImageGeneration|ImmediateClusterDestruction|DefaultCluster|EncryptedCluster|SinglenodeCluster|Auth)$"
          RUN_TALEMU_TESTS: false
      - name: e2e-scaling
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-scaling
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|ScaleUpAndDown|ScaleUpAndDownMachineClassBasedMachineSets|RollingUpdateParallelism)$"
          RUN_TALEMU_TESTS: false
      - name: e2e-forced-removal
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-forced-removal
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|ForcedMachineRemoval|ReplaceControlPlanes|ConfigPatching|KubernetesNodeAudit)$"
          RUN_TALEMU_TESTS: false
      - name: e2e-upgrades
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-upgrades
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|TalosUpgrades|KubernetesUpgrades|MaintenanceUpgrade)$"
          RUN_TALEMU_TESTS: false
      - name: e2e-templates
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-templates
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|ClusterTemplate)$"
          RUN_TALEMU_TESTS: false
      - name: e2e-backups
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-backups
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|EtcdBackupAndRestore)$"
          RUN_TALEMU_TESTS: false
      - name: e2e-workload-proxy
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-workload-proxy
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|WorkloadProxy)$"
          RUN_TALEMU_TESTS: false
      - name: e2e-omni-upgrade
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-omni-upgrade
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_PREPARE_TEST_ARGS: "--test.run TestIntegration/Suites/(CleanState|OmniUpgradePrepare)$"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/(OmniUpgradeVerify)$"
          RUN_TALEMU_TESTS: false
      - name: e2e-cluster-import
        crons:
          - '30 1 * * *'
        runnerGroup: large
        triggerLabels:
          - integration/e2e
          - integration/e2e-cluster-import
        artifacts:
          skipArtifactDownload: true
        environmentOverride:
          INTEGRATION_RUN_E2E_TEST: "false"
          INTEGRATION_TEST_ARGS: "--test.run TestIntegration/Suites/ClusterImport"
          RUN_TALEMU_TESTS: false
          CREATE_TALOS_CLUSTER: true
---
kind: common.Build
spec:
  ignoredPaths:
    - "hack/generate-certs.yml"
    - "hack/generate-certs/ca-root"
    - "hack/generate-certs/certs"
    - "hack/compose/docker-compose.override.yml"
    - go.work.sum
---
kind: common.SOPS
spec:
  enabled: true
  config: |-
    creation_rules:
      - age: age1xrpa9ujxxcj2u2gzfrzv8mxak4rts94a6y60ypurv6rs5cpr4e4sg95f0k
        # order: Andrey, Noel, Artem, Utku, Edward
        pgp: >-
          4F8E31286D7997C9625C6F7B322C6F63F594CE7C,
          CC51116A94490FA6FB3C18EB2401FCAE863A06CA,
          77D901DDCB59376D9E4131279BAC0E08F5067BB8,
          11177A43C6E3752E682AC690DBD13117B0A14E93,
          484DF208A16D4E209D686E9D65558E016966977A
---
kind: golang.Build
name: omni
spec:
  outputs:
    linux-amd64:
      GOOS: linux
      GOARCH: amd64
    linux-arm64:
      GOOS: linux
      GOARCH: arm64
    darwin-amd64:
      GOOS: darwin
      GOARCH: amd64
    darwin-arm64:
      GOOS: darwin
      GOARCH: arm64
---
kind: golang.Build
name: omnictl
spec:
  outputs:
    linux-amd64:
      GOOS: linux
      GOARCH: amd64
    linux-arm64:
      GOOS: linux
      GOARCH: arm64
    darwin-amd64:
      GOOS: darwin
      GOARCH: amd64
    darwin-arm64:
      GOOS: darwin
      GOARCH: arm64
    windows-amd64.exe:
      GOOS: windows
      GOARCH: amd64
---
kind: golang.Generate
spec:
  versionPackagePath: internal/version
  licenseText: |
    Copyright (c) 2025 Sidero Labs, Inc.

    Use of this software is governed by the Business Source License
    included in the LICENSE file.
---
kind: golang.Generate
spec:
  baseSpecPath: /client/api
  goGenerateSpecs:
    - source: ./internal
      copy:
        - frontend/
        - internal/backend/runtime/omni/controllers/omni/
  vtProtobufEnabled: true
  specs:
    - source: client/api/common/omni.proto
      subdirectory: common
    - source: client/api/omni/resources/resources.proto
      subdirectory: omni/resources
      genGateway: true
    - source: client/api/omni/management/management.proto
      subdirectory: omni/management
      genGateway: true
    - source: client/api/omni/oidc/oidc.proto
      subdirectory: omni/oidc
      genGateway: true
    - source: client/api/omni/specs/auth.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/infra.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/virtual.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/ephemeral.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/oidc.proto # not used in the frontend
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/omni.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/siderolink.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/system.proto
      subdirectory: omni/specs
      genGateway: true
    - source: https://raw.githubusercontent.com/googleapis/googleapis/master/google/rpc/status.proto
      subdirectory: google/rpc/
      genGateway: true
    - source: https://raw.githubusercontent.com/siderolabs/talos/v1.11.2/api/common/common.proto
      subdirectory: common/
      genGateway: true
    - source: https://raw.githubusercontent.com/siderolabs/talos/v1.11.2/api/machine/machine.proto
      subdirectory: talos/machine/
      genGateway: true
    - source: https://raw.githubusercontent.com/cosi-project/specification/a25fac056c642b32468b030387ab94c17bc3ba1d/proto/v1alpha1/resource.proto
      subdirectory: v1alpha1
      genGateway: true
---
kind: golang.GolangciLint
spec:
  depguardExtraRules:
    prevent_sync_errgroup:
      list-mode: lax
      files:
        - $all
        - "!$test"
        - "!**/integration-test/**"
        - "!**/omnictl/**"
        - "!**/panichandler/**"
      deny:
        - pkg: golang.org/x/sync/errgroup
          desc: Use github.com/siderolabs/omni/client/pkg/panichandler.ErrGroup instead
---
kind: js.Build
spec:
  licenseText: |
    Copyright (c) 2025 Sidero Labs, Inc.

    Use of this software is governed by the Business Source License
    included in the LICENSE file.
---
kind: js.Protobuf
spec:
  baseSpecPath: /client/api
  files:
     - source: https://raw.githubusercontent.com/siderolabs/talos/v1.11.2/pkg/machinery/config/schemas/config.schema.json
       destination: frontend/src/schemas/config.schema.json
  destinationRoot: src/api
  specs:
    - source: client/api/common/omni.proto
      subdirectory: common
      genGateway: true
    - source: client/api/omni/resources/resources.proto
      subdirectory: omni/resources
      genGateway: true
    - source: client/api/omni/management/management.proto
      subdirectory: omni/management
      genGateway: true
    - source: client/api/omni/oidc/oidc.proto
      subdirectory: omni/oidc
      genGateway: true
    - source: https://raw.githubusercontent.com/siderolabs/go-api-signature/184f94d36cdd4d8bf8770ef629191f63187d63da/api/auth/auth.proto
      subdirectory: omni/auth
      genGateway: true
    - source: client/api/omni/specs/omni.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/siderolink.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/system.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/auth.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/infra.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/virtual.proto
      subdirectory: omni/specs
      genGateway: true
    - source: client/api/omni/specs/ephemeral.proto
      subdirectory: omni/specs
      genGateway: true
    - source: https://raw.githubusercontent.com/googleapis/googleapis/master/google/rpc/status.proto
      subdirectory: google/rpc/
      genGateway: true
    - source: https://raw.githubusercontent.com/siderolabs/talos/v1.11.2/api/machine/machine.proto
      subdirectory: talos/machine
      genGateway: true
    - source: https://raw.githubusercontent.com/protocolbuffers/protobuf/master/src/google/protobuf/any.proto
      subdirectory: google/protobuf/
      genGateway: true
    - source: https://raw.githubusercontent.com/protocolbuffers/protobuf/master/src/google/protobuf/duration.proto
      subdirectory: google/protobuf/
      genGateway: true
    - source: https://raw.githubusercontent.com/protocolbuffers/protobuf/master/src/google/protobuf/empty.proto
      subdirectory: google/protobuf/
      genGateway: true
    - source: https://raw.githubusercontent.com/protocolbuffers/protobuf/master/src/google/protobuf/timestamp.proto
      subdirectory: google/protobuf/
      genGateway: true
    - source: https://raw.githubusercontent.com/googleapis/googleapis/master/google/rpc/code.proto
      subdirectory: google/rpc/
      genGateway: true
    - source: https://raw.githubusercontent.com/siderolabs/talos/v1.11.2/api/common/common.proto
      subdirectory: common/
      genGateway: true
    - source: https://raw.githubusercontent.com/cosi-project/specification/a25fac056c642b32468b030387ab94c17bc3ba1d/proto/v1alpha1/resource.proto
      subdirectory: v1alpha1
      genGateway: true
---
kind: common.Release
name: release
spec:
  artifacts:
    - omnictl-*
    - omni-*
---
kind: common.Image
name: image-omni
spec:
  extraEnvironment:
    PLATFORM: linux/amd64,linux/arm64
  copyFrom:
    - stage: omnictl-all
      name: omnictl-all
      destination: /omnictl/
---
kind: service.CodeCov
spec:
  enabled: true
  targetThreshold: 15
---
kind: common.Repository
spec:
  licenses:
    - id: BSL-1.1
      params:
        Licensor: Sidero Labs, Inc.
        LicensedWork: Omni
        Copyright: (c) 2025 Sidero Labs, Inc.
        ChangeDate: "2029-09-25"
        ChangeLicense: Mozilla Public License, version 2.0
        EnterpriseLink: https://www.siderolabs.com/contact/
      header: |
        // Copyright (c) 2025 Sidero Labs, Inc.
        //
        // Use of this software is governed by the Business Source License
        // included in the LICENSE file.

    - id: MPL-2.0
      root: client
      header: |
        // This Source Code Form is subject to the terms of the Mozilla Public
        // License, v. 2.0. If a copy of the MPL was not distributed with this
        // file, You can obtain one at http://mozilla.org/MPL/2.0/.
  licenseChecks:
    - root: "."
      header: |
        // Copyright (c) 2025 Sidero Labs, Inc.
        //
        // Use of this software is governed by the Business Source License
        // included in the LICENSE file.
      includeSuffixes:
        - .go
        - .ts
        - .js
      excludeSuffixes:
        - .pb.go
        - .pb.gw.go
        - .pb.ts
        - mockServiceWorker.js
      skipPaths:
        - .git
        - testdata/
        - client/
        - frontend/node_modules/
        - internal/pkg/kubernetes/resource/ # contains a file copied from kubectl

    - root: client
      header: |
        // This Source Code Form is subject to the terms of the Mozilla Public
        // License, v. 2.0. If a copy of the MPL was not distributed with this
        // file, You can obtain one at http://mozilla.org/MPL/2.0/

    - root: frontend/
      header: |
        <!--
        Copyright (c) 2025 Sidero Labs, Inc.

        Use of this software is governed by the Business Source License
        included in the LICENSE file.
        -->
      includeSuffixes:
        - .vue
      skipPaths:
        - node_modules/
  enforceContexts:
    - e2e-short
    - e2e-scaling
    - e2e-templates
    - e2e-upgrades
    - e2e-backups
    - e2e-forced-removal
